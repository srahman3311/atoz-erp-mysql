[{"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\index.js":"1","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Profile\\Profile.js":"2","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Navbars\\Navbar.js":"3","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Navbars\\SideNav.js":"4","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Profile\\ProfileDetails.js":"5","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Profile\\ProfileEdit.js":"6","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Home\\Home.js":"7","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Home\\Login.js":"8","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Dashboard\\Dashboard.js":"9","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Jobs\\Jobs.js":"10","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Expenses\\Expenses.js":"11","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Materials\\Materials.js":"12","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Subheads\\Subheads.js":"13","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Jobs\\JobModal.js":"14","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Subheads\\SubheadModal.js":"15","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Materials\\MaterialModal.js":"16","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Payorders\\Payorders.js":"17","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Payorders\\PayorderModal.js":"18","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Payorders\\PayorderTable.js":"19","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Jobs\\JobTable.js":"20","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Materials\\MaterialTable.js":"21","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Subheads\\SubheadTable.js":"22","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\App.js":"23","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Expenses\\ExpensesModal.js":"24","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Expenses\\ExpensesTable.js":"25","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Profile\\BasicInfo.js":"26","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Profile\\ProfileImage.js":"27","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Profile\\ProfileOtherInfo.js":"28","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Profile\\OtherInfo.js":"29","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\UserList\\Users.js":"30","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\Inputs\\SelectInput.js":"31","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\Inputs\\Input.js":"32","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\Inputs\\NumberInput.js":"33","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\Inputs\\ListInput.js":"34","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\list-title\\Title.js":"35","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\others\\ModalButton.js":"36","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\export-buttons\\Export.js":"37","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\views\\NextPrevView.js":"38","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\views\\ViewLimitSearch.js":"39","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\inputs\\ListInput.js":"40","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\inputs\\SelectInput.js":"41","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\inputs\\Input.js":"42","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\inputs\\NumberInput.js":"43","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\UserList\\List\\UserList.js":"44","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\UserList\\List\\UserListBody.js":"45","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\UserList\\List\\UserListHeader.js":"46","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\tr-td\\NoDataTR.js":"47","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\tr-td\\ActionTD.js":"48","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\inputs\\DateInput.js":"49","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\UserList\\List\\UserListData.js":"50","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\inputs\\PasswordInput.js":"51","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\UserList\\Modal\\UserModal.js":"52","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\image-uploader\\ImageUploader.js":"53","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\UserList\\Modal\\PasswordModal.js":"54","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\delete-prompt-modal\\DeleteModal.js":"55","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\tr-td\\UserActionTD.js":"56","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\index.js":"57","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\App.js":"58","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Dashboard\\Dashboard.js":"59","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Profile\\Profile.js":"60","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Jobs\\JobModal.js":"61","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Payorders\\PayorderModal.js":"62","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Materials\\MaterialModal.js":"63","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\views\\ViewLimitSearch.js":"64","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\views\\NextPrevView.js":"65","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\others\\ModalButton.js":"66","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\export-buttons\\Export.js":"67","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\delete-prompt-modal\\DeleteModal.js":"68","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\tr-td\\ActionTD.js":"69","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\inputs\\PasswordInput.js":"70","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\image-uploader\\ImageUploader.js":"71","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\tr-td\\NoDataTR.js":"72","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\tr-td\\UserActionTD.js":"73","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Jobs\\JobList.js":"74","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Navigation\\MainNav.js":"75","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Payorders\\PayorderList.js":"76","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Navigation\\SideNav.js":"77","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Login\\Login.js":"78","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Login\\LoginHeader.js":"79","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\job_contex\\jobReducer.js":"80","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Users\\UserList.js":"81","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\user_context\\userReducer.js":"82","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Jobs\\JobListHeader.js":"83","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Jobs\\JobListBody.js":"84","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Auth\\Auth.js":"85","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Login\\LoginTextInput.js":"86","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Login\\LoginPasswordInput.js":"87","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\common_contexts\\CommonContext.js":"88","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\list-title\\ListTitle.js":"89","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\inputs\\SelectInput.js":"90","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\inputs\\NumberInput.js":"91","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\types\\types.js":"92","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\job_contex\\JobContext.js":"93","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\expense_context\\ExpenseContext.js":"94","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Expenses\\ExpenseList.js":"95","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Expenses\\ExpenseListHeader.js":"96","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Expenses\\ExpenseListBody.js":"97","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\expense_context\\expenseReducer.js":"98","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Expenses\\ExpenseModal.js":"99","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\inputs\\DateInput.js":"100","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\inputs\\ListInput.js":"101","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\user_context\\UserContext.js":"102","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Users\\UserModal.js":"103","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Users\\UserListHeader.js":"104","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Users\\UserListBody.js":"105","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Users\\ImageUploader.js":"106","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\payorder_context\\PayorderContext.js":"107","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\payorder_context\\payorderReducer.js":"108","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Payorders\\PayorderListHeader.js":"109","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Payorders\\PayorderListBody.js":"110","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Users\\UserPasswordInput.js":"111","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\ExpenseReport\\ExpenseReport.js":"112","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\ExpenseReport\\Input.js":"113","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\job_report_context\\JobReportContext.js":"114","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\job_report_context\\jobReportReducer.js":"115","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\ExpenseReport\\ReportListHeader.js":"116","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\ExpenseReport\\ReportListBody.js":"117","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\ExpenseReport\\ReportList.js":"118","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Materials\\MaterialList.js":"119","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Materials\\MaterialListHeader.js":"120","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Materials\\MaterialListBody.js":"121","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\material_context\\MaterialContext.js":"122","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\material_context\\materialReducer.js":"123","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\subhead_context\\SubheadContext.js":"124","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Subheads\\SubheadList.js":"125","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\subhead_context\\subheadReducer.js":"126","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Subheads\\SubheadListHeader.js":"127","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Subheads\\SubheadListBody.js":"128","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Subheads\\SubheadModal.js":"129","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\inputs\\UserPasswordInput.js":"130","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\user-info\\profile-add-update\\PicturePreview.js":"131","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\user-info\\profile-add-update\\FileInput.js":"132","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\user-info\\profile-add-update\\GeneralInfo.js":"133","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\user-info\\profile-add-update\\UsernameInfo.js":"134","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\user-info\\profile-add-update\\PasswordInfo.js":"135","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\user-info\\profile-info\\ProfileImage.js":"136","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\user-info\\profile-info\\UserDetails.js":"137","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\user-info\\profile-info\\UserDataTR.js":"138","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\inputs\\UserTextInput.js":"139","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\inputs\\UserSelectInput.js":"140","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\inputs\\TextInput.js":"141","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Credits\\CreditList.js":"142","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\credit_context\\CreditContext.js":"143","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Credits\\CreditListHeader.js":"144","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Credits\\CreditModal.js":"145","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Credits\\CreditListBody.js":"146","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\credit_context\\creditReducer.js":"147"},{"size":149,"mtime":1613790659983,"results":"148","hashOfConfig":"149"},{"size":8432,"mtime":1617204313442,"results":"150","hashOfConfig":"149"},{"size":4046,"mtime":1617203961535,"results":"151","hashOfConfig":"149"},{"size":1262,"mtime":1613834445895,"results":"152","hashOfConfig":"149"},{"size":802,"mtime":1615654757196,"results":"153","hashOfConfig":"149"},{"size":922,"mtime":1611332848480,"results":"154","hashOfConfig":"149"},{"size":1810,"mtime":1613790280750,"results":"155","hashOfConfig":"149"},{"size":1067,"mtime":1616428110949,"results":"156","hashOfConfig":"149"},{"size":1393,"mtime":1613833582514,"results":"157","hashOfConfig":"149"},{"size":12371,"mtime":1616511807961,"results":"158","hashOfConfig":"149"},{"size":16895,"mtime":1616511768546,"results":"159","hashOfConfig":"149"},{"size":11836,"mtime":1616511807961,"results":"160","hashOfConfig":"149"},{"size":11617,"mtime":1616511807961,"results":"161","hashOfConfig":"149"},{"size":2017,"mtime":1616427932949,"results":"162","hashOfConfig":"149"},{"size":1013,"mtime":1616512509553,"results":"163","hashOfConfig":"149"},{"size":1336,"mtime":1616430605538,"results":"164","hashOfConfig":"149"},{"size":13944,"mtime":1616511807961,"results":"165","hashOfConfig":"149"},{"size":2915,"mtime":1616430582297,"results":"166","hashOfConfig":"149"},{"size":2860,"mtime":1616429359081,"results":"167","hashOfConfig":"149"},{"size":2204,"mtime":1616429327261,"results":"168","hashOfConfig":"149"},{"size":1687,"mtime":1616429335197,"results":"169","hashOfConfig":"149"},{"size":1585,"mtime":1616429344212,"results":"170","hashOfConfig":"149"},{"size":1329,"mtime":1617204348313,"results":"171","hashOfConfig":"149"},{"size":4882,"mtime":1616430808315,"results":"172","hashOfConfig":"149"},{"size":3134,"mtime":1616429304385,"results":"173","hashOfConfig":"149"},{"size":591,"mtime":1615732408321,"results":"174","hashOfConfig":"149"},{"size":256,"mtime":1616333138785,"results":"175","hashOfConfig":"149"},{"size":946,"mtime":1615989021087,"results":"176","hashOfConfig":"149"},{"size":232,"mtime":1615736563420,"results":"177","hashOfConfig":"149"},{"size":15086,"mtime":1617212967015,"results":"178","hashOfConfig":"149"},{"size":840,"mtime":1616333981678,"results":"179","hashOfConfig":"149"},{"size":719,"mtime":1616339200239,"results":"180","hashOfConfig":"149"},{"size":727,"mtime":1616339196873,"results":"181","hashOfConfig":"149"},{"size":1350,"mtime":1616342574482,"results":"182","hashOfConfig":"149"},{"size":182,"mtime":1616427932949,"results":"183","hashOfConfig":"149"},{"size":269,"mtime":1616427693451,"results":"184","hashOfConfig":"149"},{"size":388,"mtime":1616427711331,"results":"185","hashOfConfig":"149"},{"size":2314,"mtime":1616427267351,"results":"186","hashOfConfig":"149"},{"size":705,"mtime":1616427264018,"results":"187","hashOfConfig":"149"},{"size":1350,"mtime":1616342574482,"results":"188","hashOfConfig":"149"},{"size":828,"mtime":1616739687943,"results":"189","hashOfConfig":"149"},{"size":707,"mtime":1617206571145,"results":"190","hashOfConfig":"149"},{"size":727,"mtime":1616598351427,"results":"191","hashOfConfig":"149"},{"size":622,"mtime":1617212134410,"results":"192","hashOfConfig":"149"},{"size":733,"mtime":1617212151048,"results":"193","hashOfConfig":"149"},{"size":441,"mtime":1616511156574,"results":"194","hashOfConfig":"149"},{"size":192,"mtime":1616427354852,"results":"195","hashOfConfig":"149"},{"size":715,"mtime":1617212113507,"results":"196","hashOfConfig":"149"},{"size":608,"mtime":1616598393176,"results":"197","hashOfConfig":"149"},{"size":751,"mtime":1617212194729,"results":"198","hashOfConfig":"149"},{"size":503,"mtime":1616739712216,"results":"199","hashOfConfig":"149"},{"size":5856,"mtime":1617212581848,"results":"200","hashOfConfig":"149"},{"size":1761,"mtime":1617212647448,"results":"201","hashOfConfig":"149"},{"size":633,"mtime":1616511714935,"results":"202","hashOfConfig":"149"},{"size":619,"mtime":1616511149221,"results":"203","hashOfConfig":"149"},{"size":723,"mtime":1616512385411,"results":"204","hashOfConfig":"149"},{"size":149,"mtime":1613790659983,"results":"205","hashOfConfig":"206"},{"size":3859,"mtime":1625675073052,"results":"207","hashOfConfig":"206"},{"size":1168,"mtime":1623689294144,"results":"208","hashOfConfig":"206"},{"size":6487,"mtime":1625329316326,"results":"209","hashOfConfig":"206"},{"size":2401,"mtime":1625500850855,"results":"210","hashOfConfig":"206"},{"size":4174,"mtime":1625501700343,"results":"211","hashOfConfig":"206"},{"size":2324,"mtime":1625503158539,"results":"212","hashOfConfig":"206"},{"size":788,"mtime":1618850168679,"results":"213","hashOfConfig":"206"},{"size":2646,"mtime":1619097069383,"results":"214","hashOfConfig":"206"},{"size":269,"mtime":1618586122374,"results":"215","hashOfConfig":"206"},{"size":394,"mtime":1617974845593,"results":"216","hashOfConfig":"206"},{"size":929,"mtime":1619888571380,"results":"217","hashOfConfig":"206"},{"size":715,"mtime":1618247037388,"results":"218","hashOfConfig":"206"},{"size":599,"mtime":1619353621290,"results":"219","hashOfConfig":"206"},{"size":1761,"mtime":1617212647448,"results":"220","hashOfConfig":"206"},{"size":269,"mtime":1618159268919,"results":"221","hashOfConfig":"206"},{"size":723,"mtime":1616512385411,"results":"222","hashOfConfig":"206"},{"size":8663,"mtime":1622476759283,"results":"223","hashOfConfig":"206"},{"size":4093,"mtime":1625066880433,"results":"224","hashOfConfig":"206"},{"size":9687,"mtime":1622476504589,"results":"225","hashOfConfig":"206"},{"size":1891,"mtime":1625675107859,"results":"226","hashOfConfig":"206"},{"size":3400,"mtime":1625224981438,"results":"227","hashOfConfig":"206"},{"size":323,"mtime":1617814796208,"results":"228","hashOfConfig":"206"},{"size":4061,"mtime":1619100356135,"results":"229","hashOfConfig":"206"},{"size":11657,"mtime":1625502488185,"results":"230","hashOfConfig":"206"},{"size":4266,"mtime":1625215012510,"results":"231","hashOfConfig":"206"},{"size":500,"mtime":1617723427605,"results":"232","hashOfConfig":"206"},{"size":2089,"mtime":1618934437960,"results":"233","hashOfConfig":"206"},{"size":250,"mtime":1617890436368,"results":"234","hashOfConfig":"206"},{"size":420,"mtime":1618240628448,"results":"235","hashOfConfig":"206"},{"size":428,"mtime":1625224984486,"results":"236","hashOfConfig":"206"},{"size":494,"mtime":1625066710063,"results":"237","hashOfConfig":"206"},{"size":182,"mtime":1617977781992,"results":"238","hashOfConfig":"206"},{"size":860,"mtime":1625503232280,"results":"239","hashOfConfig":"206"},{"size":747,"mtime":1625503232280,"results":"240","hashOfConfig":"206"},{"size":422,"mtime":1618507074350,"results":"241","hashOfConfig":"206"},{"size":5295,"mtime":1619274340247,"results":"242","hashOfConfig":"206"},{"size":5701,"mtime":1619113159198,"results":"243","hashOfConfig":"206"},{"size":12176,"mtime":1625416847595,"results":"244","hashOfConfig":"206"},{"size":680,"mtime":1619189760551,"results":"245","hashOfConfig":"206"},{"size":2697,"mtime":1619189760551,"results":"246","hashOfConfig":"206"},{"size":4123,"mtime":1619106873841,"results":"247","hashOfConfig":"206"},{"size":5621,"mtime":1625500969254,"results":"248","hashOfConfig":"206"},{"size":645,"mtime":1625503229977,"results":"249","hashOfConfig":"206"},{"size":1634,"mtime":1625503232280,"results":"250","hashOfConfig":"206"},{"size":8565,"mtime":1624630745784,"results":"251","hashOfConfig":"206"},{"size":3042,"mtime":1625502492013,"results":"252","hashOfConfig":"206"},{"size":476,"mtime":1619279873432,"results":"253","hashOfConfig":"206"},{"size":2271,"mtime":1619279984592,"results":"254","hashOfConfig":"206"},{"size":1759,"mtime":1623775350215,"results":"255","hashOfConfig":"206"},{"size":5712,"mtime":1621172806118,"results":"256","hashOfConfig":"206"},{"size":4131,"mtime":1621173226470,"results":"257","hashOfConfig":"206"},{"size":614,"mtime":1619444582781,"results":"258","hashOfConfig":"206"},{"size":2711,"mtime":1619444921132,"results":"259","hashOfConfig":"206"},{"size":522,"mtime":1619618894291,"results":"260","hashOfConfig":"206"},{"size":12855,"mtime":1622563441945,"results":"261","hashOfConfig":"206"},{"size":360,"mtime":1621171128993,"results":"262","hashOfConfig":"206"},{"size":573,"mtime":1621790395701,"results":"263","hashOfConfig":"206"},{"size":519,"mtime":1621789931552,"results":"264","hashOfConfig":"206"},{"size":564,"mtime":1622036485642,"results":"265","hashOfConfig":"206"},{"size":2734,"mtime":1621871954221,"results":"266","hashOfConfig":"206"},{"size":2480,"mtime":1621962226246,"results":"267","hashOfConfig":"206"},{"size":8582,"mtime":1622476504634,"results":"268","hashOfConfig":"206"},{"size":342,"mtime":1622126448256,"results":"269","hashOfConfig":"206"},{"size":2201,"mtime":1622126448243,"results":"270","hashOfConfig":"206"},{"size":5450,"mtime":1622134122875,"results":"271","hashOfConfig":"206"},{"size":4127,"mtime":1622132004594,"results":"272","hashOfConfig":"206"},{"size":5387,"mtime":1622302415959,"results":"273","hashOfConfig":"206"},{"size":7997,"mtime":1622476952926,"results":"274","hashOfConfig":"206"},{"size":4113,"mtime":1622302293947,"results":"275","hashOfConfig":"206"},{"size":276,"mtime":1622304900594,"results":"276","hashOfConfig":"206"},{"size":2029,"mtime":1622305848710,"results":"277","hashOfConfig":"206"},{"size":1587,"mtime":1625502323574,"results":"278","hashOfConfig":"206"},{"size":766,"mtime":1625224848140,"results":"279","hashOfConfig":"206"},{"size":311,"mtime":1625328796176,"results":"280","hashOfConfig":"206"},{"size":408,"mtime":1625329314188,"results":"281","hashOfConfig":"206"},{"size":2039,"mtime":1625225876148,"results":"282","hashOfConfig":"206"},{"size":720,"mtime":1625225168124,"results":"283","hashOfConfig":"206"},{"size":1756,"mtime":1625328985604,"results":"284","hashOfConfig":"206"},{"size":258,"mtime":1625211831577,"results":"285","hashOfConfig":"206"},{"size":940,"mtime":1624982235754,"results":"286","hashOfConfig":"206"},{"size":197,"mtime":1625211875400,"results":"287","hashOfConfig":"206"},{"size":740,"mtime":1625225085353,"results":"288","hashOfConfig":"206"},{"size":902,"mtime":1625225201454,"results":"289","hashOfConfig":"206"},{"size":743,"mtime":1625502576594,"results":"290","hashOfConfig":"206"},{"size":9865,"mtime":1625587043077,"results":"291","hashOfConfig":"206"},{"size":5469,"mtime":1625676313513,"results":"292","hashOfConfig":"206"},{"size":364,"mtime":1625587314026,"results":"293","hashOfConfig":"206"},{"size":2823,"mtime":1625587860774,"results":"294","hashOfConfig":"206"},{"size":2199,"mtime":1625587261576,"results":"295","hashOfConfig":"206"},{"size":4109,"mtime":1625589187403,"results":"296","hashOfConfig":"206"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},"qian9v",{"filePath":"300","messages":"301","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"299"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"299"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"299"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"299"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"299"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"299"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"299"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"299"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"299"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"299"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"299"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"299"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"299"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"299"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"299"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"299"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"299"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"378"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"299"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"430"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},"1bh9ay2",{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"433"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"433"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"433"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"461"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"464"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"471","messages":"472","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"433"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"433"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"433"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"433"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"433"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"433"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"433"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"568","usedDeprecatedRules":"433"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"571","usedDeprecatedRules":"433"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"433"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593","usedDeprecatedRules":"433"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"433"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\index.js",[],["630","631"],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Profile\\Profile.js",["632","633","634","635","636","637","638"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\nimport axios from \"axios\";\r\n\r\n// to access dynamic user details\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Child Components\r\nimport Navbar from \"../Navbars/Navbar\";\r\nimport SideNav from \"../Navbars/SideNav\";\r\n// import ProfileDetails from \"./ProfileDetails\";\r\n//import ProfileEdit from \"./ProfileEdit\";\r\nimport { ProfileImage } from \"./ProfileImage\";\r\nimport { BasicInfo } from \"./BasicInfo\";\r\nimport { ProfileOtherInfo } from \"./ProfileOtherInfo\";\r\n\r\n// import AddForm from \"../Users/AddForm\";\r\n\r\n// Styling\r\nimport \"./Profile.css\";\r\n\r\nconst Profile = () => {\r\n\r\n    const history = useHistory();\r\n    const cookies = new Cookies();\r\n    const jwtToken = cookies.get(\"jwtToken\");\r\n    // slug here accesses the dynamic username\r\n    let { slug } = useParams();\r\n    // States\r\n    const [error, setError] = useState(false);\r\n    const [user, setUser] = useState({});\r\n    const [file, setFile] = useState(null);\r\n    const [filename, setFilename] = useState(\"\");\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const [isUploading, setIsUploading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios.post(\"http://localhost:3030/api/users/user\", {username: slug})\r\n            .then(res => {\r\n                setUser(res.data);\r\n                setFile(res.data.imgUrl);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    //const [userID, setUserID] = useState(0);\r\n    const [userInfo, setUserInfo] = useState({\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        username: \"\",\r\n        designation: \"\",\r\n        role: \"\",\r\n        status: \"\",\r\n        password: \"\",\r\n        password2: \"\"\r\n    });\r\n\r\n\r\n  function onChange(e) {\r\n    setUserInfo(prev => {\r\n      return {...prev, [e.target.name]: e.target.value};\r\n    });\r\n  }\r\n\r\n\r\n  const editUser = event => {\r\n\r\n    setFilename(user.filename);\r\n    //setFile(user.imgUrl);\r\n    setUserInfo(prev => {\r\n        return {\r\n            ...prev,\r\n            first_name: user.first_name,\r\n            last_name: user.last_name,\r\n            username: user.username,\r\n            designation: user.designation,\r\n            role: user.role,\r\n            status: user.status\r\n        }\r\n    });\r\n\r\n    setEditMode(true);\r\n    alert(\"If you don't want to change the password then just leave the password input fields empty\");\r\n\r\n    /*\r\n    const userUniqueName = event.target.value;\r\n    axios.post(\"http://localhost:3030/api/users/user\", {username: userUniqueName})\r\n      .then(res => {\r\n        // history.push(\"/profile/\" + res.data.username);\r\n      })\r\n      .catch(err => console.log(err));\r\n    */\r\n  }\r\n\r\n  function addUser(e) {\r\n    // Destructuring the userInfo object\r\n    const { first_name, last_name, username, designation, role, status, password, password2 } = userInfo;\r\n    // form validation\r\n    if ( !first_name || !last_name || !username || !designation || !role || !password || !password2) {\r\n      setError(true);\r\n      return e.preventDefault();\r\n    }\r\n    // checking the password match\r\n    if(password !== password2) {\r\n     alert(\"Passwords didn't match\");\r\n     return e.preventDefault();\r\n    }\r\n    // FormData is used to send file\r\n    const data = new FormData();\r\n    data.append(\"file\", file);\r\n    data.append(\"first_name\", first_name);\r\n    data.append(\"last_name\", last_name);\r\n    data.append(\"username\", username);\r\n    data.append(\"designation\", designation);\r\n    data.append(\"role\", role);\r\n    data.append(\"status\", status);\r\n    data.append(\"password\", password);\r\n    data.append(\"component\", \"profile\");\r\n    // to send a file over axios post, request body should not be added as an object(inside curly braces),\r\n    // because data instance above of FormData is already an object.\r\n    // 2nd parameter of following axios post request contains both file and filename\r\n    // at the express backend req.files.file will get the file\r\n    // and req.body.filename will get the filename\r\n    axios.post(\"http://localhost:3030/api/users/add-user\", data)\r\n      .then(res => {\r\n        history.push(\"/profile/\" + res.data.username);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n\r\n  const fileHandler = (e) => {\r\n    // if there is a file already in the file state and user didn't upload any image at second attempt then \r\n    // previous file state shouldn't be changed.   \r\n    if(file && !e.target.files.length) {\r\n        setFile(file);\r\n        setFilename(file.name);\r\n    } \r\n    // else update the file state with uploaded file\r\n    else {\r\n      setFile(e.target.files[0]);\r\n      setFilename(e.target.files[0].name);\r\n      setIsUploading(true);\r\n    }\r\n  }\r\n\r\n\r\n    /*\r\n    const fileHandler = (e) => {\r\n\r\n        setFile(e.target.files[0]);\r\n        // displaying the filename inside span element with class filename\r\n        // If there is no file in the input element\r\n        if(!e.target.files[0]) {\r\n            // but an uploaded file already present in the file state\r\n            if(file !== null) {\r\n                // display the filename inside span element\r\n                setFilename(file.name);\r\n            } \r\n            // otherwise keep the filename state as empty string\r\n            else {\r\n                setFilename(\"\")\r\n            }\r\n        } \r\n        // if a file has just been uploaded in the input element then display the name of this file inside span element\r\n        else {\r\n            setFilename(e.target.files[0].name);\r\n        }\r\n    }\r\n    */\r\n\r\n \r\n\r\n\r\n\r\n    if(typeof jwtToken === \"undefined\") {\r\n        return <div>{history.push(\"/\")}</div>\r\n    } else {\r\n        return (\r\n            <div className=\"container\">\r\n                <Navbar />\r\n                <div className=\"content\">\r\n                    <SideNav />\r\n                    <div className=\"profile main-content\">\r\n                        <div className=\"profile-container\" style = {{display: !editMode ? \"flex\" : \"none\"}}>\r\n                            <div className=\"profile-image-basic\">\r\n                                <div className=\"image-basic-wrapper\">\r\n                                    <ProfileImage username = {user.username} imgUrl = {user.imgUrl}/>\r\n                                    <BasicInfo serial_no = {user.user_id} username = {user.username} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"profile-other-info\">\r\n                                <div className=\"other-info-wrapper\">\r\n                                    <ProfileOtherInfo user = {user} editUser = {editUser} editUsername = {user.username} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* <AddForm \r\n                        imgUrl = {user.imgUrl}\r\n                        file = {file}\r\n                        filename = {filename}\r\n                        fileHandler = {fileHandler}\r\n                        onChange = {onChange}\r\n                        addUser = {addUser}\r\n                        userInfo = {userInfo}\r\n                        error = {error}\r\n                        editMode = {editMode}\r\n                        isUploading = {isUploading}\r\n                        /> */}\r\n\r\n                        {/* <AddForm style = {{display: editMode ? \"block\" : \"none\"}} /> */}\r\n\r\n                       \r\n\r\n\r\n\r\n\r\n\r\n\r\n                       \r\n                        {/* <ProfileDetails \r\n                        user = {user} \r\n                        editMode = {editMode} \r\n                        /> */}\r\n\r\n                        {/* <ProfileEdit\r\n                        editMode = {editMode} \r\n                        user = {user}\r\n                        file = {file}\r\n                        filename = {filename}\r\n                        fileHandler = {fileHandler}\r\n                        /> */}\r\n\r\n                        {/* <div className=\"profile-settings\">\r\n                            <button onClick = {() => editMode ? setEditMode(false) : setEditMode(true)}>Settings</button>\r\n                        </div> */}\r\n                        \r\n                    </div>\r\n                   \r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default Profile;","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Navbars\\Navbar.js",["639","640"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\nimport axios from \"axios\";\r\n\r\n// Styling\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar() {\r\n\r\n    const history = useHistory();\r\n    const cookies = new Cookies();\r\n    const jwtToken = cookies.get(\"jwtToken\");\r\n\r\n    const name = localStorage.getItem(\"name\");\r\n    const [imgUrl, setImgUrl] = useState(\"\");\r\n    const [showMenu, setShowMenu] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios.post(\"http://localhost:3030/api/users/user\", {username: name}, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(res => {\r\n                setImgUrl(res.data.imgUrl);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, []);\r\n\r\n\r\n     // Logout\r\n     function logout() {\r\n        // As cookie can't be removed from client side so this task should be sent to backend but make \r\n        // sure that withCredentials:true is sent along with the request otherwise cookie won't be removed. \r\n        axios.get(\"http://localhost:3030/api/users/logout\", {withCredentials: true})\r\n            .then(res => {\r\n                localStorage.clear();\r\n                history.push(\"/\");\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n\r\n            <div className=\"brand\">\r\n                <Link id=\"brand\" to = \"/dashboard\">A TO Z Trading</Link>\r\n            </div>\r\n\r\n            <div className=\"routes\">\r\n                <Link to = \"/users\">Users</Link>\r\n                <button id=\"navbar-profile-button\" onClick = {() => showMenu ? setShowMenu(false) : setShowMenu(true)}>\r\n                    <img style ={{borderRadius: \"50%\"}} width=\"40\" height=\"40\" src={imgUrl} alt=\"image\" />\r\n                </button>\r\n                <div className=\"navbar-profile\" style={{display: showMenu ? \"block\" : \"none\"}}>\r\n                    <Link to = {`/profile/${name}`}>Profile</Link>\r\n                    <Link role=\"button\" onClick = {logout}>Logout</Link>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Navbar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Styling\r\nimport \"./Navbar.css\";\r\n\r\n\r\n\r\nfunction Navbar(props) {\r\n\r\n    const history = useHistory();\r\n\r\n    const name = localStorage.getItem(\"name\");\r\n    const [imgUrl, setImgUrl] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        axios.post(\"http://localhost:3030/api/users/user\", {username: name})\r\n            .then(res => {\r\n                setImgUrl(res.data.imgUrl);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, []);\r\n\r\n\r\n     // Logout\r\n     function logout() {\r\n        // As cookie can't be removed from client side so this task should be sent to backend but make \r\n        // sure that withCredentials:true is sent along with the request otherwise cookie won't be removed. \r\n        axios.get(\"http://localhost:3030/api/users/logout\", {withCredentials: true})\r\n            .then(res => {\r\n                localStorage.clear();\r\n                history.push(\"/\");\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"brand\">\r\n                <Link id=\"brand\" to = \"/dashboard\">A TO Z Trading</Link>\r\n            </div>\r\n            <div className=\"profile-logout\">\r\n                <Link to = \"/users\">Users</Link>\r\n                <Link to = {`/profile/${name}`}>\r\n                    <img style ={{borderRadius: \"50%\"}} width=\"40\" height=\"40\" src={imgUrl} alt=\"image\" />\r\n                </Link>\r\n                <Link to = {`/profile/${name}`}>Profile</Link>\r\n                <Link role=\"button\" onClick = {logout}>Logout</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Navbar;\r\n\r\n*/\r\n","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Navbars\\SideNav.js",["641","642"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Styling\r\nimport \"./Navbar.css\";\r\n\r\n\r\nfunction SideNav() {\r\n\r\n    const [isMenuVisible, setIsMenuVisible] = useState(false);\r\n    const [isJobsVisible, setIsJobsVisible] = useState(false);\r\n\r\n\r\n    function showMenu(e) {\r\n        isMenuVisible ? setIsMenuVisible(false) : setIsMenuVisible(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidenav\">\r\n            <Link to=\"/dashboard\"> <i class=\"fas fa-home\"></i>Dashboard</Link>\r\n            <Link id = { isMenuVisible ? \"\" : \"submenu\"} role=\"button\" onClick = {showMenu}> <i class=\"fas fa-book-open\"></i>Accounts\r\n                <div className= {isMenuVisible ? \"show\" : \"sidenav-menu\"} >\r\n                    <Link to = \"/dashboard/jobs\">Jobs</Link>\r\n                    <Link to = \"/dashboard/subheads\">Subheads</Link>\r\n                    <Link to = \"/dashboard/materials\">Materials</Link>\r\n                    <Link to = \"/dashboard/expenses\">Expenses</Link>\r\n                    <Link to = \"/report\">Report</Link>\r\n                </div>\r\n            </Link>\r\n            <Link to=\"/dashboard/payorders\"><i class=\"fas fa-file-invoice\"></i> Payorders</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default SideNav;","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Profile\\ProfileDetails.js",["643"],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Profile\\ProfileEdit.js",[],["644","645"],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Home\\Home.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Home\\Login.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Dashboard\\Dashboard.js",["646","647"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\nimport axios from \"axios\";\r\n\r\n// Styling\r\nimport \"./Dashboard.css\";\r\n\r\n// Components\r\nimport Navbar from \"../Navbars/Navbar\";\r\nimport SideNav from \"../Navbars/SideNav\";\r\n\r\n\r\n\r\n\r\nfunction Dashboard(props) {\r\n\r\n    const history = useHistory();\r\n    const cookies = new Cookies();\r\n    const jwtToken = cookies.get(\"jwtToken\");\r\n\r\n    const [jobDetails, setJobDetails] = useState([]);\r\n\r\n    \r\n    // Fetching Data\r\n    useEffect(() => {\r\n        axios.post(\"http://localhost:3030/api/jobs\", { headers: {\"x-auth-token\": jwtToken} })\r\n            .then(res => {\r\n                setJobDetails(res.data);\r\n                \r\n            })\r\n            .catch(err => console.log(err));\r\n        \r\n    }, []);\r\n    \r\n\r\n\r\n    // Rendering\r\n    if(typeof jwtToken === \"undefined\") {\r\n        return (\r\n            <div>{history.push(\"/\")}</div>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"dashboard-container container\">\r\n            <Navbar />\r\n            <div className=\"dashboard-content content\">\r\n                <SideNav />\r\n                <div className=\"dashboard-table main-content\">\r\n                    <h1>Hi</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n    \r\n}\r\n\r\n\r\nexport default Dashboard;","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Jobs\\Jobs.js",["648"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\n\r\nimport Navbar from \"../Navbars/Navbar\";\r\nimport SideNav from \"../Navbars/SideNav\";\r\n\r\n\r\n// Child Components\r\nimport { JobTable } from \"./JobTable\";\r\nimport { JobModal } from \"./JobModal\";\r\n\r\n// Next Previous Buttons\r\nimport { NextPrevView } from \"../common-components/NextPrevView\";\r\nimport { ViewLimitSearch } from \"../common-components/ViewLimitSearch\";\r\nimport { Export } from \"../common-components/Export\";\r\nimport { ModalButton } from \"../common-components/ModalButton\";\r\nimport { ContentHeader } from \"../common-components/ContentHeader\";\r\nimport { DeleteModal } from \"../common-components/DeleteModal\";\r\n\r\n\r\nfunction Jobs() {\r\n\r\n    const history = useHistory();\r\n    const cookies = new Cookies();\r\n    const jwtToken = cookies.get(\"jwtToken\");\r\n\r\n    const [jobs, setJobs] = useState([]);\r\n    const [error, setError] = useState(false);\r\n    const [job, setJob] = useState({\r\n        job_heading: \"\",\r\n        name: \"\",\r\n        job_description: \"\",\r\n        value: \"\",\r\n        credit: \"\",\r\n        status: \"\"\r\n    });\r\n\r\n    const [offset, setOffset] = useState(0);\r\n    const [limit, setLimit] = useState(15);\r\n    const [dbLength, setDbLength] = useState(0);\r\n    const [searchText, setSearchText] = useState(\"\");\r\n\r\n    // Modal State\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n    // to set the value of modal post button. this value will be checked at backend to update the record\r\n    // payorderID will be the id of the payorder clicked for editing\r\n    const [jobID, setJobID] = useState(0);\r\n\r\n    // when the user will click on the action button toggleActionList function will be called and value of this\r\n    // variable showID will be updated with the uniqe serial number set as the value of action button\r\n    const [showID, setShowID] = useState(0);\r\n\r\n    useEffect(() => {\r\n        axios.post(\"http://localhost:3030/api/jobs\", { limit, offset }, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(res => {\r\n\r\n                // Updating dbLength state with entire table data sent from backend\r\n                setDbLength(res.data.results.length);\r\n\r\n                // Updating job state with job data sent from backend\r\n                setJobs(res.data.jobs);\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }, []);\r\n\r\n    function onChange(e) {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        \r\n        setJob(prev => {\r\n            return {...prev, [name]: value}\r\n        });\r\n        \r\n    }\r\n\r\n\r\n    function addJob(e) {\r\n\r\n        if(!job.job_heading || !job.name || !job.job_description || !job.value || !job.credit || !job.status) {\r\n            setError(true);\r\n            return e.preventDefault();\r\n        }\r\n\r\n        axios.post(\"http://localhost:3030/api/jobs/add\", { job, job_id: e.target.value }, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(res => {\r\n                setError(false);\r\n                alert(res.data.msg);\r\n            })\r\n            .catch(err => alert(err.response.data.msg));\r\n    }\r\n\r\n    function changeViewLimit(e) {\r\n        \r\n        // Set Everything to 0 i.e start from beginnning\r\n        setDbLength(0);\r\n        setSearchText(\"\");\r\n        setOffset(0);\r\n        setLimit(0);\r\n\r\n        // catch the dynamic limit value\r\n        const viewLimit = Number(e.target.value);\r\n\r\n        axios.post(\"http://localhost:3030/api/jobs\", {limit: viewLimit, offset: 0}, {headers: {\"x-auth-token\": jwtToken}})\r\n        .then(res => {\r\n\r\n            // Set limit with dynamic value\r\n            setLimit(viewLimit);\r\n            setJobs(res.data.jobs);\r\n            setDbLength(res.data.results.length);\r\n            \r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    function searchJobs(e) {\r\n\r\n        const text = e.target.value;\r\n\r\n        axios.post(\"http://localhost:3030/api/jobs/search\", {limit, offset: 0, text}, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(res => {\r\n\r\n                // Updating dbLength with search results sent from backend \r\n                setDbLength(res.data.results.length);\r\n\r\n                // Updating jobs state with jobs data sent from backend\r\n                setJobs(res.data.jobs);\r\n\r\n                setOffset(0);\r\n                setSearchText(text);\r\n                \r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    function showNextPrevItems(e) {\r\n        const newOffsetValue = Number(e.target.value);\r\n\r\n        axios.post(\"http://localhost:3030/api/jobs/search\", {limit, offset: newOffsetValue, text: searchText}, {\r\n            headers: {\"x-auth-token\": jwtToken}\r\n        })\r\n            .then(res => {\r\n            setJobs(res.data.jobs);\r\n            setDbLength(res.data.results.length);\r\n            setOffset(newOffsetValue);\r\n        })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    \r\n    function toggleActionList(e) {\r\n        showID !== 0 ? setShowID(0) : setShowID(Number(e.target.value));\r\n    }\r\n\r\n    const toggleDeleteModal = e => {\r\n        setShowID(0);\r\n        const _id = Number(e.target.value);\r\n        setJobID(_id);\r\n        e.target.textContent === \"No\" ? setShowDeleteModal(false) : setShowDeleteModal(true);\r\n        //setShowDeleteModal(true);\r\n    }\r\n\r\n    function editRecord(e) {\r\n        // edit button value is the payorder's unique serial no. axios call must have this number to find the exact payorder\r\n        const job_id = Number(e.target.value);\r\n\r\n        axios.post(\"http://localhost:3030/api/jobs\", {job_id}, {headers: {\"x-auth-token\": jwtToken}})\r\n        .then(res => {\r\n            // to set the display of action list to none\r\n            setShowID(0);\r\n            // setting the value of modal post button\r\n            setJobID(res.data[0].serial_no);\r\n            // displaying the modal to edit\r\n            setShowModal(true);\r\n            // updating all the input fileds of the modal\r\n            setJob(prev => {\r\n                return {\r\n                    ...prev,\r\n                    job_heading: res.data[0].job_heading,\r\n                    name: res.data[0].name,\r\n                    job_description: res.data[0].job_description,\r\n                    value: res.data[0].value,\r\n                    credit: res.data[0].credit,\r\n                    status: res.data[0].status\r\n                  \r\n                }\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    function deleteRecord(e) {\r\n        axios.post(\"http://localhost:3030/api/jobs/delete\", {_id: jobID}, {headers: {\"x-auth-token\": jwtToken}})\r\n        .then(res => {\r\n            // Displaying the success message\r\n            //alert(res.data.msg);\r\n            // Hiding the DeleteModal\r\n            setShowDeleteModal(false);\r\n            // Hiding the action list\r\n            setShowID(0);\r\n             // Clearing the value of modal button titled 'post'\r\n             setJobID(0);\r\n        \r\n            // Populating the table with updated payorder data\r\n            axios.post(\"http://localhost:3030/api/jobs\", { limit, offset }, {headers: {\"x-auth-token\": jwtToken}})\r\n                .then(response => {\r\n                // Updating dbLength state with entire table data sent from backend\r\n                setDbLength(response.data.results.length);\r\n                // Updating job state with job data sent from backend\r\n                setJobs(response.data.jobs);\r\n                })\r\n                .catch(err => console.log(err));\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    function closeModal() {\r\n        // modal post button value now should be empty string. if user wants to add a new payorder post button will \r\n        // have no value so backend will treat the request as a new add request\r\n        setJobID(0);\r\n        // setting every modal input fields to empty string again. \r\n        setJob(prev => {\r\n            return {\r\n                ...prev,\r\n                job_heading: \"\",\r\n                name: \"\",\r\n                job_description: \"\",\r\n                value: \"\",\r\n                credit: \"\",\r\n                status: \"\"\r\n            }\r\n        });\r\n        // setting the display of modal to none\r\n        setShowModal(false);\r\n        setError(false);\r\n\r\n        // Populating the table with updated payorder data\r\n        axios.post(\"http://localhost:3030/api/jobs\", { limit, offset }, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(response => {\r\n            // Updating dbLength state with entire table data sent from backend\r\n            setDbLength(response.data.results.length);\r\n            // Updating job state with job data sent from backend\r\n            setJobs(response.data.jobs);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    function exportPdf() {\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"landscape\"; // portrait or landscape\r\n\r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n\r\n        doc.setFontSize(15);\r\n\r\n        const title = \"Job Report\";\r\n        const headers = [[\"Serial No\", \"Job Heading\", \"Job ID\", \"Job Name\", \"Value\", \"Credit\", \"Debit\", \"Balance\", \"Status\"]];\r\n\r\n        const data = jobs.map(job => [\r\n            job.serial_no,\r\n            job.job_heading,\r\n            job.name,\r\n            job.job_description,\r\n            job.value,\r\n            job.credit,\r\n            job.debit,\r\n            job.balance,\r\n            job.status\r\n        ]);\r\n\r\n        let content = {\r\n            startY: 50,\r\n            head: headers,\r\n            body: data\r\n        };\r\n\r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"jobReport.pdf\")\r\n    }\r\n\r\n    if(typeof jwtToken === \"undefined\") {\r\n        return (\r\n            <div>{history.push(\"/\")}</div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Navbar />\r\n            <div className=\"content\">\r\n                <SideNav />\r\n                <div className=\"main-content\">\r\n                    <ContentHeader title = \"Job Details\" />\r\n\r\n                    <div className=\"content-search-export\">\r\n                        <ViewLimitSearch \r\n                        search = {searchJobs} \r\n                        changeViewLimit = {changeViewLimit} \r\n                        searchText = {searchText}\r\n                        />\r\n                        <Export exportPdf = {exportPdf} data = {jobs}/>\r\n                        <ModalButton textContent = \"Add New Job\" setShowModal = {setShowModal}/>\r\n                    </div>\r\n\r\n                    <div className=\"content-table\">\r\n                        <JobTable \r\n                        jobs = {jobs}\r\n                        editRecord = {editRecord}\r\n                        toggleActionList = {toggleActionList} \r\n                        toggleDeleteModal = {toggleDeleteModal}\r\n                        showID = {showID}\r\n                        />\r\n                    </div>\r\n                    \r\n                    <NextPrevView\r\n                    showNextPrevItems = {showNextPrevItems}\r\n                    limit = {limit}\r\n                    offset = {offset}\r\n                    dbLength = {dbLength} \r\n                    />\r\n\r\n\r\n                    <JobModal \r\n                    showModal = {showModal} \r\n                    closeModal = {closeModal}\r\n                    job = {job}\r\n                    error = {error} \r\n                    onChange = {onChange}\r\n                    addJob = {addJob}\r\n                    jobID = {jobID}\r\n                    />\r\n\r\n                    <DeleteModal\r\n                    showDeleteModal = {showDeleteModal}\r\n                    toggleDeleteModal = {toggleDeleteModal}\r\n                    deleteRecord = {deleteRecord} \r\n                    itemID = {jobID}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Jobs;","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Expenses\\Expenses.js",["649","650"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\nimport axios from \"axios\";\r\n\r\n// Stylesheet\r\nimport \"./Expenses.css\";\r\n\r\n\r\n// Export To PDF Packages\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\n// Navigation Bars\r\nimport Navbar from \"../Navbars/Navbar\";\r\nimport SideNav from \"../Navbars/SideNav\";\r\n\r\n// Child Components\r\nimport { ExpensesTable } from \"./ExpensesTable\";\r\nimport ExpensesModal from \"./ExpensesModal\";\r\n\r\n// Other Components\r\nimport { NextPrevView } from \"../common-components/views/NextPrevView\";\r\nimport { ViewLimitSearch } from \"../common-components/views/ViewLimitSearch\";\r\nimport { Export } from \"../common-components/export-buttons/Export\";\r\nimport { ModalButton } from \"../common-components/others/ModalButton\";\r\nimport { Title } from \"../common-components/list-title/Title\";\r\nimport { DeleteModal } from \"../common-components/delete-prompt-modal/DeleteModal\";\r\n\r\n\r\nfunction Xxxx() {\r\n    \r\n    const history = useHistory();\r\n    const cookies = new Cookies();\r\n    const jwtToken = cookies.get(\"jwtToken\");\r\n\r\n    const [validationError, setValidationError] = useState(false);\r\n    const [date, setDate] = useState(null);\r\n    const [materialUnit, setMaterialUnit] = useState(\"\");\r\n\r\n    const [isJobListVisible, setIsJobListVisible] = useState(false);\r\n    const [isSubheadListVisible, setIsSubheadListVisible] = useState(false);\r\n    const [isMaterialListVisible, setIsMaterialListVisible] = useState(false);\r\n\r\n    const [expense, setExpense] = useState({\r\n        job: \"\",\r\n        subhead: \"\",\r\n        material: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n        unit_price: \"\",\r\n        discount: 0,\r\n        upcharge: 0\r\n    });\r\n\r\n    const [list, setList] = useState({job: [], subhead: [], material: []});\r\n\r\n    const [expenses, setExpenses] = useState([]);\r\n    const [offset, setOffset] = useState(0);\r\n    const [limit, setLimit] = useState(15);\r\n    const [dbLength, setDbLength] = useState(0);\r\n\r\n    // Search Text\r\n    const [searchText, setSearchText] = useState(\"\");\r\n\r\n    // Modal State\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n    // to set the value of modal post button. this value will be checked at backend to update the record\r\n    // payorderID will be the id of the payorder clicked for editing\r\n    const [expenseID, setExpenseID] = useState(0);\r\n\r\n    // when the user will click on the action button toggleActionList function will be called and value of this\r\n    // variable showID will be updated with the uniqe serial number set as the value of action button\r\n    const [showID, setShowID] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        axios.post(\"http://localhost:3030/api/expenses\", { limit, offset }, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(res => {\r\n\r\n                // Updating dbLength state with entire table data sent from backend\r\n                setDbLength(res.data.results.length);\r\n\r\n                // Updating job state with job data sent from backend\r\n                setExpenses(res.data.expenses);\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }, []);\r\n\r\n    function onChange(e) {\r\n\r\n        \r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n      \r\n        if(name === \"material\") setMaterialUnit(\"\");\r\n\r\n        setExpense(prev => {\r\n            return {...prev, [name]: value}\r\n        });\r\n\r\n        \r\n\r\n        //console.log(expense);\r\n\r\n        if(name === \"job\") setIsJobListVisible(true);\r\n        if(name === \"subhead\") setIsSubheadListVisible(true);\r\n        if(name === \"material\") setIsMaterialListVisible(true);\r\n\r\n        if(name === \"job\" || name === \"subhead\" || name === \"material\") {\r\n\r\n            const url = `http://localhost:3030/api/${name}s`;\r\n            axios.post(url, {keyword: e.target.value}, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(res => {\r\n                setList(prev => {\r\n                    return { ...prev, [name]: res.data };\r\n                });\r\n\r\n                \r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    function selectItem(e) {\r\n\r\n        const className = e.target.className;\r\n        const content = e.target.textContent;\r\n\r\n        setExpense(prev => {\r\n            return {...prev, [className]: content}\r\n        });\r\n\r\n        // Input value of unit field\r\n        if(className === \"material\") {\r\n            list.material.map(item => {\r\n                if(item.name === content) {\r\n                    setMaterialUnit(item.unit);\r\n                }\r\n            });\r\n        }\r\n    \r\n\r\n        if(className === \"job\") setIsJobListVisible(false);\r\n        if(className === \"subhead\") setIsSubheadListVisible(false);\r\n        if(className === \"material\") setIsMaterialListVisible(false);\r\n    }\r\n\r\n    \r\n    function addExpense(e) {\r\n\r\n        if (\r\n            !expense.job ||\r\n            !expense.subhead ||\r\n            !expense.material ||\r\n            !expense.description ||\r\n            !expense.qty || \r\n            !expense.unit_price ||\r\n            expense.discount === \"\" ||\r\n            expense.upcharge === \"\" || \r\n            date === null ||\r\n            !materialUnit\r\n        ) {\r\n            setValidationError(true);\r\n            return e.preventDefault();\r\n        }\r\n\r\n      \r\n        const data = {\r\n            date_time: date,\r\n            job: expense.job,\r\n            subhead: expense.subhead,\r\n            material_name: expense.material,\r\n            description: expense.description,\r\n            qty: expense.qty,\r\n            unit: materialUnit,\r\n            unit_price: expense.unit_price,\r\n            discount: expense.discount,\r\n            upcharge: expense.upcharge,\r\n            spent_by: localStorage.getItem(\"name\")\r\n        };\r\n        \r\n        axios.post(\"http://localhost:3030/api/expenses/add\", {data, expense_id: e.target.value}, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(res => {\r\n                alert(res.data.msg);\r\n            })\r\n            .catch(err => {\r\n                alert(err.response.data.msg)\r\n            });\r\n    }\r\n\r\n\r\n   \r\n    function changeViewLimit(e) {\r\n        \r\n        // Set Everything to 0 i.e start from beginnning\r\n        setDbLength(0);\r\n        setSearchText(\"\");\r\n        setOffset(0);\r\n        setLimit(0);\r\n\r\n        // catch the dynamic limit value\r\n        const viewLimit = Number(e.target.value);\r\n\r\n        axios.post(\"http://localhost:3030/api/expenses\", {limit: viewLimit, offset: 0}, {headers: {\"x-auth-token\": jwtToken}})\r\n        .then(res => {\r\n            setLimit(viewLimit);\r\n            setExpenses(res.data.expenses);\r\n            setDbLength(res.data.results.length);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    \r\n    function searchExpenses(e) {\r\n\r\n        const text = e.target.value;\r\n\r\n        axios.post(\"http://localhost:3030/api/expenses/search\", {limit, offset: 0, text}, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(res => {\r\n                // Updating dbLength with search results sent from backend \r\n                setDbLength(res.data.results.length);\r\n\r\n                // Updating jobs state with jobs data sent from backend\r\n                setExpenses(res.data.expenses);\r\n\r\n                setOffset(0);\r\n                setSearchText(text);\r\n                \r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    function showNextPrevItems(e) {\r\n        \r\n        const newOffsetValue = Number(e.target.value);\r\n\r\n        axios.post(\"http://localhost:3030/api/expenses/search\", {limit, offset: newOffsetValue, text: searchText}, {\r\n            headers: {\"x-auth-token\": jwtToken}\r\n        })\r\n            .then(res => {\r\n            setExpenses(res.data.expenses);\r\n            setDbLength(res.data.results.length);\r\n            setOffset(newOffsetValue);\r\n        })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    function toggleActionList(e) {\r\n        showID !== 0 ? setShowID(0) : setShowID(Number(e.target.value));\r\n    }\r\n\r\n    const toggleDeleteModal = e => {\r\n        setShowID(0);\r\n        const _id = Number(e.target.value);\r\n        setExpenseID(_id);\r\n        e.target.textContent === \"No\" ? setShowDeleteModal(false) : setShowDeleteModal(true);\r\n        //setShowDeleteModal(true);\r\n    }\r\n\r\n    function editRecord(e) {\r\n        // edit button value is the payorder's unique serial no. axios call must have this number to find the exact payorder\r\n        const expense_id = Number(e.target.value);\r\n\r\n        axios.post(\"http://localhost:3030/api/expenses\", {expense_id}, {headers: {\"x-auth-token\": jwtToken}})\r\n        .then(res => {\r\n            // to set the display of action list to none\r\n            setShowID(0);\r\n            // setting the value of modal post button\r\n            setExpenseID(res.data[0].serial_no);\r\n            // displaying the modal to edit\r\n            setShowModal(true);\r\n            // updating all the input fileds of the modal\r\n\r\n            setMaterialUnit(res.data[0].unit);\r\n            setDate(new Date(res.data[0].date_time));\r\n            setExpense(prev => {\r\n                return {\r\n                    ...prev,\r\n                    job: res.data[0].job,\r\n                    subhead: res.data[0].subhead,\r\n                    material: res.data[0].material_name,\r\n                    description: res.data[0].description,\r\n                    qty: res.data[0].qty,\r\n                    unit_price: res.data[0].unit_price,\r\n                    discount: res.data[0].discount,\r\n                    upcharge: Number(res.data[0].upcharge)\r\n                }\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    function deleteRecord(e) {\r\n        axios.post(\"http://localhost:3030/api/expenses/delete\", {_id: expenseID}, {headers: {\"x-auth-token\": jwtToken}})\r\n        .then(res => {\r\n            // Displaying the success message\r\n            //alert(res.data.msg);\r\n            // Hiding the DeleteModal\r\n            setShowDeleteModal(false);\r\n            // Hiding the action list\r\n            setShowID(0);\r\n            // Clearing the value of modal button titled 'post'\r\n            setExpenseID(0);\r\n        \r\n            // Populating the table with updated payorder data\r\n            axios.post(\"http://localhost:3030/api/expenses\", { limit, offset }, {headers: {\"x-auth-token\": jwtToken}})\r\n                .then(response => {\r\n                // Updating dbLength state with entire table data sent from backend\r\n                setDbLength(response.data.results.length);\r\n                // Updating job state with job data sent from backend\r\n                setExpenses(response.data.expenses);\r\n                })\r\n                .catch(err => console.log(err));\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    function closeModal() {\r\n        // modal post button value now should be empty string. if user wants to add a new payorder post button will \r\n        // have no value so backend will treat the request as a new add request\r\n        setExpenseID(0);\r\n        // setting every modal input fields to empty string again. \r\n        setExpense(prev => {\r\n            return {\r\n                ...prev,\r\n                job: \"\",\r\n                subhead: \"\",\r\n                material: \"\",\r\n                description: \"\",\r\n                qty: \"\",\r\n                unit_price: \"\",\r\n                discount: \"\",\r\n                upcharge: \"\"\r\n            }\r\n        });\r\n        // setting the display of modal to none\r\n        setShowModal(false);\r\n        setDate(null);\r\n        setValidationError(false);\r\n        setMaterialUnit(\"\");\r\n\r\n        // Populating the table with updated payorder data\r\n        axios.post(\"http://localhost:3030/api/expenses\", { limit, offset }, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(response => {\r\n            // Updating dbLength state with entire table data sent from backend\r\n            setDbLength(response.data.results.length);\r\n            // Updating job state with job data sent from backend\r\n            setExpenses(response.data.expenses);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    function exportPdf() {\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"landscape\"; // portrait or landscape\r\n\r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n\r\n        doc.setFontSize(15);\r\n\r\n        const title = \"Expense Report\";\r\n        const headers = [\r\n            [\r\n                \"Serial No\", \r\n                \"Date\", \r\n                \"Job\", \r\n                \"Subhead\", \r\n                \"Material\", \r\n                \"Description\", \r\n                \"Qty\", \r\n                \"Unit\", \r\n                \"Unit Price\",\r\n                \"Discount\",\r\n                \"Upcharge\",\r\n                \"Total\",\r\n                \"Material Status\",\r\n                \"Approval Status\",\r\n                \"Status\",\r\n                \"Spent By\" \r\n            ]\r\n        ];\r\n\r\n        const data = expenses.map(expense => [\r\n            expense.serial_no,\r\n            expense.date_time,\r\n            expense.job,\r\n            expense.subhead,\r\n            expense.material_name,\r\n            expense.description,\r\n            expense.qty,\r\n            expense.unit,\r\n            expense.unit_price,\r\n            expense.discount,\r\n            expense.upcharge,\r\n            expense.total,\r\n            expense.material_status,\r\n            expense.approval_status,\r\n            expense.status,\r\n            expense.spent_by\r\n        ]);\r\n\r\n        let content = {\r\n            startY: 50,\r\n            head: headers,\r\n            body: data\r\n        };\r\n\r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"expenseReport.pdf\")\r\n    }\r\n\r\n\r\n    // No Token on cookie? Then redirect to login page\r\n    if(typeof jwtToken === \"undefined\") {\r\n        return (\r\n            <div>{history.push(\"/\")}</div>\r\n        );\r\n    } \r\n        \r\n    \r\n    return (\r\n        <div className=\"container\">\r\n                <Navbar />\r\n            <div className=\"content\">\r\n                <SideNav />\r\n                <div className=\"main-content\">\r\n                    <Title title = \"Expenses Details\" />\r\n\r\n                    <div className=\"content-search-export\">\r\n                        <ViewLimitSearch \r\n                        search = {searchExpenses} \r\n                        changeViewLimit = {changeViewLimit} \r\n                        searchText = {searchText}\r\n                        />\r\n                        <Export exportPdf = {exportPdf} data = {expenses}/>\r\n                        <ModalButton textContent = \"Add New Expense\" setShowModal = {setShowModal}/>\r\n                    </div>\r\n\r\n                    <div id=\"expense-table\" className=\"content-table\">\r\n                        <ExpensesTable \r\n                        expenses = {expenses}\r\n                        editRecord = {editRecord}\r\n                        toggleActionList = {toggleActionList}\r\n                        toggleDeleteModal = {toggleDeleteModal}\r\n                        showID = {showID} \r\n                        />\r\n                    </div>\r\n                    \r\n                    <NextPrevView\r\n                    showNextPrevItems = {showNextPrevItems}\r\n                    limit = {limit}\r\n                    offset = {offset}\r\n                    dbLength = {dbLength} \r\n                    />\r\n\r\n                    <ExpensesModal\r\n                    expense = {expense}\r\n                    addExpense = {addExpense}\r\n                    expenseID = {expenseID}\r\n                    materialUnit = {materialUnit}\r\n                    list = {list} \r\n                    showModal = {showModal} \r\n                    closeModal = {closeModal}\r\n                    onChange = {onChange}\r\n                    selectItem = {selectItem}\r\n                    date = {date}\r\n                    setDate = {setDate}\r\n                    validationError = {validationError}\r\n                    isJobListVisible = {isJobListVisible}\r\n                    isMaterialListVisible = {isMaterialListVisible}\r\n                    isSubheadListVisible = {isSubheadListVisible}\r\n                    />\r\n\r\n                    <DeleteModal\r\n                    showDeleteModal = {showDeleteModal}\r\n                    toggleDeleteModal = {toggleDeleteModal}\r\n                    deleteRecord = {deleteRecord} \r\n                    itemID = {expenseID}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\n\r\nexport default Xxxx;","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Materials\\Materials.js",["651","652"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\n\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\n\r\n\r\nimport Navbar from \"../Navbars/Navbar\";\r\nimport SideNav from \"../Navbars/SideNav\";\r\n\r\n\r\n// Child Components\r\nimport { MaterialTable } from \"./MaterialTable\";\r\nimport { MaterialModal } from \"./MaterialModal\";\r\n\r\n\r\nimport { ModalButton } from \"../common-components/ModalButton\";\r\nimport { ViewLimitSearch } from \"../common-components/ViewLimitSearch\";\r\nimport { Export } from \"../common-components/Export\";\r\nimport { NextPrevView } from \"../common-components/NextPrevView\";\r\nimport { ContentHeader } from \"../common-components/ContentHeader\";\r\nimport { DeleteModal } from \"../common-components/DeleteModal\";\r\n\r\n\r\nfunction Materials() {\r\n    const history = useHistory();\r\n    const cookies = new Cookies();\r\n    const jwtToken = cookies.get(\"jwtToken\");\r\n\r\n    const [validationError, setValidationError] = useState(false);\r\n    const [materials, setMaterials] = useState([]);\r\n    const [material, setMaterial] = useState({name: \"\", unit: \"\"});\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [offset, setOffset] = useState(0);\r\n    const [limit, setLimit] = useState(15);\r\n    const [dbLength, setDbLength] = useState(0);\r\n\r\n    // Modal State\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n    // to set the value of modal post button. this value will be checked at backend to update the record\r\n    // payorderID will be the id of the payorder clicked for editing\r\n    const [jobID, setJobID] = useState(0);\r\n\r\n    // when the user will click on the action button toggleActionList function will be called and value of this\r\n    // variable showID will be updated with the uniqe serial number set as the value of action button\r\n    const [materialID, setMaterialID] = useState(0);\r\n    const [showID, setShowID] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        axios.post(\"http://localhost:3030/api/materials\", {limit, offset}, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(res => {\r\n                console.log(res.data);\r\n                setMaterials(res.data.materials);\r\n                setDbLength(res.data.results.length);\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }, []);\r\n\r\n    function onChange(e) {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        \r\n        setMaterial(prev => {\r\n            return {...prev, [name]: value}\r\n        });\r\n    }\r\n\r\n\r\n    function addMaterial(e) {\r\n\r\n        if(!material.name || !material.unit) {\r\n            setValidationError(true);\r\n            return e.preventDefault();\r\n        }\r\n\r\n        axios.post(\"http://localhost:3030/api/materials/add\", {material, material_id: e.target.value}, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(res => {\r\n                setValidationError(false);\r\n                alert(res.data.msg);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    function changeViewLimit(e) {\r\n        \r\n        // Set Everything to 0 i.e start from beginnning\r\n        setDbLength(0);\r\n        setSearchText(\"\");\r\n        setOffset(0);\r\n        setLimit(0);\r\n\r\n        // catch the dynamic limit value\r\n        const viewLimit = Number(e.target.value);\r\n\r\n        axios.post(\"http://localhost:3030/api/materials\", {limit: viewLimit, offset: 0}, {headers: {\"x-auth-token\": jwtToken}})\r\n        .then(res => {\r\n\r\n            // Set limit with dynamic value\r\n            setLimit(viewLimit);\r\n            setMaterials(res.data.materials);\r\n            setDbLength(res.data.results.length);\r\n            \r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    \r\n    function searchMaterials(e) {\r\n\r\n        const text = e.target.value;\r\n\r\n        axios.post(\"http://localhost:3030/api/materials/search\", {limit, offset: 0, text}, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(res => {\r\n\r\n                // Updating dbLength with search results sent from backend \r\n                setDbLength(res.data.results.length);\r\n\r\n                // Updating jobs state with jobs data sent from backend\r\n                setMaterials(res.data.materials);\r\n\r\n                setOffset(0);\r\n                setSearchText(text);\r\n                \r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    function showNextPrevItems(e) {\r\n        const newOffsetValue = Number(e.target.value);\r\n\r\n        axios.post(\"http://localhost:3030/api/materials/search\", {limit, offset: newOffsetValue, text: searchText}, {\r\n            headers: {\"x-auth-token\": jwtToken}\r\n        })\r\n            .then(res => {\r\n            setMaterials(res.data.materials);\r\n            setDbLength(res.data.results.length);\r\n            setOffset(newOffsetValue);\r\n        })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    function toggleActionList(e) {\r\n        showID !== 0 ? setShowID(0) : setShowID(Number(e.target.value));\r\n    }\r\n\r\n    const toggleDeleteModal = e => {\r\n        setShowID(0);\r\n        const _id = Number(e.target.value);\r\n        setMaterialID(_id);\r\n        e.target.textContent === \"No\" ? setShowDeleteModal(false) : setShowDeleteModal(true);\r\n        //setShowDeleteModal(true);\r\n    }\r\n\r\n    function editRecord(e) {\r\n        // edit button value is the payorder's unique serial no. axios call must have this number to find the exact payorder\r\n        const material_id = Number(e.target.value);\r\n\r\n        axios.post(\"http://localhost:3030/api/materials\", {material_id}, {headers: {\"x-auth-token\": jwtToken}})\r\n        .then(res => {\r\n            // to set the display of action list to none\r\n            setShowID(0);\r\n            // setting the value of modal post button\r\n            setMaterialID(res.data[0].serial_no);\r\n            // displaying the modal to edit\r\n            setShowModal(true);\r\n            // updating all the input fileds of the modal\r\n            setMaterial(prev => {\r\n                return {\r\n                    ...prev,\r\n                    name: res.data[0].name,\r\n                    unit: res.data[0].unit,\r\n                }\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    function deleteRecord(e) {\r\n        axios.post(\"http://localhost:3030/api/materials/delete\", {_id: materialID}, {headers: {\"x-auth-token\": jwtToken}})\r\n        .then(res => {\r\n            // Displaying the success message\r\n            //alert(res.data.msg);\r\n            // Hiding the DeleteModal\r\n            setShowDeleteModal(false);\r\n            // Hiding the action list\r\n            setShowID(0);\r\n            // Clearing the value of modal button titled 'post'\r\n            setMaterialID(0);\r\n        \r\n            // Populating the table with updated payorder data\r\n            axios.post(\"http://localhost:3030/api/materials\", { limit, offset }, {headers: {\"x-auth-token\": jwtToken}})\r\n                .then(response => {\r\n                // Updating dbLength state with entire table data sent from backend\r\n                setDbLength(response.data.results.length);\r\n                // Updating job state with job data sent from backend\r\n                setMaterials(response.data.materials);\r\n                })\r\n                .catch(err => console.log(err));\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    function closeModal() {\r\n        // modal post button value now should be empty string. if user wants to add a new payorder post button will \r\n        // have no value so backend will treat the request as a new add request\r\n        setJobID(0);\r\n        // setting every modal input fields to empty string again. \r\n        setMaterial(prev => {\r\n            return {\r\n                ...prev,\r\n                name: \"\",\r\n                unit: \"\"\r\n            }\r\n        });\r\n        // setting the display of modal to none\r\n        setShowModal(false);\r\n\r\n        // Populating the table with updated payorder data\r\n        axios.post(\"http://localhost:3030/api/materials\", { limit, offset }, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(response => {\r\n            // Updating dbLength state with entire table data sent from backend\r\n            setDbLength(response.data.results.length);\r\n            // Updating job state with job data sent from backend\r\n            setMaterials(response.data.materials);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    function exportPdf() {\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"portrait\"; // portrait or landscape\r\n\r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n\r\n        doc.setFontSize(15);\r\n\r\n        const title = \"Materials Report\";\r\n        const headers = [[\"Serial No\", \"Material Name\", \"Unit\"]];\r\n\r\n        const data = materials.map(material => [ material.serial_no, material.name, material.unit ]);\r\n\r\n        let content = {\r\n            startY: 50,\r\n            head: headers,\r\n            body: data\r\n        };\r\n\r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"materialReport.pdf\")\r\n    }\r\n\r\n\r\n\r\n     // Rendering\r\n     if(typeof jwtToken === \"undefined\") {\r\n        return (\r\n            <div>{history.push(\"/\")}</div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Navbar />\r\n            <div className=\"content\">\r\n                <SideNav />\r\n                <div className=\"main-content\">\r\n                <ContentHeader title = \"Materials Details\" />\r\n                    <div className=\"content-search-export\">\r\n                        <ViewLimitSearch \r\n                        search = {searchMaterials} \r\n                        changeViewLimit = {changeViewLimit} \r\n                        searchText = {searchText}\r\n                        />\r\n                        <Export exportPdf = {exportPdf} data = {materials}/>\r\n                        <ModalButton textContent = \"Add New Material\" setShowModal = {setShowModal}/>\r\n                    </div>\r\n                    <div className=\"content-table\">\r\n                        <MaterialTable \r\n                        materials = {materials}\r\n                        editRecord = {editRecord}\r\n                        toggleActionList = {toggleActionList} \r\n                        toggleDeleteModal = {toggleDeleteModal}\r\n                        showID = {showID}\r\n                        />\r\n                    </div>\r\n                    \r\n                    <NextPrevView\r\n                    showNextPrevItems = {showNextPrevItems}\r\n                    limit = {limit}\r\n                    offset = {offset}\r\n                    dbLength = {dbLength} \r\n                    />\r\n                    <MaterialModal \r\n                    showModal = {showModal} \r\n                    closeModal = {closeModal}\r\n                    material = {material}\r\n                    validationError = {validationError} \r\n                    onChange = {onChange}\r\n                    addMaterial = {addMaterial}\r\n                    materialID = {materialID} \r\n                    />\r\n\r\n                    <DeleteModal\r\n                    showDeleteModal = {showDeleteModal}\r\n                    toggleDeleteModal = {toggleDeleteModal}\r\n                    deleteRecord = {deleteRecord} \r\n                    itemID = {materialID}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Materials;","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Subheads\\Subheads.js",["653"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\n\r\nimport Navbar from \"../Navbars/Navbar\";\r\nimport SideNav from \"../Navbars/SideNav\";\r\n\r\n\r\n// Child Components\r\nimport { SubheadModal } from \"./SubheadModal\";\r\nimport { SubheadTable } from \"./SubheadTable\";\r\n\r\nimport { NextPrevView } from \"../common-components/views/NextPrevView\";\r\nimport { ViewLimitSearch } from \"../common-components/views/ViewLimitSearch\";\r\nimport { Export } from \"../common-components/export-buttons/Export\";\r\nimport { ModalButton } from \"../common-components/others/ModalButton\";\r\nimport { Title } from \"../common-components/list-title/Title\";\r\nimport { DeleteModal } from \"../common-components/delete-prompt-modal/DeleteModal\";\r\n\r\nfunction Subheads() {\r\n\r\n    const history = useHistory();\r\n    const cookies = new Cookies();\r\n    const jwtToken = cookies.get(\"jwtToken\");\r\n\r\n    const [validationError, setValidationError] = useState(false);\r\n    const [subheads, setSubheads] = useState([]);\r\n    const [subhead, setSubhead] = useState({name: \"\"});\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [offset, setOffset] = useState(0);\r\n    const [limit, setLimit] = useState(15);\r\n    const [dbLength, setDbLength] = useState(0);\r\n\r\n    // Modal State\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n    // to set the value of modal post button. this value will be checked at backend to update the record\r\n    // payorderID will be the id of the payorder clicked for editing\r\n    const [subheadID, setSubheadID] = useState(0);\r\n\r\n    // when the user will click on the action button toggleActionList function will be called and value of this\r\n    // variable showID will be updated with the uniqe serial number set as the value of action button\r\n    const [showID, setShowID] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        axios.post(\"http://localhost:3030/api/subheads\", {limit, offset}, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(res => {\r\n                console.log(res.data);\r\n                setSubheads(res.data.subheads);\r\n                setDbLength(res.data.results.length);\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }, []);\r\n\r\n    function onChange(e) {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        \r\n        setSubhead(prev => {\r\n            return {...prev, [name]: value}\r\n        });\r\n    }\r\n\r\n\r\n    function addSubhead(e) {\r\n\r\n        if(!subhead.name) {\r\n            setValidationError(true);\r\n            return e.preventDefault();\r\n        }\r\n\r\n        axios.post(\"http://localhost:3030/api/subheads/add\", { subhead, subhead_id: e.target.value }, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(res => {\r\n                setValidationError(false);\r\n                alert(res.data.msg);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    function changeViewLimit(e) {\r\n        \r\n        // Set Everything to 0 i.e start from beginnning\r\n        setDbLength(0);\r\n        setSearchText(\"\");\r\n        setOffset(0);\r\n        setLimit(0);\r\n\r\n        // catch the dynamic limit value\r\n        const viewLimit = Number(e.target.value);\r\n\r\n        axios.post(\"http://localhost:3030/api/subheads\", {limit: viewLimit, offset: 0}, {headers: {\"x-auth-token\": jwtToken}})\r\n        .then(res => {\r\n\r\n            // Set limit with dynamic value\r\n            setLimit(viewLimit);\r\n            setSubheads(res.data.subheads);\r\n            setDbLength(res.data.results.length);\r\n            \r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    \r\n    function searchSubheads(e) {\r\n\r\n        const text = e.target.value;\r\n\r\n        axios.post(\"http://localhost:3030/api/subheads/search\", {limit, offset: 0, text}, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(res => {\r\n\r\n                // Updating dbLength with search results sent from backend \r\n                setDbLength(res.data.results.length);\r\n\r\n                // Updating jobs state with jobs data sent from backend\r\n                setSubheads(res.data.subheads);\r\n\r\n                setOffset(0);\r\n                setSearchText(text);\r\n                \r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    function showNextPrevItems(e) {\r\n        const newOffsetValue = Number(e.target.value);\r\n\r\n        axios.post(\"http://localhost:3030/api/subheads/search\", {limit, offset: newOffsetValue, text: searchText}, {\r\n            headers: {\"x-auth-token\": jwtToken}\r\n        })\r\n            .then(res => {\r\n            setSubheads(res.data.subheads);\r\n            setDbLength(res.data.results.length);\r\n            setOffset(newOffsetValue);\r\n        })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    function toggleActionList(e) {\r\n        showID !== 0 ? setShowID(0) : setShowID(Number(e.target.value));\r\n    }\r\n\r\n    const toggleDeleteModal = e => {\r\n        setShowID(0);\r\n        const _id = Number(e.target.value);\r\n        setSubheadID(_id);\r\n        e.target.textContent === \"No\" ? setShowDeleteModal(false) : setShowDeleteModal(true);\r\n        //setShowDeleteModal(true);\r\n    }\r\n\r\n    function editRecord(e) {\r\n        // edit button value is the payorder's unique serial no. axios call must have this number to find the exact payorder\r\n        const subhead_id = Number(e.target.value);\r\n\r\n        axios.post(\"http://localhost:3030/api/subheads\", {subhead_id}, {headers: {\"x-auth-token\": jwtToken}})\r\n        .then(res => {\r\n            // to set the display of action list to none\r\n            setShowID(0);\r\n            // setting the value of modal post button\r\n            setSubheadID(res.data[0].serial_no);\r\n            // displaying the modal to edit\r\n            setShowModal(true);\r\n            // updating all the input fileds of the modal\r\n            setSubhead(prev => {\r\n                return {\r\n                    ...prev,\r\n                    name: res.data[0].name\r\n                }\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    function deleteRecord(e) {\r\n        axios.post(\"http://localhost:3030/api/subheads/delete\", {_id: subheadID}, {headers: {\"x-auth-token\": jwtToken}})\r\n        .then(res => {\r\n            // Displaying the success message\r\n            //alert(res.data.msg);\r\n            // Hiding the DeleteModal\r\n            setShowDeleteModal(false);\r\n            // Hiding the action list\r\n            setShowID(0);\r\n\r\n            // Clearing the value of modal button titled 'post'\r\n            setSubheadID(0);\r\n        \r\n            // Populating the table with updated payorder data\r\n            axios.post(\"http://localhost:3030/api/subheads\", { limit, offset }, {headers: {\"x-auth-token\": jwtToken}})\r\n                .then(response => {\r\n                // Updating dbLength state with entire table data sent from backend\r\n                setDbLength(response.data.results.length);\r\n                // Updating job state with job data sent from backend\r\n                setSubheads(response.data.subheads);\r\n                })\r\n                .catch(err => console.log(err));\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    function closeModal() {\r\n        // modal post button value now should be empty string. if user wants to add a new payorder post button will \r\n        // have no value so backend will treat the request as a new add request\r\n        setSubheadID(0);\r\n        // setting every modal input fields to empty string again. \r\n        setSubhead(prev => {\r\n            return {\r\n                ...prev,\r\n                name: \"\"\r\n            }\r\n        });\r\n        // setting the display of modal to none\r\n        setShowModal(false);\r\n\r\n        // Populating the table with updated payorder data\r\n        axios.post(\"http://localhost:3030/api/subheads\", { limit, offset }, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(response => {\r\n            // Updating dbLength state with entire table data sent from backend\r\n            setDbLength(response.data.results.length);\r\n            // Updating job state with job data sent from backend\r\n            setSubheads(response.data.subheads);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    function exportPdf() {\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"portrait\"; // portrait or landscape\r\n\r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n\r\n        doc.setFontSize(15);\r\n\r\n        const title = \"Subhead Report\";\r\n        const headers = [[\"Serial No\", \"Subhead Name\"]];\r\n\r\n        const data = subheads.map(subhead => [ subhead.serial_no, subhead.name ]);\r\n\r\n        let content = {\r\n            startY: 50,\r\n            head: headers,\r\n            body: data\r\n        };\r\n\r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"subheadReport.pdf\")\r\n    }\r\n\r\n\r\n\r\n    // Rendering\r\n    if(typeof jwtToken === \"undefined\") {\r\n        return (\r\n            <div>{history.push(\"/\")}</div>\r\n        );\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <Navbar />\r\n            <div className=\"content\">\r\n                <SideNav />\r\n                <div className=\"main-content\">\r\n                <Title title = \"Subhead Details\" />\r\n                    <div className=\"content-search-export\">\r\n                        <ViewLimitSearch \r\n                        search = {searchSubheads} \r\n                        changeViewLimit = {changeViewLimit} \r\n                        searchText = {searchText}\r\n                        />\r\n                        <Export exportPdf = {exportPdf} data = {subheads}/>\r\n                        <ModalButton textContent = \"Add New Subhead\" setShowModal = {setShowModal}/>\r\n\r\n                        \r\n                    </div>\r\n                    <div className=\"content-table\">\r\n                        <SubheadTable \r\n                        subheads = {subheads}\r\n                        editRecord = {editRecord}\r\n                        toggleActionList = {toggleActionList} \r\n                        toggleDeleteModal = {toggleDeleteModal}\r\n                        showID = {showID} \r\n                        />\r\n                    </div>\r\n                    \r\n                    \r\n                    <NextPrevView\r\n                    showNextPrevItems = {showNextPrevItems}\r\n                    limit = {limit}\r\n                    offset = {offset}\r\n                    dbLength = {dbLength} \r\n                    />\r\n                    <SubheadModal \r\n                    showModal = {showModal} \r\n                    closeModal = {closeModal}\r\n                    subhead = {subhead}\r\n                    validationError = {validationError} \r\n                    onChange = {onChange}\r\n                    addSubhead = {addSubhead}\r\n                    subheadID = {subheadID}\r\n                    />\r\n\r\n                    <DeleteModal\r\n                    showDeleteModal = {showDeleteModal}\r\n                    toggleDeleteModal = {toggleDeleteModal}\r\n                    deleteRecord = {deleteRecord} \r\n                    itemID = {subheadID}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Subheads;","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Jobs\\JobModal.js",["654"],"import React, { useState } from \"react\";\r\n// Children\r\nimport { Input } from \"../common-components/Inputs/Input\";\r\nimport { SelectInput } from \"../common-components/Inputs/SelectInput\";\r\nimport { NumberInput } from \"../common-components/Inputs/NumberInput\";\r\n\r\nexport const JobModal = ({ job, jobID, addJob, onChange, error, showModal, closeModal }) => {\r\n    // destructuring the job object for readability\r\n    const { job_heading, name, job_description, value, credit, status } = job;\r\n    // for option values of select element\r\n    const selectInputValues = [\r\n        {_id: 1, value:  \"Active\"},\r\n        {_id: 2, value:  \"Inactive\"},\r\n        {_id: 3, value:  \"Cancelled\"},\r\n        {_id: 4, value:  \"Completed\"},\r\n    ];\r\n\r\n    return (\r\n        <div className=\"modal\" style = {{display: showModal ? \"block\" : \"none\"}}>\r\n            <button id = \"close\" onClick = {closeModal}>X</button>\r\n            \r\n            <div className=\"modal-content\">\r\n                <div className=\"inputs\">\r\n                    <Input label = \"Job Heading\" name = \"job_heading\" value = {job_heading} onChange = {onChange} error = {error} />\r\n                    <Input label = \"Name\" name = \"name\" value = {name} onChange = {onChange} error = {error} />\r\n                    <Input label = \"Description\" name = \"job_description\" value = {job_description} onChange = {onChange} error = {error} />\r\n                    <NumberInput label = \"Value\" name = \"value\" value = {value} onChange = {onChange} error = {error} />\r\n                    <NumberInput label = \"Credit\" name = \"credit\" value = {credit} onChange = {onChange} error = {error} />\r\n                    <SelectInput label = \"Status\" name = \"status\" value = {status} values = {selectInputValues} onChange = {onChange} error = {error} />\r\n                </div>\r\n                <div className=\"modal-button\">\r\n                    <button value = {jobID} onClick = {addJob}>Post</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Subheads\\SubheadModal.js",["655"],"import React, { useState } from \"react\";\r\n\r\n// Importing Input Component\r\nimport { Input } from \"../common-components/inputs/Input\";\r\n\r\n\r\n\r\n\r\nexport const SubheadModal = ({ showModal, closeModal, subhead, validationError, onChange, addSubhead, subheadID}) => {\r\n\r\n    return (\r\n        <div className=\"modal\" style = {{display: showModal ? \"block\" : \"none\"}}>\r\n            <button id = \"close\" onClick = {closeModal}>X</button>\r\n            <div className=\"modal-content\">\r\n                <div className=\"inputs\">\r\n                    <Input \r\n                    label = \"Subhead Name\" \r\n                    name = \"name\" \r\n                    value = {subhead.name} \r\n                    onChange = {onChange}\r\n                    error = {validationError}  \r\n                    />\r\n                </div>\r\n                <div className=\"modal-button\">\r\n                    <button value={subheadID} onClick = {addSubhead}>Post</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Materials\\MaterialModal.js",["656","657"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\n// Importing Input Component\r\nimport { Input } from \"../common-components/inputs/Input\";\r\n\r\nexport const MaterialModal = ({ showModal, closeModal, material, materialID, validationError, onChange, addMaterial, }) => {\r\n\r\n    \r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"modal\" style = {{display: showModal ? \"block\" : \"none\"}}>\r\n            <button id = \"close\" onClick = {closeModal}>X</button>\r\n            <div className=\"modal-content\">\r\n                <div className=\"inputs\">\r\n                    <Input \r\n                    label = \"Material Name\" \r\n                    name = \"name\" \r\n                    value = {material.name} \r\n                    onChange = {onChange}\r\n                    error = {validationError} \r\n                    />\r\n                    <Input \r\n                    label = \"Material Unit\" \r\n                    name = \"unit\" \r\n                    value = {material.unit} \r\n                    onChange = {onChange}\r\n                    error = {validationError} \r\n                    />\r\n                </div>\r\n                <div className=\"modal-button\">\r\n                    <button value = {materialID} onClick = {addMaterial}>Post</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Payorders\\Payorders.js",["658"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\nimport axios from \"axios\";\r\n\r\n// Export To PDF Packages\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\n// Navigation Bars\r\nimport Navbar from \"../Navbars/Navbar\";\r\nimport SideNav from \"../Navbars/SideNav\";\r\n\r\n// Child Components\r\nimport { PayorderTable } from \"./PayorderTable\";\r\nimport { PayorderModal } from \"./PayorderModal\";\r\n\r\n// Other Components\r\nimport { NextPrevView } from \"../common-components/NextPrevView\";\r\nimport { ViewLimitSearch } from \"../common-components/ViewLimitSearch\";\r\nimport { Export } from \"../common-components/Export\";\r\nimport { ModalButton } from \"../common-components/ModalButton\";\r\nimport { ContentHeader } from \"../common-components/ContentHeader\";\r\nimport { DeleteModal } from \"../common-components/DeleteModal\";\r\n\r\n\r\nfunction Payorders() {\r\n    \r\n    const history = useHistory();\r\n    const cookies = new Cookies();\r\n    const jwtToken = cookies.get(\"jwtToken\");\r\n\r\n    const [date, setDate] = useState(null);\r\n    const [payorder, setPayorder] = useState({\r\n        payorder_no: \"\",\r\n        bank_name: \"\",\r\n        branch_name: \"\",\r\n        receiver_name: \"\",\r\n        total_amount: \"\",\r\n        remarks: \"\",\r\n        added_by: localStorage.getItem(\"name\")\r\n    });\r\n\r\n    const [validationError, setValidationError] = useState(false);\r\n    const [payorders, setPayorders] = useState([]);\r\n    const [offset, setOffset] = useState(0);\r\n    const [limit, setLimit] = useState(15);\r\n    const [dbLength, setDbLength] = useState(0);\r\n\r\n    // Search Text\r\n    const [searchText, setSearchText] = useState(\"\");\r\n\r\n    // Modal State\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n\r\n    // to set the value of modal post button. this value will be checked at backend to update the record\r\n    // payorderID will be the id of the payorder clicked for editing\r\n    const [payorderID, setPayorderID] = useState(0);\r\n\r\n    // when the user will click on the action button toggleActionList function will be called and value of this\r\n    // variable showID will be updated with the uniqe serial number set as the value of action button\r\n    const [showID, setShowID] = useState(0);\r\n\r\n    useEffect(() => {\r\n        axios.post(\"http://localhost:3030/api/payorders\", { limit, offset }, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(res => {\r\n                // Updating dbLength state with entire table data sent from backend\r\n                setDbLength(res.data.results.length);\r\n                // Updating job state with job data sent from backend\r\n                setPayorders(res.data.payorders);\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }, []);\r\n\r\n\r\n    function onChange(e) {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        \r\n        setPayorder(prev => {\r\n            return {...prev, [name]: value}\r\n        });\r\n    }\r\n\r\n    function addPayorder(e) {\r\n        if (\r\n            !payorder.payorder_no || \r\n            !payorder.bank_name || \r\n            !payorder.branch_name || \r\n            !payorder.receiver_name ||\r\n            !payorder.total_amount ||\r\n            !payorder.remarks ||\r\n            !date\r\n            \r\n        ) {\r\n            setValidationError(true);\r\n            return e.preventDefault();\r\n        }\r\n\r\n       \r\n        axios.post(\"http://localhost:3030/api/payorders/add\", {date, payorder, payorder_id: e.target.value}, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(res => {\r\n                setValidationError(false);\r\n                alert(res.data.msg);\r\n            })\r\n            .catch(err => alert(err.response.data.msg));\r\n    }\r\n\r\n   \r\n    function changeViewLimit(e) {\r\n        \r\n        // Set Everything to 0 i.e start from beginnning\r\n        setDbLength(0);\r\n        setSearchText(\"\");\r\n        setOffset(0);\r\n        setLimit(0);\r\n\r\n        // catch the dynamic limit value\r\n        const viewLimit = Number(e.target.value);\r\n\r\n        axios.post(\"http://localhost:3030/api/payorders\", {limit: viewLimit, offset: 0}, {headers: {\"x-auth-token\": jwtToken}})\r\n        .then(res => {\r\n            setLimit(viewLimit);\r\n            setPayorders(res.data.payorders);\r\n            setDbLength(res.data.results.length);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    \r\n    function searchPayorders(e) {\r\n\r\n        const text = e.target.value;\r\n\r\n        axios.post(\"http://localhost:3030/api/payorders/search\", {limit, offset: 0, text}, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(res => {\r\n                // Updating dbLength with search results sent from backend \r\n                setDbLength(res.data.results.length);\r\n\r\n                // Updating jobs state with jobs data sent from backend\r\n                setPayorders(res.data.payorders);\r\n\r\n                setOffset(0);\r\n                setSearchText(text);\r\n                \r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    function showNextPrevItems(e) {\r\n        \r\n        const newOffsetValue = Number(e.target.value);\r\n\r\n        axios.post(\"http://localhost:3030/api/payorders/search\", {limit, offset: newOffsetValue, text: searchText}, {\r\n            headers: {\"x-auth-token\": jwtToken}\r\n        })\r\n            .then(res => {\r\n                setPayorders(res.data.payorders);\r\n                setDbLength(res.data.results.length);\r\n                setOffset(newOffsetValue);\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    function toggleActionList(e) {\r\n        showID !== 0 ? setShowID(0) : setShowID(Number(e.target.value));\r\n    }\r\n\r\n\r\n    function editRecord(e) {\r\n        // edit button value is the payorder's unique serial no. axios call must have this number to find the exact payorder\r\n        const payorder_id = Number(e.target.value);\r\n\r\n        axios.post(\"http://localhost:3030/api/payorders\", {payorder_id}, {headers: {\"x-auth-token\": jwtToken}})\r\n        .then(res => {\r\n            // setting value of date input field\r\n            setDate(new Date(res.data[0].date_time));\r\n            // to set the display of action list to none\r\n            setShowID(0);\r\n            // setting the value of modal post button\r\n            setPayorderID(res.data[0].serial_no);\r\n            // displaying the modal to edit\r\n            setShowModal(true);\r\n            // updating all the input fileds of the modal\r\n            setPayorder(prev => {\r\n                return {\r\n                    ...prev,\r\n                    payorder_no: res.data[0].payorder_no,\r\n                    bank_name: res.data[0].bank_name,\r\n                    branch_name: res.data[0].branch_name,\r\n                    receiver_name: res.data[0].receiver_name,\r\n                    total_amount: res.data[0].total_amount,\r\n                    remarks: res.data[0].remarks\r\n                }\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    const toggleDeleteModal = e => {\r\n        setShowID(0);\r\n        const _id = Number(e.target.value);\r\n        setPayorderID(_id);\r\n        e.target.textContent === \"No\" ? setShowDeleteModal(false) : setShowDeleteModal(true);\r\n        //setShowDeleteModal(true);\r\n    }\r\n\r\n\r\n    function deleteRecord(e) {\r\n        axios.post(\"http://localhost:3030/api/payorders/delete\", {_id: payorderID}, {headers: {\"x-auth-token\": jwtToken}})\r\n        .then(res => {\r\n            // Displaying the success message\r\n            //alert(res.data.msg);\r\n            // Hiding the DeleteModal\r\n            setShowDeleteModal(false);\r\n            // Hiding the action list\r\n            setShowID(0);\r\n            // Clearing the value of modal button titled 'post'\r\n            setPayorderID(0);\r\n        \r\n            // Populating the table with updated payorder data\r\n            axios.post(\"http://localhost:3030/api/payorders\", { limit, offset }, {headers: {\"x-auth-token\": jwtToken}})\r\n                .then(response => {\r\n                // Updating dbLength state with entire table data sent from backend\r\n                setDbLength(response.data.results.length);\r\n                // Updating job state with job data sent from backend\r\n                setPayorders(response.data.payorders);\r\n                })\r\n                .catch(err => console.log(err));\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    \r\n    function closeModal() {\r\n        // modal post button value now should be empty string. if user wants to add a new payorder post button will \r\n        // have no value so backend will treat the request as a new add request\r\n        setPayorderID(0);\r\n        // setting the date input value to null again\r\n        setDate(null);\r\n        // setting every modal input fields to empty string again. \r\n        setPayorder(prev => {\r\n            return {\r\n                ...prev,\r\n                payorder_no: \"\",\r\n                bank_name: \"\",\r\n                branch_name: \"\",\r\n                receiver_name: \"\",\r\n                total_amount: \"\",\r\n                remarks: \"\"\r\n            }\r\n        });\r\n        // setting the display of modal to none\r\n        setShowModal(false);\r\n\r\n        setValidationError(false);\r\n\r\n        // Populating the table with updated payorder data\r\n        axios.post(\"http://localhost:3030/api/payorders\", { limit, offset }, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(response => {\r\n            // Updating dbLength state with entire table data sent from backend\r\n            setDbLength(response.data.results.length);\r\n            // Updating job state with job data sent from backend\r\n            setPayorders(response.data.payorders);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    function exportPdf() {\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"landscape\"; // portrait or landscape\r\n\r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n\r\n        doc.setFontSize(15);\r\n\r\n        const title = \"Payorder Report\";\r\n        const headers = [\r\n            [\r\n                \"Serial No\", \r\n                \"Date\", \r\n                \"Payorder No\", \r\n                \"Bank Name\", \r\n                \"Branch Name\", \r\n                \"Receiver Name\", \r\n                \"Total Amount\", \"Release Status\", \r\n                \"Approval Status\",\r\n                \"Added By\",\r\n                \"Remarks\" \r\n            ]\r\n        ];\r\n\r\n        const data = payorders.map(payorder => [\r\n            payorder.serial_no,\r\n            payorder.date_time,\r\n            payorder.payorder_no,\r\n            payorder.bank_name,\r\n            payorder.branch_name,\r\n            payorder.receiver_name,\r\n            payorder.total_amount,\r\n            payorder.release_status,\r\n            payorder.approval_status,\r\n            payorder.added_by,\r\n            payorder.remarks\r\n        ]);\r\n\r\n        let content = {\r\n            startY: 50,\r\n            head: headers,\r\n            body: data\r\n        };\r\n\r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"payorderReport.pdf\")\r\n    }\r\n\r\n\r\n    // No Token on cookie? Then redirect to login page\r\n    if(typeof jwtToken === \"undefined\") {\r\n        return (\r\n            <div>{history.push(\"/\")}</div>\r\n        );\r\n    } \r\n        \r\n    \r\n    return (\r\n        <div className=\"container\">\r\n                <Navbar />\r\n            <div className=\"content\">\r\n                <SideNav />\r\n                <div className=\"main-content\">\r\n                    <ContentHeader title = \"Payorder Details\" />\r\n\r\n                    <div className=\"content-search-export\">\r\n                        <ViewLimitSearch \r\n                        search = {searchPayorders} \r\n                        changeViewLimit = {changeViewLimit} \r\n                        searchText = {searchText}\r\n                        />\r\n                        <Export exportPdf = {exportPdf} data = {payorders}/>\r\n                        <ModalButton textContent = \"Add New Payorder\" setShowModal = {setShowModal}/>\r\n                    </div>\r\n\r\n                    <div className=\"content-table\">\r\n                        <PayorderTable \r\n                        payorders = {payorders}\r\n                        editRecord = {editRecord}\r\n                        showID = {showID}\r\n                        toggleActionList = {toggleActionList} \r\n                        toggleDeleteModal = {toggleDeleteModal}\r\n                        />\r\n                    </div>\r\n                    \r\n                    <NextPrevView\r\n                    showNextPrevItems = {showNextPrevItems}\r\n                    limit = {limit}\r\n                    offset = {offset}\r\n                    dbLength = {dbLength} \r\n                    />\r\n\r\n                    <PayorderModal \r\n                    date = {date}\r\n                    setDate = {setDate}\r\n                    payorder = {payorder} \r\n                    showModal = {showModal} \r\n                    setShowModal = {setShowModal}\r\n                    closeModal = {closeModal}\r\n                    payorderID = {payorderID} \r\n                    onChange = {onChange}\r\n                    addPayorder = {addPayorder}\r\n                    validationError = {validationError}\r\n                    />\r\n\r\n                    <DeleteModal\r\n                    showDeleteModal = {showDeleteModal}\r\n                    toggleDeleteModal = {toggleDeleteModal}\r\n                    deleteRecord = {deleteRecord} \r\n                    itemID = {payorderID}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\n\r\nexport default Payorders;","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Payorders\\PayorderModal.js",["659","660","661","662"],"import React, { useState } from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\nimport axios from \"axios\";\r\n\r\n\r\n// Children\r\nimport { DateInput } from \"../common-components/inputs/DateInput\";\r\nimport { Input } from \"../common-components/inputs/Input\";\r\n\r\n\r\nexport const PayorderModal = ({ date, setDate, payorder, payorderID, showModal, closeModal, onChange, addPayorder, validationError }) => {\r\n\r\n    const history = useHistory();\r\n    const cookies = new Cookies();\r\n    const jwtToken = cookies.get(\"jwtToken\");\r\n\r\n    \r\n  \r\n   \r\n\r\n    return (\r\n        <div className=\"modal\" style = {{display: showModal ? \"block\" : \"none\"}}>\r\n            <button id = \"close\" onClick = {closeModal}>X</button>\r\n            <div className=\"modal-content\">\r\n                <div className=\"inputs\">\r\n                    <DateInput label = \"Date\" date = {date} setDate = {setDate} error = {validationError} />\r\n                    <Input \r\n                    label = \"Payorder No\" \r\n                    name = \"payorder_no\" \r\n                    value = {payorder.payorder_no} \r\n                    onChange = {onChange}\r\n                    error = {validationError} \r\n                    />\r\n                    <Input \r\n                    label = \"Bank Name\" \r\n                    name = \"bank_name\" \r\n                    value = {payorder.bank_name} \r\n                    onChange = {onChange}\r\n                    error = {validationError}\r\n                    />\r\n                    <Input \r\n                    label = \"Branch Name\" \r\n                    name = \"branch_name\" \r\n                    value = {payorder.branch_name} \r\n                    onChange = {onChange}\r\n                    error = {validationError} \r\n                    />\r\n                    <Input \r\n                    label = \"Receiver Name\" \r\n                    name = \"receiver_name\" \r\n                    value = {payorder.receiver_name} \r\n                    onChange = {onChange}\r\n                    error = {validationError} \r\n                    />\r\n                    <Input \r\n                    label = \"Amount\" \r\n                    name = \"total_amount\" \r\n                    value = {payorder.total_amount} \r\n                    onChange = {onChange}\r\n                    error = {validationError} \r\n                    />\r\n                    <Input \r\n                    label = \"Remarks\" \r\n                    name = \"remarks\" \r\n                    value = {payorder.remarks} \r\n                    onChange = {onChange}\r\n                    error = {validationError} \r\n                    />\r\n                    \r\n                </div>\r\n                <div className=\"modal-button\">\r\n                    <button value = {payorderID ? payorderID : 0} onClick = {addPayorder}>Post</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Payorders\\PayorderTable.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Jobs\\JobTable.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Materials\\MaterialTable.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Subheads\\SubheadTable.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\App.js",["663"],"import React, { useState } from \"react\";\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\n\n// Components\nimport Home from \"./components/Home/Home\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport Profile from \"./components/Profile/Profile\";\nimport Users from \"./components/UserList/Users\";\nimport Jobs from \"./components/Jobs/Jobs\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport Materials from \"./components/Materials/Materials\";\nimport Subheads from \"./components/Subheads/Subheads\";\nimport Payorders from \"./components/Payorders/Payorders\";\n\n\n// Stylesheet\nimport \"./App.css\"\n\n\nfunction App() {\n \n  return (\n    <Router>\n      <Route exact path = \"/\"  component = {Home} />\n      <Route exact path = \"/dashboard\" component = {Dashboard}/>\n      <Route exact path = \"/dashboard/jobs\"  component = {Jobs} />\n      <Route exact path = \"/dashboard/expenses\"  component = {Expenses} />\n      <Route exact path = \"/dashboard/subheads\"  component = {Subheads} />\n      <Route exact path = \"/dashboard/materials\"  component = {Materials} />\n      <Route exact path = \"/dashboard/payorders\"  component = {Payorders} />\n      <Route exact path = \"/profile/:slug\" component={Profile} />\n      <Route exact path = \"/users\"  component={Users} />\n    </Router>\n  );\n  \n}\n\nexport default App;\n","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Expenses\\ExpensesModal.js",["664","665","666","667"],"import React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Cookies from \"universal-cookie\";\r\nimport axios from \"axios\";\r\n\r\n// Date Picker CSS\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\n// Children\r\nimport { DateInput } from \"../common-components/inputs/DateInput\";\r\nimport { Input } from \"../common-components/inputs/Input\";\r\nimport { ListInput } from \"../common-components/inputs/ListInput\";\r\nimport { NumberInput } from \"../common-components/inputs/NumberInput\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction ExpensesModal({\r\n    addExpense, \r\n    showModal, \r\n    closeModal, \r\n    date, \r\n    setDate,\r\n    expense,\r\n    expenseID,\r\n    materialUnit, \r\n    validationError, \r\n    list, \r\n    onChange, \r\n    selectItem, \r\n    isJobListVisible,\r\n    isSubheadListVisible,\r\n    isMaterialListVisible\r\n}) {\r\n\r\n\r\n    return (\r\n        <div className=\"modal\" style = {{display: showModal ? \"block\" : \"none\"}}>\r\n            <button id = \"close\" onClick = {closeModal}>X</button>\r\n            <div className=\"modal-content\">\r\n                <div className=\"inputs\">\r\n\r\n                    <DateInput \r\n                    label = \"Date\" \r\n                    date = {date} \r\n                    setDate = {setDate}\r\n                    error = {validationError} \r\n                    />\r\n                    \r\n                    <ListInput \r\n                    label = \"Job\"\r\n                    className = \"job\" \r\n                    name = \"job\" \r\n                    value = {expense.job}\r\n                    item = {expense.job} \r\n                    onChange = {onChange} \r\n                    selectItem = {selectItem}\r\n                    isListVisible = {isJobListVisible}\r\n                    items = {list.job} \r\n                    error = {validationError}\r\n                    \r\n                    />\r\n\r\n                    <ListInput \r\n                    label = \"Subhead\"\r\n                    className = \"subhead\" \r\n                    name = \"subhead\" \r\n                    value = {expense.subhead}\r\n                    item = {expense.subhead} \r\n                    onChange = {onChange} \r\n                    selectItem = {selectItem}\r\n                    isListVisible = {isSubheadListVisible}\r\n                    items = {list.subhead} \r\n                    error = {validationError}\r\n                    />\r\n\r\n                    \r\n                    <ListInput \r\n                    label = \"Material\"\r\n                    className = \"material\" \r\n                    name = \"material\" \r\n                    value = {expense.material}\r\n                    item = {expense.material} \r\n                    onChange = {onChange} \r\n                    selectItem = {selectItem}\r\n                    isListVisible = {isMaterialListVisible}\r\n                    items = {list.material} \r\n                    error = {validationError}\r\n                    />\r\n\r\n                    <Input \r\n                    label = \"Description\" \r\n                    name = \"description\" \r\n                    value = {expense.description} \r\n                    onChange = {onChange} \r\n                    error = {validationError}\r\n                    />\r\n\r\n                    <NumberInput \r\n                    label = \"Quantity\" \r\n                    name = \"qty\" \r\n                    value = {expense.qty} \r\n                    onChange = {onChange}\r\n                    error = {validationError} \r\n                    />\r\n\r\n                    <Input \r\n                    label = \"Unit\" \r\n                    name = \"unit\"\r\n                    value = {materialUnit}\r\n                    onChange = {onChange}\r\n                    disabled = \"true\"\r\n                    error = {validationError}\r\n                    />\r\n\r\n                    <NumberInput \r\n                    label = \"Unit Price\" \r\n                    name = \"unit_price\" \r\n                    value = {expense.unit_price} \r\n                    onChange = {onChange} \r\n                    error = {validationError}\r\n                    />\r\n\r\n                    <NumberInput \r\n                    label = \"Discount\" \r\n                    name = \"discount\" \r\n                    value = {expense.discount} \r\n                    onChange = {onChange}\r\n                    error = {validationError}\r\n                    />\r\n\r\n                    <NumberInput \r\n                    label = \"Upcharge\" \r\n                    name = \"upcharge\" \r\n                    value = {expense.upcharge} \r\n                    onChange = {onChange}\r\n                    error = {validationError}\r\n                    />\r\n                </div>\r\n                <div className=\"modal-button\">\r\n                    <button value = {expenseID} onClick = {addExpense}>Post</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default ExpensesModal;","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Expenses\\ExpensesTable.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Profile\\BasicInfo.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Profile\\ProfileImage.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Profile\\ProfileOtherInfo.js",["668"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { OtherInfo } from \"./OtherInfo\";\r\n\r\nexport const ProfileOtherInfo = ({ user, editUser, editUsername }) => {\r\n    return (\r\n        <div className=\"other-info\">\r\n            <h2>Other Details</h2>\r\n            <OtherInfo header = \"First Name\" content = {user.first_name}/>\r\n            <OtherInfo header = \"Last Name\" content = {user.last_name}/>\r\n            <OtherInfo header = \"Designation\" content = {user.designation}/>\r\n            <OtherInfo header = \"Position\" content = {user.role}/>\r\n            <OtherInfo header = \"Status\" content = {user.status}/>\r\n            <div className=\"profile-edit\">\r\n                <button id=\"profile-edit-button\" value = {editUsername} onClick = {editUser}>Edit</button>\r\n                {/* <Link id=\"profile-edit-button\" value = {user.user_id} to=\"/users/add\">Edit</Link> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\Profile\\OtherInfo.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\UserList\\Users.js",["669"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie\";\r\nimport axios from \"axios\";\r\n\r\n//Stylesheet\r\nimport \"./UserList.css\";\r\n// Export To PDF Packages\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Navigation Bars\r\nimport Navbar from \"../Navbars/Navbar\";\r\nimport SideNav from \"../Navbars/SideNav\";\r\n// Child Components\r\nimport { UserList } from \"./List/UserList\";\r\nimport { UserModal } from \"./Modal/UserModal\";\r\nimport { PasswordModal } from \"./Modal/PasswordModal\";\r\n// Other Components\r\nimport { NextPrevView } from \"../common-components/views/NextPrevView\";\r\nimport { ViewLimitSearch } from \"../common-components/views/ViewLimitSearch\";\r\nimport { Export } from \"../common-components/export-buttons/Export\";\r\nimport { ModalButton } from \"../common-components/others/ModalButton\";\r\nimport { Title } from \"../common-components/list-title/Title\";\r\n\r\n\r\nfunction Users() {\r\n    \r\n    const history = useHistory();\r\n    const cookies = new Cookies();\r\n    const jwtToken = cookies.get(\"jwtToken\");\r\n\r\n    const [user, setUser] = useState({\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        username: \"\",\r\n        designation: \"\",\r\n        role: \"\",\r\n        status: \"\",\r\n        imgUrl: \"\",\r\n        password: \"\",\r\n        password2: \"\"\r\n    });\r\n\r\n    const [showPasswordModal, setShowPasswordModal] = useState(false);\r\n    const [file, setFile] = useState(null);\r\n    const [filename, setFilename] = useState(\"\");\r\n    const [isUploading, setIsUploading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [users, setUsers] = useState([]);\r\n    const [offset, setOffset] = useState(0);\r\n    const [limit, setLimit] = useState(15);\r\n    const [dbLength, setDbLength] = useState(0);\r\n    // Search Text\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    // Modal State\r\n    const [showModal, setShowModal] = useState(false);\r\n    // to set the value of modal post button. this value will be checked at backend to update the record\r\n    // userID will be the id of the user clicked for editing\r\n    const [userID, setUserID] = useState(0);\r\n    // when the user will click on the action button toggleActionList function will be called and value of this\r\n    // variable showID will be updated with the uniqe user_id set as the value of action button\r\n    const [showID, setShowID] = useState(0);\r\n\r\n    useEffect(() => {\r\n        axios.post(\"http://localhost:3030/api/users\", { limit, offset }, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(res => {\r\n                // Updating dbLength state with entire table data sent from backend\r\n                setDbLength(res.data.results.length);\r\n                // Updating job state with user data sent from backend\r\n                setUsers(res.data.users);\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }, []);\r\n\r\n    \r\n    function onChange(e) {\r\n\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        setUser(prev => {\r\n            return {...prev, [name]: value}\r\n        });\r\n    }\r\n\r\n    function addUser(e) {\r\n        // Destructuring the user object\r\n        const { first_name, last_name, username, designation, role, status, password, password2 } = user;\r\n        // form validation\r\n        if ( !first_name || !last_name || !username || !designation || !role || !password || !password2) {\r\n          setError(true);\r\n          return e.preventDefault();\r\n        }\r\n        // checking the password match\r\n        if(password !== password2) {\r\n         alert(\"Passwords didn't match\");\r\n         return e.preventDefault();\r\n        }\r\n        // FormData is used to send file\r\n        const data = new FormData();\r\n        data.append(\"file\", file);\r\n        data.append(\"first_name\", first_name);\r\n        data.append(\"last_name\", last_name);\r\n        data.append(\"username\", username);\r\n        data.append(\"designation\", designation);\r\n        data.append(\"role\", role);\r\n        data.append(\"status\", status);\r\n        data.append(\"password\", password);\r\n        data.append(\"component\", \"profile\");\r\n        // to send a file over axios post, request body should not be added as an object(inside curly braces),\r\n        // because data instance above of FormData is already an object.\r\n        // 2nd parameter of following axios post request contains both file and filename\r\n        // at the express backend req.files.file will get the file\r\n        // and req.body.filename will get the filename\r\n        axios.post(\"http://localhost:3030/api/users/add-user\", data)\r\n          .then(res => {\r\n            history.push(\"/profile/\" + res.data.username);\r\n          })\r\n          .catch(err => console.log(err));\r\n      }\r\n    \r\n    \r\n    const fileHandler = (e) => {\r\n        // if there is a file already in the file state and user didn't upload any image at second attempt then \r\n        // previous file state shouldn't be changed.   \r\n        if(file && !e.target.files.length) {\r\n            setFile(file);\r\n            setFilename(file.name);\r\n        } \r\n        // else update the file state with uploaded file\r\n        else {\r\n          setFile(e.target.files[0]);\r\n          setFilename(e.target.files[0].name);\r\n          setIsUploading(true);\r\n        }\r\n    }\r\n\r\n   \r\n    function changeViewLimit(e) {\r\n        \r\n        // Set Everything to 0 i.e start from beginnning\r\n        setDbLength(0);\r\n        setSearchText(\"\");\r\n        setOffset(0);\r\n        setLimit(0);\r\n\r\n        // catch the dynamic limit value\r\n        const viewLimit = Number(e.target.value);\r\n\r\n        axios.post(\"http://localhost:3030/api/users\", {limit: viewLimit, offset: 0}, {headers: {\"x-auth-token\": jwtToken}})\r\n        .then(res => {\r\n            setLimit(viewLimit);\r\n            setUsers(res.data.users);\r\n            setDbLength(res.data.results.length);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    \r\n    function searchUsers(e) {\r\n\r\n        const text = e.target.value;\r\n\r\n        axios.post(\"http://localhost:3030/api/users/search\", {limit, offset: 0, text}, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(res => {\r\n                // Updating dbLength with search results sent from backend \r\n                setDbLength(res.data.results.length);\r\n\r\n                // Updating users state with users data sent from backend\r\n                setUsers(res.data.users);\r\n\r\n                setOffset(0);\r\n                setSearchText(text);\r\n                \r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    function showNextPrevItems(e) {\r\n        \r\n        const newOffsetValue = Number(e.target.value);\r\n\r\n        axios.post(\"http://localhost:3030/api/users/search\", {limit, offset: newOffsetValue, text: searchText}, {\r\n            headers: {\"x-auth-token\": jwtToken}\r\n        })\r\n            .then(res => {\r\n                setUsers(res.data.users);\r\n                setDbLength(res.data.results.length);\r\n                setOffset(newOffsetValue);\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    function toggleActionList(e) {\r\n        showID !== 0 ? setShowID(0) : setShowID(Number(e.target.value));\r\n    }\r\n\r\n    function editRecord(e) {\r\n        // edit button value is the payorder's unique serial no. axios call must have this number to find the exact payorder\r\n        const user_id = Number(e.target.value);\r\n\r\n        axios.post(\"http://localhost:3030/api/users\", {user_id}, {headers: {\"x-auth-token\": jwtToken}})\r\n        .then(res => {\r\n            // to set the display of action list to none\r\n            setShowID(0);\r\n            // setting the value of modal post button\r\n            setUserID(res.data[0].user_id);\r\n            // displaying the modal to edit\r\n            setShowModal(true);\r\n            // updating all the input fileds of the modal\r\n            setFile(res.data[0].imgUrl);\r\n            setFilename(res.data[0].filename);\r\n            setUser(prev => {\r\n                return {\r\n                    ...prev,\r\n                    first_name: res.data[0].first_name,\r\n                    last_name: res.data[0].last_name,\r\n                    username: res.data[0].username,\r\n                    designation: res.data[0].designation,\r\n                    role: res.data[0].role,\r\n                    status: res.data[0].status,\r\n                    imgUrl: res.data[0].imgUrl,\r\n\r\n                }\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    const togglePasswordModal = e => {\r\n        setShowID(0);\r\n        const _id = Number(e.target.value);\r\n        setUserID(_id);\r\n        e.target.textContent === \"No\" ? setShowPasswordModal(false) : setShowPasswordModal(true);\r\n        //setShowDeleteModal(true);\r\n    }\r\n\r\n    function changePassword(e) {\r\n\r\n    }\r\n\r\n    /*\r\n    function changePassword(e) {\r\n        axios.post(\"http://localhost:3030/api/payorders/delete\", {_id: payorderID}, {headers: {\"x-auth-token\": jwtToken}})\r\n        .then(res => {\r\n            // Displaying the success message\r\n            //alert(res.data.msg);\r\n            // Hiding the DeleteModal\r\n            setShowDeleteModal(false);\r\n            // Hiding the action list\r\n            setShowID(0);\r\n            // Clearing the value of modal button titled 'post'\r\n            setPayorderID(0);\r\n        \r\n            // Populating the table with updated payorder data\r\n            axios.post(\"http://localhost:3030/api/payorders\", { limit, offset }, {headers: {\"x-auth-token\": jwtToken}})\r\n                .then(response => {\r\n                // Updating dbLength state with entire table data sent from backend\r\n                setDbLength(response.data.results.length);\r\n                // Updating job state with job data sent from backend\r\n                setPayorders(response.data.payorders);\r\n                })\r\n                .catch(err => console.log(err));\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n    */\r\n  \r\n    function closeModal() {\r\n        // modal post button value now should be empty string. if user wants to add a new payorder post button will \r\n        // have no value so backend will treat the request as a new add request\r\n        setUserID(0);\r\n        // setting every modal input fields to empty string again. \r\n        setFile(null);\r\n        setIsUploading(false);\r\n        setUser(prev => {\r\n            return {\r\n                ...prev,\r\n                first_name: \"\",\r\n                last_name: \"\",\r\n                username: \"\",\r\n                designation: \"\",\r\n                role: \"\",\r\n                status: \"\",\r\n            }\r\n        });\r\n        // setting the display of modal to none\r\n        setShowModal(false);\r\n\r\n        setError(false);\r\n\r\n        // Populating the table with updated payorder data\r\n        axios.post(\"http://localhost:3030/api/users\", { limit, offset }, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(response => {\r\n            // Updating dbLength state with entire table data sent from backend\r\n            setDbLength(response.data.results.length);\r\n            // Updating job state with job data sent from backend\r\n            setUsers(response.data.users);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    function exportPdf() {\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"landscape\"; // portrait or landscape\r\n\r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n\r\n        doc.setFontSize(15);\r\n\r\n        const title = \"Payorder Report\";\r\n        const headers = [\r\n            [\r\n                \"User ID\",  \r\n                \"First Name\", \r\n                \"Last Name\", \r\n                \"Username\", \r\n                \"Designation\", \r\n                \"Role\",\r\n                \"status\" \r\n            ]\r\n        ];\r\n\r\n        const data = users.map(user => [\r\n            user.user_id,\r\n            user.first_name,\r\n            user.last_name,\r\n            user.username,\r\n            user.designation,\r\n            user.role,\r\n            user.status,\r\n           \r\n        ]);\r\n\r\n        let content = {\r\n            startY: 50,\r\n            head: headers,\r\n            body: data\r\n        };\r\n\r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"UserReport.pdf\")\r\n    }\r\n    \r\n    // No Token on cookie? Then redirect to login page\r\n    if(typeof jwtToken === \"undefined\") {\r\n        return (\r\n            <div>{history.push(\"/\")}</div>\r\n        );\r\n    } \r\n        \r\n    return (\r\n        <div className=\"container\">\r\n                <Navbar />\r\n            <div className=\"content\">\r\n                <SideNav />\r\n                <div className=\"main-content\">\r\n                    <Title title = \"User List\" />\r\n                    <div className=\"content-search-export\">\r\n                        <ViewLimitSearch \r\n                        search = {searchUsers} \r\n                        changeViewLimit = {changeViewLimit} \r\n                        searchText = {searchText}\r\n                        />\r\n                        <Export exportPdf = {exportPdf} data = {users}/>\r\n                        <ModalButton textContent = \"Add User\" setShowModal = {setShowModal}/>\r\n                    </div>\r\n\r\n                    <div className=\"content-table\">\r\n                        <UserList \r\n                        users = {users}\r\n                        editRecord = {editRecord}\r\n                        showID = {showID}\r\n                        toggleActionList = {toggleActionList} \r\n                        togglePasswordModal = {togglePasswordModal}\r\n                        />\r\n                    </div>\r\n                    \r\n                    <NextPrevView\r\n                    showNextPrevItems = {showNextPrevItems}\r\n                    limit = {limit}\r\n                    offset = {offset}\r\n                    dbLength = {dbLength} \r\n                    />\r\n\r\n                    <UserModal \r\n                        fileHandler = {fileHandler}\r\n                        filename = {filename}\r\n                        file = {file}\r\n                        isUploading = {isUploading}\r\n                        user = {user} \r\n                        showModal = {showModal} \r\n                        closeModal = {closeModal}\r\n                        userID = {userID} \r\n                        onChange = {onChange}\r\n                        addUser = {addUser}\r\n                        error = {error}\r\n                    />\r\n\r\n                    <PasswordModal \r\n                        itemID = {userID}\r\n                        changePassword = {changePassword} \r\n                        showPasswordModal = {showPasswordModal}\r\n                        togglePasswordModal = {togglePasswordModal}\r\n                    />\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\n\r\nexport default Users;","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\Inputs\\SelectInput.js",[],["670","671"],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\Inputs\\Input.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\Inputs\\NumberInput.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\Inputs\\ListInput.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\list-title\\Title.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\others\\ModalButton.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\export-buttons\\Export.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\views\\NextPrevView.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\views\\ViewLimitSearch.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\inputs\\ListInput.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\inputs\\SelectInput.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\inputs\\Input.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\inputs\\NumberInput.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\UserList\\List\\UserList.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\UserList\\List\\UserListBody.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\UserList\\List\\UserListHeader.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\tr-td\\NoDataTR.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\tr-td\\ActionTD.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\inputs\\DateInput.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\UserList\\List\\UserListData.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\inputs\\PasswordInput.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\UserList\\Modal\\UserModal.js",["672"],"import React from \"react\";\r\n// Children\r\nimport { ImageUploader } from \"../../common-components/image-uploader/ImageUploader\";\r\nimport { Input } from \"../../common-components/inputs/Input\";\r\nimport { SelectInput } from \"../../common-components/inputs/SelectInput\";\r\nimport { PasswordInput } from \"../../common-components/inputs/PasswordInput\";\r\n\r\n\r\nexport const UserModal = (props) => {\r\n    // Destructuring props object\r\n    let {showModal, closeModal, file, filename, fileHandler, onChange, addUser, user, editUsername, error, isUploading} = props;\r\n    // Destructuring user object\r\n    let { first_name, last_name, username, designation, role, status, imgUrl, password, password2 } = user;\r\n\r\n    const selectRoleValues = [\r\n        {_id: 1, value:  \"Admin\"},\r\n        {_id: 2, value:  \"Manager\"},\r\n        {_id: 3, value:  \"Director\"}\r\n    ];\r\n\r\n    const selectStatusValues = [\r\n        { _id: 1, value: \"Active\" },\r\n        { _id: 2, value: \"Inactive\" }\r\n    ];\r\n\r\n\r\n    return (\r\n        <div className=\"user-modal\" style = {{display: showModal ? \"block\" : \"none\"}}>\r\n            <button id = \"close-modal\" onClick = {closeModal}>X</button>\r\n            <div className=\"user-modal-content\">\r\n                <div className=\"user-info\">\r\n                    <div className=\"image-and-basic\">\r\n                        <div className=\"user-image\">\r\n                            <ImageUploader isUploading = {isUploading} imgUrl = {imgUrl} file = {file} filename = {filename} fileHandler = {fileHandler} />\r\n                        </div>\r\n                        <div className=\"basic-info-container\">\r\n                            <div className=\"basic-info\">\r\n                                <h3>Basic Information</h3>\r\n                                <Input label=\"Username\" name=\"username\" value={username} error={error} onChange={onChange} />\r\n                                <PasswordInput label=\"Password\" name=\"password\" value={password} error={error} onChange={onChange} />\r\n                                <PasswordInput label=\"Confirmation Password\" name=\"password2\" value={user.password2} error={error} onChange={onChange} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"other-info-container\">\r\n                        <div className=\"other-info\">\r\n                            <h3>Other Information</h3>\r\n                            <Input label=\"First Name\" name=\"first_name\" value={first_name} error={error} onChange={onChange} />\r\n                            <Input label=\"Last Name\" name=\"last_name\" value={last_name} error={error} onChange={onChange} />\r\n                            <Input label=\"Designation\" name=\"designation\" value={designation} onChange={onChange} />\r\n                            <SelectInput label=\"Role\" name=\"role\" value={role} values={selectRoleValues} onChange={onChange} />\r\n                            <SelectInput label=\"Status\" name=\"status\" value={status} values={selectStatusValues} onChange={onChange} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"user-button\">\r\n                    <button value = {typeof editUsername !== \"undefined\" ? editUsername : \"\"} onClick = {addUser}>\r\n                        Add New User\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nreturn (\r\n    <div className=\"user-modal\" style = {{display: showModal ? \"block\" : \"none\"}}>\r\n        <button id = \"close-modal\" onClick = {closeModal}>X</button>\r\n        <div className=\"user-modal-content\">\r\n            <div className=\"user-info-wrapper\">\r\n                <div className=\"user-image\">\r\n                    <ImageUploader isUploading = {isUploading} imgUrl = {imgUrl} file = {file} filename = {filename} fileHandler = {fileHandler} />\r\n                </div>\r\n                <div className=\"user-info\">\r\n                    <div className=\"other-info-container\">\r\n                        <div className=\"other-info\">\r\n                            <h3>Other Information</h3>\r\n                            <Input label=\"First Name\" name=\"first_name\" value={first_name} error={error} onChange={onChange} />\r\n                            <Input label=\"Last Name\" name=\"last_name\" value={last_name} error={error} onChange={onChange} />\r\n                            <Input label=\"Designation\" name=\"designation\" value={designation} onChange={onChange} />\r\n                            <SelectInput label=\"Role\" name=\"role\" value={role} values={selectRoleValues} onChange={onChange} />\r\n                            <SelectInput label=\"Status\" name=\"status\" value={status} values={selectStatusValues} onChange={onChange} />   \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"basic-info-container\">\r\n                        <div className=\"basic-info\">\r\n                            <h3>Basic Information</h3>\r\n                            <Input label=\"Username\" name=\"username\" value={username} error={error} onChange={onChange} />\r\n                            <PasswordInput label=\"Password\" name=\"password\" value={password} error={error} onChange={onChange} />\r\n                            <PasswordInput label=\"Confirmation Password\" name=\"password2\" value={password2} error={error} onChange={onChange} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"user-button\">\r\n                <button value = {typeof editUsername !== \"undefined\" ? editUsername : \"\"} onClick = {addUser}>\r\n                    Add New User\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n*/\r\n\r\n\r\n","D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\image-uploader\\ImageUploader.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\UserList\\Modal\\PasswordModal.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\delete-prompt-modal\\DeleteModal.js",[],"D:\\programming\\react-apps\\atoz-app\\react-frontend\\src\\components\\common-components\\tr-td\\UserActionTD.js",[],["673","674"],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\index.js",[],["675","676"],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\App.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Dashboard\\Dashboard.js",["677"],"import React, { useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// Auth\r\nimport { isAuthenticated } from \"../Auth/Auth\";\r\n\r\nimport { CommonContext } from \"../../contexts/common_contexts/CommonContext\";\r\n\r\n\r\nimport \"./Dashboard.css\";\r\n\r\nexport const Dashboard = () => {\r\n\r\n    const { setShowSideNav } = useContext(CommonContext);\r\n    const history = useHistory();\r\n\r\n\r\n    // main and side nav was hid on login component, but here needs to be displayed\r\n    useEffect(() => {\r\n        setShowSideNav(false);\r\n        document.querySelector(\".main-nav\").style.display = \"block\";\r\n        document.querySelector(\".side-nav\").style.display = \"block\";\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    // if user in not authenticated redirect to home/login page\r\n    if(!isAuthenticated()) {\r\n        return <div>{history.push(\"/\")}</div>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"content dashboard\" onClick = {() => setShowSideNav(false)}>\r\n           <h1>Dashboard</h1>\r\n           {/* <div className=\"dashboard-image\">\r\n                <img src=\"../../profile.jpg\" />\r\n           </div> */}\r\n           \r\n        </div>\r\n    );\r\n   \r\n}","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Profile\\Profile.js",["678","679"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// useParams is for accessing dynamic user details\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\n// Auth Middleware\r\nimport { isAuthenticated } from \"../Auth/Auth\";\r\n\r\n// Children\r\nimport { ProfileImage } from \"../common-components/user-info/profile-info/ProfileImage\";\r\nimport { UserDetails } from \"../common-components/user-info/profile-info/UserDetails\";\r\nimport { PicturePreview } from \"../common-components/user-info/profile-add-update/PicturePreview\";\r\nimport { FileInput } from \"../common-components/user-info/profile-add-update/FileInput\";\r\nimport { GeneralInfo } from \"../common-components/user-info/profile-add-update/GeneralInfo\";\r\nimport { UsernameInfo } from \"../common-components/user-info/profile-add-update/UsernameInfo\";\r\nimport { PasswordInfo } from \"../common-components/user-info/profile-add-update/PasswordInfo\";\r\n// Contexts\r\nimport { UserContext } from \"../../contexts/user_context/UserContext\";\r\nimport { CommonContext } from \"../../contexts/common_contexts/CommonContext\";\r\n\r\n// Styling\r\nimport \"./Profile.css\";\r\n\r\n\r\nexport const Profile = () => {\r\n\r\n    // slug here accesses the dynamic username\r\n    let { slug } = useParams();\r\n    const history = useHistory();\r\n    const { userState, addUpdateUser, dispatch } = useContext(UserContext);\r\n    const { setShowSideNav, setShowProfileMenu } = useContext(CommonContext);\r\n\r\n    //\r\n    const roles = [{ _id: 1, value:  \"Admin\" }, { _id: 2, value:  \"Manager\" }, { _id: 3, value:  \"Director\" }];\r\n    const statuses = [{ _id: 1, value: \"Active\" }, { _id: 2, value: \"Inactive\" }];\r\n\r\n    \r\n\r\n    const [user, setUser] = useState({});\r\n    const [userID, setUserID] = useState(0);\r\n    const [userInfo, setUserInfo] = useState({\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        username: \"\",\r\n        designation: \"\",\r\n        role: \"\",\r\n        status: \"\",\r\n        password: \"\",\r\n        password2: \"\"\r\n    });\r\n    const [file, setFile] = useState(null);\r\n    const [filename, setFilename] = useState(\"\");\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [isUploading, setIsUploading] = useState(false);\r\n\r\n    // Dependency editMode is used here to repopulate the userInfo object with data fetched from the backend. \r\n    useEffect(() => {\r\n\r\n        // To hide the profile menu\r\n        setShowProfileMenu(false);\r\n\r\n        axios.post(\"http://localhost:3030/api/users/user\", {username: slug})\r\n            .then(res => {\r\n\r\n                setUser(res.data);\r\n\r\n                setUserInfo(prevValue => {\r\n                    return {\r\n                        ...prevValue,\r\n                        first_name: res.data.first_name,\r\n                        last_name: res.data.last_name,\r\n                        username: res.data.username,\r\n                        designation: res.data.designation,\r\n                        role: res.data.role,\r\n                        status: res.data.status,\r\n                    };\r\n                });\r\n\r\n                setFile(res.data.imgUrl);\r\n                setFilename(res.data.filename);\r\n                setUserID(Number(res.data.user_id));\r\n            })\r\n            .catch(err => console.log(err));\r\n            \r\n    }, [editMode]);\r\n\r\n    function onChange(e) {\r\n\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setUserInfo(prev => {\r\n            return { ...prev, [name]: value };\r\n        });\r\n\r\n    }\r\n\r\n    const fileHandler = event => {\r\n\r\n        const uploadedFile = event.target.files;\r\n        // if there is a file already in the file state and user didn't upload any image at second attempt then \r\n        // previous file state shouldn't be changed.   \r\n        if(file && !uploadedFile.length) {\r\n            setFile(file);\r\n            setFilename(file.name);\r\n        } \r\n        // else update the file state with uploaded file\r\n        else {\r\n            setFile(uploadedFile[0]);\r\n            setFilename(uploadedFile[0].name);\r\n            setIsUploading(true);\r\n        }\r\n    }\r\n\r\n    const hideEditMode = event => {\r\n\r\n        dispatch({\r\n            type: \"FORM_VALIDATION_ERROR\",\r\n            payload: {\r\n                validationError: false,\r\n                passwordError: \"\"\r\n            }\r\n        });\r\n\r\n        setUserInfo(prevValue => {\r\n            return {\r\n                ...prevValue,\r\n                password: \"\",\r\n                password2: \"\"\r\n            };\r\n        });\r\n\r\n        setFile(null);\r\n        setIsUploading(false);\r\n        setEditMode(false);\r\n\r\n    }\r\n    \r\n    // if user in not authenticated redirect to home/login page\r\n    if(!isAuthenticated()) {\r\n        return <div>{history.push(\"/\")}</div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"content user-profile\" onClick = {() => setShowSideNav(false)}>\r\n\r\n            <div className = \"profile-container\" style = {{display: editMode ? \"none\" : \"flex\"}}>\r\n                <button id=\"profile-edit-button\" value = {user.username} onClick = {() => setEditMode(true)}>Edit</button>\r\n                <ProfileImage user = {user} />\r\n                <UserDetails user = {user} />\r\n            </div>\r\n\r\n            <div className=\"edit-mode\" style ={{display: editMode ? \"flex\" : \"none\"}}>\r\n                <div className=\"profile-pic-edit\">\r\n                    <h2>Profile Picture</h2>\r\n                    <PicturePreview file = {file} imgUrl = {user.imgUrl} filename = {filename} isUploading = {isUploading}  />\r\n                    <FileInput file = {file} fileHandler = {fileHandler} isUploading = {isUploading} filename={user.filename} />\r\n                </div>\r\n        \r\n                <div className=\"user-details-edit\" id=\"user-details-edit\">\r\n                    <h2>User Details</h2>\r\n                    <GeneralInfo userInfo = {userInfo} onChange = {onChange} roles = {roles} statuses = {statuses} />\r\n                    <UsernameInfo userInfo = {userInfo} onChange = {onChange} />\r\n                    <PasswordInfo userInfo = {userInfo} onChange = {onChange} userID = {userID} />\r\n                    <div className=\"edit-mode-button\">\r\n                        <button onClick = {hideEditMode}>Cancel/Close</button>\r\n                        <button onClick = {() => addUpdateUser(file, filename, userID, userInfo )}>Update</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n      );\r\n\r\n}","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Jobs\\JobModal.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Payorders\\PayorderModal.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Materials\\MaterialModal.js",["680","681"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\n// Importing Input Component\r\nimport { TextInput } from \"../common-components/inputs/TextInput\";\r\nimport { SelectInput } from \"../common-components/inputs/SelectInput\";\r\n\r\nexport const MaterialModal = ({ \r\n    dispatch, \r\n    material, \r\n    materialID, \r\n    isModalDisplayed, \r\n    hideModal, \r\n    successFailMessage, \r\n    onChange, \r\n    addUpdateMaterial,\r\n    error \r\n}) => {\r\n\r\n    const selectInputValues = [\r\n        {_id: 1, value:  \"Approved\"},\r\n        {_id: 2, value:  \"Rejected\"},\r\n        {_id: 3, value:  \"Pending\"}\r\n    ];\r\n\r\n    return (\r\n        <div className=\"modal\" style = {{display:  isModalDisplayed ? \"block\" : \"none\"}}>\r\n            <button className = \"close-modal\" onClick = {hideModal}>X</button>\r\n            <div className=\"modal-content\" id=\"material-modal-content\">\r\n                <button className=\"add-update-button\" onClick = {() => addUpdateMaterial(materialID, material)}>Post</button>\r\n                <h2>Material Details</h2>\r\n                <div className=\"success-fail-message\" style ={{display: successFailMessage !== null ? \"flex\": \"none\"}}>\r\n                    <p>{ successFailMessage }</p>\r\n                    <button id=\"message-close\" onClick = {() => dispatch({type: \"ADD_UPDATE_ITEM\"})}>X</button>\r\n                </div>\r\n                <div className=\"input-divs\">\r\n                    <TextInput \r\n                    label = \"Material Name\" \r\n                    name = \"name\" \r\n                    value = {material.name} \r\n                    onChange = {onChange}\r\n                    error = {error} \r\n                    />\r\n\r\n                    <TextInput \r\n                    label = \"Material Unit\" \r\n                    name = \"unit\" \r\n                    value = {material.unit} \r\n                    onChange = {onChange}\r\n                    error = {error} \r\n                    />\r\n\r\n                    <SelectInput \r\n                    label = \"Status\" \r\n                    name = \"status\" \r\n                    value = {material.status} \r\n                    values = {selectInputValues} \r\n                    onChange = {onChange} \r\n                    error = {error} \r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\views\\ViewLimitSearch.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\views\\NextPrevView.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\others\\ModalButton.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\export-buttons\\Export.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\delete-prompt-modal\\DeleteModal.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\tr-td\\ActionTD.js",[],["682","683"],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\inputs\\PasswordInput.js",[],["684","685"],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\image-uploader\\ImageUploader.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\tr-td\\NoDataTR.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\tr-td\\UserActionTD.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Jobs\\JobList.js",["686","687"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"universal-cookie\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Auth Middleware\r\nimport { isAuthenticated } from \"../Auth/Auth\";\r\n\r\n\r\n// Children\r\nimport { ViewLimitSearch } from \"../common-components/views/ViewLimitSearch\";\r\nimport { NextPrevView } from \"../common-components/views/NextPrevView\";\r\nimport { Export } from \"../common-components/export-buttons/Export\";\r\nimport { ModalButton } from \"../common-components/others/ModalButton\";\r\nimport { ListTitle } from \"../common-components/list-title/ListTitle\";\r\nimport { JobListHeader } from \"./JobListHeader\";\r\nimport { JobListBody } from \"./JobListBody\";\r\nimport { JobModal } from \"./JobModal\";\r\nimport { DeleteModal } from \"../common-components/delete-prompt-modal/DeleteModal\";\r\n\r\n\r\n// Contexts\r\nimport { JobContext } from \"../../contexts/job_contex/JobContext\";\r\nimport { CommonContext } from \"../../contexts/common_contexts/CommonContext\";\r\n\r\n\r\nexport const JobList = () => {\r\n    const history = useHistory();\r\n    // Json web token is needed to be sent to backend for checking if api calls through axios are authorized or not\r\n    const cookies = new Cookies();\r\n    const jwtToken = cookies.get(\"jwtToken\");\r\n    // Job Contexts\r\n    const { \r\n        jobState, \r\n        dispatch, \r\n        addUpdateJob, \r\n        changeViewLimit, \r\n        searchJobs, \r\n        showNextPrevJobs, \r\n        toggleDeleteModal, \r\n        toggleActionList, \r\n        deleteJob \r\n    } = useContext(JobContext);\r\n    // Common Contexts\r\n    const { setShowSideNav } = useContext(CommonContext);\r\n    // States\r\n    // Need to send unique job name to backend for updating record\r\n    const [jobName, setJobName] = useState(null);\r\n    // For toggling modal\r\n    const [isModalDisplayed, setIsModalDisplayed] = useState(false);\r\n    const [job, setJob] = useState({\r\n        heading: \"\",\r\n        name: \"\",\r\n        description: \"\",\r\n        value: 0,\r\n        credit: 0,\r\n        status: \"\"\r\n    });\r\n    // function for fetching data at component mount and hideModal\r\n    const fetchData = (limit, offset, searchText) => {\r\n        const endPoint = \"http://localhost:3030/api/jobs\";\r\n        // Search text is for re-using endPoint  \r\n        const options = { limit, offset, searchText };\r\n        const headers = { \"x-auth-token\": jwtToken };\r\n        axios.post(endPoint, options, { headers })\r\n            .then(res => {\r\n                dispatch({\r\n                    type: \"FETCH_DATA\",\r\n                    payload: {\r\n                        jobs: res.data.jobs,\r\n                        totalListLength: res.data.results.length, \r\n                        limit,\r\n                        offset,\r\n                        searchText\r\n                    }\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    // For fetching data at the component mount\r\n    useEffect(() => {\r\n        // hide side-nav at component mount\r\n        setShowSideNav(false);\r\n        // when component mounts or remounts after navigating away start everything from the beginning\r\n        fetchData(15, 0, \"\");\r\n    }, []);\r\n\r\n    // Input onChange event handler function\r\n    function onChange(e) {\r\n\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        \r\n        setJob(prev => {\r\n            return {...prev, [name]: value}\r\n        });\r\n    }\r\n\r\n    const displayModal = e => {\r\n        // hide the action list after user clicks on update button\r\n        dispatch({type: \"TOGGLE_ACTION_LIST\", payload: 0})\r\n        setIsModalDisplayed(true);\r\n        // for updating a specific job\r\n        if(e.target.value !== \"\") {\r\n            jobState.jobs.map(item => {\r\n                if(item.serial_no === Number(e.target.value)) {\r\n                    // need to send unique job name to backend for updating\r\n                    setJobName(item.name);\r\n                    setJob(previousValue => {\r\n                        return {\r\n                            ...previousValue,\r\n                            heading: item.heading,\r\n                            name: item.name,\r\n                            description: item.description,\r\n                            value: item.value,\r\n                            credit: item.credit,\r\n                            status: item.status\r\n                        }\r\n                    });\r\n                }           \r\n            });\r\n        }\r\n    }\r\n\r\n    const hideModal = () => {\r\n        setIsModalDisplayed(false);\r\n        // // to setting the form validation error to false, so that modal doesn't show previous validation error messages\r\n        // dispatch({type: \"FORM_VALIDATION_ERROR\", payload: false});\r\n        // set jobName to null if modal was displayed for updating\r\n        setJobName(null);\r\n        // return the job to it's initial state\r\n        setJob(previousValue => {\r\n            return {\r\n                ...previousValue,\r\n                heading: \"\",\r\n                name: \"\",\r\n                description: \"\",\r\n                value: 0,\r\n                credit: 0,\r\n                status: \"\"\r\n            }\r\n        });\r\n        // to update the list with newly added item or updated item\r\n        fetchData(jobState.limit, jobState.offset, jobState.searchTextValue);\r\n    }\r\n\r\n    function exportToPdf() {\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"landscape\"; // portrait or landscape\r\n\r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n\r\n        doc.setFontSize(15);\r\n\r\n        const title = \"Job Report\";\r\n        const headers = [[\"Serial No\", \"Job Heading\", \"Job ID\", \"Job Name\", \"Value\", \"Credit\", \"Debit\", \"Balance\", \"Status\"]];\r\n\r\n        const data = jobState.jobs.map(job => [\r\n            job.serial_no,\r\n            job.heading,\r\n            job.name,\r\n            job.description,\r\n            job.value,\r\n            job.credit,\r\n            job.debit,\r\n            job.balance,\r\n            job.status\r\n        ]);\r\n\r\n        let content = {\r\n            startY: 50,\r\n            head: headers,\r\n            body: data\r\n        };\r\n\r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"jobReport.pdf\")\r\n    }\r\n\r\n    // if user in not authenticated redirect to home/login page\r\n    if(!isAuthenticated()) {\r\n        return <div>{history.push(\"/\")}</div>\r\n    }\r\n    \r\n    return (\r\n        <div className=\"content job-list\" onClick = {() => setShowSideNav(false)}>\r\n            <ListTitle title = \"Job List\" />\r\n            <div className = \"content-search-export\">\r\n                <ViewLimitSearch searchItems = {searchJobs} searchText = {jobState.searchTextValue} changeViewLimit = {changeViewLimit} />\r\n                <Export exportToPdf = {exportToPdf} data = {jobState.jobs}/>\r\n                <ModalButton textContent = \"Add New Job\" displayModal = {displayModal} />\r\n            </div>\r\n            <div className=\"list\">\r\n                <table>\r\n                    <JobListHeader />\r\n                    <JobListBody \r\n                    toggleActionList = {toggleActionList}\r\n                    displayModal = {displayModal}\r\n                    toggleDeleteModal = {toggleDeleteModal}\r\n                    actionListId = {jobState.actionListId}\r\n                    />\r\n                </table>\r\n            </div>\r\n            <NextPrevView\r\n            totalListLength = {jobState.totalListLength} \r\n            limit = {jobState.limit}\r\n            offset = {jobState.offset}\r\n            showNextPrevItems = {showNextPrevJobs}\r\n            searchText = {jobState.searchTextValue}\r\n            />\r\n            <JobModal \r\n            isModalDisplayed = {isModalDisplayed} \r\n            job = {job}\r\n            error = {jobState.formValidationError} \r\n            onChange = {onChange}\r\n            addUpdateJob = {addUpdateJob}\r\n            jobName = {jobName}\r\n            successFailMessage = {jobState.successFailMessage}\r\n            dispatch = {dispatch}\r\n            hideModal = {hideModal}\r\n            />\r\n            <DeleteModal \r\n            displayDeleteModal = {jobState.displayJobDeleteModal}\r\n            toggleDeleteModal = {toggleDeleteModal} \r\n            itemName = {jobState.jobName}\r\n            deleteItem = {deleteJob}\r\n            offset = {jobState.offset}\r\n            limit = {jobState.limit}\r\n            searchText = {jobState.searchTextValue}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Navigation\\MainNav.js",["688"],"import React, { useContext, useState } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nimport { CommonContext } from \"../../contexts/common_contexts/CommonContext\";\r\n\r\nexport const MainNav = () => {\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const { showSideNav, setShowSideNav, showProfileMenu, setShowProfileMenu } = useContext(CommonContext);\r\n\r\n    // const [showMenu, setShowMenu] = useState(false);\r\n\r\n    const logout = () => {\r\n        // As cookie can't be removed from client side so this task should be sent to backend but make \r\n        // sure that withCredentials:true is sent along with the request otherwise cookie won't be removed. \r\n        axios.get(\"http://localhost:3030/api/users/logout\", {withCredentials: true})\r\n            .then(res => {\r\n                setShowProfileMenu(false)\r\n                localStorage.clear();\r\n                history.push(\"/\");\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-nav\">\r\n            <div className=\"main-nav-wrapper\">\r\n                <div className=\"nav-brand\">\r\n                    <button id=\"menu-bar-button\" onClick = {() => showSideNav ? setShowSideNav(false) : setShowSideNav(true)}>\r\n                        <i className=\"fas fa-bars\"></i>\r\n                    </button>\r\n                    <Link id=\"brand\" to = \"/dashboard\">A TO Z Trading</Link>\r\n                </div>\r\n                <div className=\"nav-profile-link\">\r\n                    <button id=\"profile-button\" \r\n                    onClick = {() => showProfileMenu ? setShowProfileMenu(false) : setShowProfileMenu(true)}>\r\n                        <img style ={{borderRadius: \"50%\"}} width=\"40\" height=\"40\" src={localStorage.getItem(\"imgUrl\")} alt=\"\" />\r\n                    </button>\r\n                    <div id=\"nav-profile-menu\" style={{display: showProfileMenu ? \"block\" : \"none\"}}>\r\n                        <Link to = {`/profile/${localStorage.getItem(\"name\")}`}>Profile</Link>\r\n                        <button id=\"logout-button\" onClick = {logout}>Logout</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Styling\r\nimport \"./Navbar.css\";\r\n\r\n\r\n\r\nfunction Navbar(props) {\r\n\r\n    const history = useHistory();\r\n\r\n    const name = localStorage.getItem(\"name\");\r\n    const [imgUrl, setImgUrl] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        axios.post(\"http://localhost:3030/api/users/user\", {username: name})\r\n            .then(res => {\r\n                setImgUrl(res.data.imgUrl);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, []);\r\n\r\n\r\n     // Logout\r\n     function logout() {\r\n        // As cookie can't be removed from client side so this task should be sent to backend but make \r\n        // sure that withCredentials:true is sent along with the request otherwise cookie won't be removed. \r\n        axios.get(\"http://localhost:3030/api/users/logout\", {withCredentials: true})\r\n            .then(res => {\r\n                localStorage.clear();\r\n                history.push(\"/\");\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"brand\">\r\n                <Link id=\"brand\" to = \"/dashboard\">A TO Z Trading</Link>\r\n            </div>\r\n            <div className=\"profile-logout\">\r\n                <Link to = \"/users\">Users</Link>\r\n                <Link to = {`/profile/${name}`}>\r\n                    <img style ={{borderRadius: \"50%\"}} width=\"40\" height=\"40\" src={imgUrl} alt=\"image\" />\r\n                </Link>\r\n                <Link to = {`/profile/${name}`}>Profile</Link>\r\n                <Link role=\"button\" onClick = {logout}>Logout</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Navbar;\r\n\r\n*/\r\n","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Payorders\\PayorderList.js",["689","690"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"universal-cookie\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\n\r\n// Children\r\nimport { ViewLimitSearch } from \"../common-components/views/ViewLimitSearch\";\r\nimport { NextPrevView } from \"../common-components/views/NextPrevView\";\r\nimport { Export } from \"../common-components/export-buttons/Export\";\r\nimport { ModalButton } from \"../common-components/others/ModalButton\";\r\nimport { ListTitle } from \"../common-components/list-title/ListTitle\";\r\nimport { PayorderListHeader } from \"./PayorderListHeader\";\r\nimport { PayorderListBody } from \"./PayorderListBody\";\r\nimport { PayorderModal } from \"./PayorderModal\";\r\nimport { DeleteModal } from \"../common-components/delete-prompt-modal/DeleteModal\";\r\n\r\n\r\n// Contexts\r\nimport { PayorderContext } from \"../../contexts/payorder_context/PayorderContext\";\r\nimport { CommonContext } from \"../../contexts/common_contexts/CommonContext\";\r\n\r\n\r\nexport const PayorderList = () => {\r\n    // Json web token is needed to be sent to backend for checking if api calls through axios are authorized or not\r\n    const cookies = new Cookies();\r\n    const jwtToken = cookies.get(\"jwtToken\");\r\n    // Job Contexts\r\n    const { \r\n        payorderState, \r\n        dispatch, \r\n        addUpdatePayorder, \r\n        changeViewLimit, \r\n        searchPayorders, \r\n        showNextPrevPayorders, \r\n        toggleDeleteModal, \r\n        toggleActionList, \r\n        deletePayorder \r\n    } = useContext(PayorderContext);\r\n    // Common Contexts\r\n    const { setShowSideNav } = useContext(CommonContext);\r\n    // States\r\n    // Need to send unique payorder name to backend for updating record\r\n    const [date, setDate] = useState(null);\r\n    const [payorderName, setPayorderName] = useState(null);\r\n    // For toggling modal\r\n    const [isModalDisplayed, setIsModalDisplayed] = useState(false);\r\n    const [payorder, setPayorder] = useState({\r\n        payorder_no: \"\",\r\n        bank_name: \"\",\r\n        branch_name: \"\",\r\n        receiver_name: \"\",\r\n        total_amount: 0,\r\n        remarks: \"\",\r\n        approval_status: \"\",\r\n        release_status: \"\",\r\n        added_by: localStorage.getItem(\"name\")\r\n    });\r\n    // function for fetching data at component mount and hideModal\r\n    const fetchData = (limit, offset, searchText) => {\r\n        const endPoint = \"http://localhost:3030/api/payorders\";\r\n        // Search text is for re-using endPoint  \r\n        const options = { limit, offset, searchText };\r\n        const headers = { \"x-auth-token\": jwtToken };\r\n        axios.post(endPoint, options, { headers })\r\n            .then(res => {\r\n                dispatch({\r\n                    type: \"FETCH_DATA\",\r\n                    payload: {\r\n                        payorders: res.data.payorders,\r\n                        totalListLength: res.data.results.length, \r\n                        limit,\r\n                        offset,\r\n                        searchText\r\n                    }\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    // For fetching data at the component mount\r\n    useEffect(() => {\r\n        // hide side-nav at component mount\r\n        setShowSideNav(false);\r\n        // when component mounts or remounts after navigating away start everything from the beginning\r\n        fetchData(15, 0, \"\");\r\n    }, []);\r\n\r\n    // Input onChange event handler function\r\n    function onChange(e) {\r\n\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        \r\n        setPayorder(prev => {\r\n            return {...prev, [name]: value}\r\n        });\r\n    }\r\n\r\n    const displayModal = e => {\r\n        // hide the action list after user clicks on update button\r\n        dispatch({type: \"TOGGLE_ACTION_LIST\", payload: 0})\r\n        setIsModalDisplayed(true);\r\n        // for updating a specific Payorder\r\n        if(e.target.value !== \"\") {\r\n            payorderState.payorders.map(item => {\r\n                if(item.serial_no === Number(e.target.value)) {\r\n                    // need to send unique job name to backend for updating\r\n                    setPayorderName(item.payorder_no);\r\n                    setDate(new Date(item.date_time));\r\n                    setPayorder(previousValue => {\r\n                        return {\r\n                            ...previousValue,\r\n                            payorder_no: item.payorder_no,\r\n                            bank_name: item.bank_name,\r\n                            branch_name: item.branch_name,\r\n                            receiver_name: item.receiver_name,\r\n                            total_amount: item.total_amount,\r\n                            remarks: item.remarks,\r\n                            approval_status: item.approval_status,\r\n                            release_status: item.release_status\r\n                        }\r\n                    });\r\n                }           \r\n            });\r\n        }\r\n    }\r\n\r\n    const hideModal = () => {\r\n        setIsModalDisplayed(false);\r\n        // // to setting the form validation error to false, so that modal doesn't show previous validation error messages\r\n        // dispatch({type: \"FORM_VALIDATION_ERROR\", payload: false});\r\n        // set jobName to null if modal was displayed for updating\r\n        setPayorderName(null);\r\n        setDate(null);\r\n        // return the job to it's initial state\r\n        setPayorder(previousValue => {\r\n            return {\r\n                ...previousValue,\r\n                payorder_no: \"\",\r\n                bank_name: \"\",\r\n                branch_name: \"\",\r\n                receiver_name: \"\",\r\n                total_amount: 0,\r\n                remarks: \"\",\r\n                approval_status: \"\",\r\n                release_status: \"\"\r\n            }\r\n        });\r\n        // to update the list with newly added item or updated item\r\n        fetchData(payorderState.limit, payorderState.offset, payorderState.searchTextValue);\r\n    }\r\n\r\n    function exportToPdf() {\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"landscape\"; // portrait or landscape\r\n\r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n\r\n        doc.setFontSize(15);\r\n\r\n        const title = \"Payorder Report\";\r\n        const headers = [[\"Serial No\", \"Payorder No\", \"Bank Name\", \"Branch Name\", \"Receiver Name\", \"Total Amount\", \"Remarks\"]];\r\n\r\n        const data = payorderState.payorders.map(item => [\r\n            item.serial_no,\r\n            item.payorder_no,\r\n            item.bank_name,\r\n            item.branch_name,\r\n            item.receiver_name,\r\n            item.total_amount,\r\n            item.remarks\r\n        ]);\r\n\r\n        let content = {\r\n            startY: 50,\r\n            head: headers,\r\n            body: data\r\n        };\r\n\r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"payorderReport.pdf\")\r\n    }\r\n    \r\n    return (\r\n        <div className=\"content payorder-list\" onClick = {() => setShowSideNav(false)}>\r\n            <ListTitle title = \"Payorder List\" />\r\n            <div className = \"content-search-export\">\r\n                <ViewLimitSearch \r\n                searchItems = {searchPayorders} \r\n                searchText = {payorderState.searchTextValue} \r\n                changeViewLimit = {changeViewLimit} \r\n                />\r\n                <Export exportToPdf = {exportToPdf} data = {payorderState.payorders}/>\r\n                <ModalButton textContent = \"Add New Payorder\" displayModal = {displayModal} />\r\n            </div>\r\n            <div className=\"list\">\r\n                <table>\r\n                    <PayorderListHeader />\r\n                    <PayorderListBody \r\n                    toggleActionList = {toggleActionList}\r\n                    displayModal = {displayModal}\r\n                    toggleDeleteModal = {toggleDeleteModal}\r\n                    actionListId = {payorderState.actionListId}\r\n                    />\r\n                </table>\r\n            </div>\r\n            <NextPrevView\r\n            totalListLength = {payorderState.totalListLength} \r\n            limit = {payorderState.limit}\r\n            offset = {payorderState.offset}\r\n            showNextPrevItems = {showNextPrevPayorders}\r\n            searchText = {payorderState.searchTextValue}\r\n            />\r\n            <PayorderModal \r\n            isModalDisplayed = {isModalDisplayed} \r\n            payorder = {payorder}\r\n            error = {payorderState.formValidationError} \r\n            onChange = {onChange}\r\n            addUpdatePayorder = {addUpdatePayorder}\r\n            payorderName = {payorderName}\r\n            successFailMessage = {payorderState.successFailMessage}\r\n            dispatch = {dispatch}\r\n            hideModal = {hideModal}\r\n            date = {date}\r\n            setDate = {setDate}\r\n            />\r\n            <DeleteModal \r\n            displayDeleteModal = {payorderState.displayPayorderDeleteModal}\r\n            toggleDeleteModal = {toggleDeleteModal} \r\n            itemName = {payorderState.payorderName}\r\n            deleteItem = {deletePayorder}\r\n            offset = {payorderState.offset}\r\n            limit = {payorderState.limit}\r\n            searchText = {payorderState.searchTextValue}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Navigation\\SideNav.js",["691"],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Login\\Login.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Login\\LoginHeader.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\job_contex\\jobReducer.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Users\\UserList.js",["692","693"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"universal-cookie\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Auth Middleware\r\nimport { isAuthenticated } from \"../Auth/Auth\";\r\n\r\n// Stylesheet\r\nimport \"./UserList.css\";\r\n\r\n\r\n// Children\r\nimport { ViewLimitSearch } from \"../common-components/views/ViewLimitSearch\";\r\nimport { NextPrevView } from \"../common-components/views/NextPrevView\";\r\nimport { Export } from \"../common-components/export-buttons/Export\";\r\nimport { ModalButton } from \"../common-components/others/ModalButton\";\r\nimport { ListTitle } from \"../common-components/list-title/ListTitle\";\r\nimport { UserListHeader } from \"./UserListHeader\";\r\nimport { UserListBody } from \"./UserListBody\";\r\nimport { UserModal } from \"./UserModal\";\r\nimport { DeleteModal } from \"../common-components/delete-prompt-modal/DeleteModal\";\r\n// Contexts\r\nimport { UserContext } from \"../../contexts/user_context/UserContext\";\r\nimport { CommonContext } from \"../../contexts/common_contexts/CommonContext\";\r\n\r\n\r\nexport const UserList = () => {\r\n    const history = useHistory();\r\n    // Json web token is needed to be sent to backend for checking if api calls through axios are authorized or not\r\n    const cookies = new Cookies();\r\n    const jwtToken = cookies.get(\"jwtToken\");\r\n    // User Contexts\r\n    const { \r\n        userState, \r\n        dispatch, \r\n        addUpdateUser, \r\n        changeViewLimit, \r\n        searchUsers, \r\n        showNextPrevUsers, \r\n        toggleDeleteModal, \r\n        toggleActionList, \r\n        deleteUser \r\n    } = useContext(UserContext);\r\n    // Common Contexts\r\n    const { setShowSideNav } = useContext(CommonContext);\r\n    // States\r\n    const [file, setFile] = useState(null);\r\n    const [filename, setFilename] = useState(\"\");\r\n    const [imgUrl, setImgUrl] = useState(\"\");\r\n    const [isUploading, setIsUploading] = useState(false);\r\n    // Need to send unique job name to backend for updating record\r\n    const [passwordUpdateMsg, setPasswordUpdateMsg] = useState(false);\r\n    const [userID, setUserID] = useState(0);\r\n    // For toggling modal\r\n    const [isModalDisplayed, setIsModalDisplayed] = useState(false);\r\n    const [user, setUser] = useState({\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        username: \"\",\r\n        designation: \"\",\r\n        role: \"\",\r\n        status: \"\",\r\n        password: \"\",\r\n        password2: \"\"\r\n    });\r\n    // function for fetching data at component mount and hideModal\r\n    const fetchData = (limit, offset, searchText) => {\r\n        const endPoint = \"http://localhost:3030/api/users\";\r\n        // Search text is for re-using endPoint  \r\n        const options = { limit, offset, searchText };\r\n        const headers = { \"x-auth-token\": jwtToken };\r\n        axios.post(endPoint, options, { headers })\r\n            .then(res => {\r\n                dispatch({\r\n                    type: \"FETCH_DATA\",\r\n                    payload: {\r\n                        users: res.data.users,\r\n                        totalListLength: res.data.results.length, \r\n                        limit,\r\n                        offset,\r\n                        searchText\r\n                    }\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    // For fetching data at the component mount\r\n    useEffect(() => {\r\n        // hide side-nav at component mount\r\n        setShowSideNav(false);\r\n        // when component mounts or remounts after navigating away start everything from the beginning\r\n        fetchData(15, 0, \"\");\r\n    }, []);\r\n\r\n    // Input onChange event handler function\r\n    function onChange(e) {\r\n\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        \r\n        setUser(prev => {\r\n            return {...prev, [name]: value}\r\n        });\r\n    }\r\n\r\n    const fileHandler = (e) => {\r\n        // if there is a file already in the file state and user didn't upload any image at second attempt then \r\n        // previous file state shouldn't be changed.   \r\n        if(file && !e.target.files.length) {\r\n            setFile(file);\r\n            setFilename(file.name);\r\n        } \r\n        // else update the file state with uploaded file\r\n        else {\r\n          setFile(e.target.files[0]);\r\n          setFilename(e.target.files[0].name);\r\n          setIsUploading(true);\r\n        }\r\n    }\r\n\r\n    const displayModal = e => {\r\n        // for updating a specific user\r\n        if(Number(e.target.value) !== 0) {\r\n            userState.users.map(person => {\r\n                if(person.user_id === Number(e.target.value)) {\r\n                    // need to send unique userID to backend for updating\r\n                    setUserID(person.user_id);\r\n                    setImgUrl(person.imgUrl);\r\n                    setFile(person.imgUrl);\r\n                    setFilename(person.filename);\r\n                    setPasswordUpdateMsg(true);\r\n                    setUser(previousValue => {\r\n                        return {\r\n                            ...previousValue,\r\n                            first_name: person.first_name,\r\n                            last_name: person.last_name,\r\n                            username: person.username,\r\n                            designation: person.designation,\r\n                            role: person.role,\r\n                            status: person.status\r\n                        }\r\n                    });\r\n                }           \r\n            });\r\n        }\r\n        \r\n        setIsModalDisplayed(true);\r\n        // hide the action list after user clicks on update button\r\n        dispatch({type: \"TOGGLE_ACTION_LIST\", payload: 0})\r\n    }\r\n\r\n    const hideModal = () => {\r\n        // to update the list with newly added item or updated item\r\n        fetchData(userState.limit, userState.offset, userState.searchTextValue);\r\n        setIsModalDisplayed(false);\r\n        // set userID to 0 if modal was displayed for updating\r\n        setUserID(0);\r\n        setImgUrl(\"\");\r\n        setFile(null);\r\n        setFilename(\"\");\r\n        setPasswordUpdateMsg(false);\r\n        setIsUploading(false);\r\n        \r\n        // return the user to it's initial state\r\n        setUser(previousValue => {\r\n            return {\r\n                ...previousValue,\r\n                first_name: \"\",\r\n                last_name: \"\",\r\n                username: \"\",\r\n                designation: \"\",\r\n                role: \"\",\r\n                status: \"\",\r\n                password: \"\",\r\n                password2: \"\"\r\n            }\r\n        });\r\n    }\r\n\r\n    function exportToPdf() {\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"landscape\"; // portrait or landscape\r\n\r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n\r\n        doc.setFontSize(15);\r\n\r\n        const title = \"User Report\";\r\n        const headers = [[\"User ID\", \"First Name\", \"Last Name\", \"Username\", \"Designation\", \"Role\", \"Status\"]];\r\n\r\n        const data = userState.users.map(person => [\r\n            person.user_id,\r\n            person.first_name,\r\n            person.last_name,\r\n            person.username,\r\n            person.designation,\r\n            person.role,\r\n            person.status\r\n        ]);\r\n\r\n        let content = {\r\n            startY: 50,\r\n            head: headers,\r\n            body: data\r\n        };\r\n\r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"jobReport.pdf\")\r\n    }\r\n\r\n\r\n    // if user in not authenticated redirect to home/login page\r\n    if(!isAuthenticated()) {\r\n        return <div>{history.push(\"/\")}</div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"content user-list\" onClick = {() => setShowSideNav(false)}>\r\n            <ListTitle title = \"User List\" />\r\n            <div className = \"content-search-export\">\r\n                <ViewLimitSearch searchItems = {searchUsers} searchText = {userState.searchTextValue} changeViewLimit = {changeViewLimit} />\r\n                <Export exportToPdf = {exportToPdf} data = {userState.users}/>\r\n                <ModalButton textContent = \"Add New User\" displayModal = {displayModal} />\r\n            </div>\r\n            <div className=\"list\">\r\n                <table>\r\n                    <UserListHeader />\r\n                    <UserListBody \r\n                    toggleActionList = {toggleActionList}\r\n                    displayModal = {displayModal}\r\n                    toggleDeleteModal = {toggleDeleteModal}\r\n                    actionListId = {userState.actionListId}\r\n                    />\r\n                </table>\r\n            </div>\r\n            <NextPrevView\r\n            totalListLength = {userState.totalListLength} \r\n            limit = {userState.limit}\r\n            offset = {userState.offset}\r\n            showNextPrevItems = {showNextPrevUsers}\r\n            searchText = {userState.searchTextValue}\r\n            />\r\n            <UserModal \r\n            isModalDisplayed = {isModalDisplayed}\r\n            hideModal = {hideModal}\r\n            isUploading = {isUploading}\r\n            imgUrl = {imgUrl}\r\n            file = {file}\r\n            filename = {filename}\r\n            fileHandler = {fileHandler} \r\n            user = {user}\r\n            error = {userState.formValidationError} \r\n            onChange = {onChange}\r\n            addUpdateUser = {addUpdateUser}\r\n            userID = {userID}\r\n            successFailMessage = {userState.successFailMessage}\r\n            passwordUpdateMsg = {passwordUpdateMsg}\r\n            dispatch = {dispatch}\r\n            \r\n            />\r\n            <DeleteModal \r\n            displayDeleteModal = {userState.displayUserDeleteModal}\r\n            toggleDeleteModal = {toggleDeleteModal} \r\n            itemName = {userState.userID}\r\n            deleteItem = {deleteUser}\r\n            offset = {userState.offset}\r\n            limit = {userState.limit}\r\n            searchText = {userState.searchTextValue}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useContext } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// import { UserContext } from \"../../contexts/user_context/UserState\";\r\n\r\n// export const UserList = () => {\r\n\r\n//     const { userData, dispatch } = useContext(UserContext);\r\n\r\n//     useEffect(() => {\r\n//         axios.post(\"http://localhost:3030/api/users\", { limit: userData.limit, offset: userData.offset })\r\n//             .then(res => {\r\n          \r\n\r\n//                 dispatch({\r\n//                     type: \"FETCH_DATA\",\r\n//                     payload: {\r\n//                         users: res.data.users,\r\n//                         userTableLength: res.data.results.length\r\n//                     }\r\n//                 });\r\n//             })\r\n//             .catch(err => console.log(err));\r\n\r\n//     }, []);\r\n\r\n\r\n//     return (\r\n//         <div className=\"content users\">\r\n//             <h1>User List</h1>\r\n//             <div>\r\n//                 {userData.users.map(user => {\r\n//                     return <p>{user.username}</p>\r\n//                 })}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\user_context\\userReducer.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Jobs\\JobListHeader.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Jobs\\JobListBody.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Auth\\Auth.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Login\\LoginTextInput.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Login\\LoginPasswordInput.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\common_contexts\\CommonContext.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\list-title\\ListTitle.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\inputs\\SelectInput.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\inputs\\NumberInput.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\types\\types.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\job_contex\\JobContext.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\expense_context\\ExpenseContext.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Expenses\\ExpenseList.js",["694","695","696"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\n// For Dynamic PDF Generation\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\n// Auth Middleware\r\nimport { isAuthenticated } from \"../Auth/Auth\";\r\n\r\n// Children\r\nimport { ViewLimitSearch } from \"../common-components/views/ViewLimitSearch\";\r\nimport { NextPrevView } from \"../common-components/views/NextPrevView\";\r\nimport { Export } from \"../common-components/export-buttons/Export\";\r\nimport { ModalButton } from \"../common-components/others/ModalButton\";\r\nimport { ListTitle } from \"../common-components/list-title/ListTitle\";\r\nimport { ExpenseListHeader } from \"./ExpenseListHeader\";\r\nimport { ExpenseListBody } from \"./ExpenseListBody\";\r\nimport { ExpenseModal } from \"./ExpenseModal\";\r\nimport { DeleteModal } from \"../common-components/delete-prompt-modal/DeleteModal\";\r\n\r\n// Contexts\r\nimport { ExpenseContext } from \"../../contexts/expense_context/ExpenseContext\";\r\nimport { CommonContext } from \"../../contexts/common_contexts/CommonContext\";\r\n\r\n\r\nexport const ExpenseList = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    // json web token is needed to be sent to backend to make sure that api calls through axios are authorized\r\n    const cookies = new Cookies();\r\n    const jwtToken = cookies.get(\"jwtToken\");\r\n\r\n    // Contexts\r\n    const { \r\n        expenseState, \r\n        dispatch, \r\n        addUpdateExpense, \r\n        changeViewLimit, \r\n        searchExpenses, \r\n        showNextPrevExpenses, \r\n        toggleDeleteModal, \r\n        toggleActionList, \r\n        deleteExpense \r\n    } = useContext(ExpenseContext);\r\n    const { setShowSideNav } = useContext(CommonContext);\r\n\r\n    // States\r\n    const [list, setList] = useState({job: [], subhead: [], material: []});\r\n    const [date, setDate] = useState(null);\r\n    const [materialUnit, setMaterialUnit] = useState(\"\");\r\n    const [isJobListVisible, setIsJobListVisible] = useState(false);\r\n    const [isSubheadListVisible, setIsSubheadListVisible] = useState(false);\r\n    const [isMaterialListVisible, setIsMaterialListVisible] = useState(false);\r\n\r\n    // Need to send a unique expense ID to backend for updating a specific record\r\n    const [expenseID, setExpenseID] = useState(0);\r\n\r\n    // For toggling modal\r\n    const [isModalDisplayed, setIsModalDisplayed] = useState(false);\r\n    \r\n    const [expense, setExpense] = useState({\r\n        job: \"\",\r\n        subhead: \"\",\r\n        material: \"\",\r\n        description: \"\",\r\n        qty: 0,\r\n        unit_price: 0,\r\n        discount: 0,\r\n        upcharge: 0,\r\n        status: \"\"\r\n    });\r\n\r\n    // function for fetching data at component mount and hideModal\r\n    const fetchData = (limit, offset, searchText) => {\r\n        const endPoint = \"http://localhost:3030/api/expenses\";\r\n        // Search text is for re-using endPoint  \r\n        const options = { limit, offset, searchText };\r\n        const headers = { \"x-auth-token\": jwtToken };\r\n        axios.post(endPoint, options, { headers })\r\n            .then(res => {\r\n                dispatch({\r\n                    type: \"FETCH_DATA\",\r\n                    payload: {\r\n                        expenses: res.data.expenses,\r\n                        totalListLength: res.data.results.length, \r\n                        limit,\r\n                        offset,\r\n                        searchText\r\n                    }\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    // For fetching data at the component mount\r\n    useEffect(() => {\r\n        // hide side-nav at component mount\r\n        setShowSideNav(false);\r\n        // when component mounts or remounts start everything from the beginning\r\n        fetchData(15, 0, \"\");\r\n    }, []);\r\n\r\n    // Input onChange event handler function\r\n    function onChange(e) {\r\n\r\n    \r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n      \r\n        if(name === \"material\") setMaterialUnit(\"\");\r\n\r\n        setExpense(prev => {\r\n            return {...prev, [name]: value}\r\n        });\r\n\r\n        if(name === \"job\") setIsJobListVisible(true);\r\n        if(name === \"subhead\") setIsSubheadListVisible(true);\r\n        if(name === \"material\") setIsMaterialListVisible(true);\r\n\r\n        if(name === \"job\" || name === \"subhead\" || name === \"material\") {\r\n\r\n            const url = `http://localhost:3030/api/${name}s`;\r\n            axios.post(url, {keyword: e.target.value}, {headers: {\"x-auth-token\": jwtToken}})\r\n            .then(res => {\r\n                setList(prev => {\r\n                    return { ...prev, [name]: res.data };\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function selectItem(e) {\r\n\r\n        console.log(e.target);\r\n        const className = e.target.className;\r\n        const content = e.target.textContent;\r\n\r\n        setExpense(prev => {\r\n            return {...prev, [className]: content}\r\n        });\r\n\r\n        // Input value of unit field\r\n        if(className === \"material\") {\r\n            list.material.map(item => {\r\n                if(item.name === content) {\r\n                    setMaterialUnit(item.unit);\r\n                }\r\n            });\r\n        }\r\n    \r\n\r\n        if(className === \"job\") setIsJobListVisible(false);\r\n        if(className === \"subhead\") setIsSubheadListVisible(false);\r\n        if(className === \"material\") setIsMaterialListVisible(false);\r\n    }\r\n\r\n    const displayModal = e => {\r\n        // hide the action list after user clicks on update button\r\n        dispatch({type: \"TOGGLE_ACTION_LIST\", payload: 0});\r\n        setIsModalDisplayed(true);\r\n        // for updating a specific job\r\n        if(e.target.value !== \"\") {\r\n            expenseState.expenses.map(item => {\r\n                if(item.serial_no === Number(e.target.value)) {\r\n                    // need to send unique job name to backend for updating\r\n                    setExpenseID(item.serial_no);\r\n                    setDate(new Date(item.date_time));\r\n                    setMaterialUnit(item.unit);\r\n                    setExpense(previousValue => {\r\n                        return {\r\n                            ...previousValue,\r\n                            job: item.job,\r\n                            subhead: item.subhead,\r\n                            material: item.material_name,\r\n                            description: item.description,\r\n                            qty: item.qty,\r\n                            unit_price: item.unit_price,\r\n                            discount: item.discount,\r\n                            upcharge: item.upcharge,\r\n                            status: item.status\r\n                        }\r\n                    });\r\n                }           \r\n            });\r\n        }\r\n    }\r\n\r\n    const hideModal = () => {\r\n        setDate(null);\r\n        setIsModalDisplayed(false);\r\n        // set jobName to null if modal was displayed for updating\r\n        setExpenseID(0);\r\n        // return the job to it's initial state\r\n        setExpense(previousValue => {\r\n            return {\r\n                ...previousValue,\r\n                job: \"\",\r\n                subhead: \"\",\r\n                material: \"\",\r\n                description: \"\",\r\n                qty: \"\",\r\n                unit_price: \"\",\r\n                discount: 0,\r\n                upcharge: 0,\r\n                status: \"\"\r\n            }\r\n        });\r\n        // to update the list with newly added item or updated item\r\n        fetchData(expenseState.limit, expenseState.offset, expenseState.searchTextValue);\r\n    }\r\n\r\n    function exportToPdf() {\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"landscape\"; // portrait or landscape\r\n\r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n\r\n        doc.setFontSize(15);\r\n\r\n        const title = \"Expense Report\";\r\n        const headers = [\r\n            [\r\n                \"Serial No\", \r\n                \"Date\", \r\n                \"Job\", \r\n                \"Subhead\", \r\n                \"Material\", \r\n                \"Description\", \r\n                \"Qty\", \r\n                \"Unit\", \r\n                \"Unit Price\",\r\n                \"Discount\",\r\n                \"Upcharge\",\r\n                \"Total\",\r\n                \"Material Status\",\r\n                \"Approval Status\",\r\n                \"Status\",\r\n                \"Spent By\" \r\n            ]\r\n        ];\r\n\r\n        const data = expenseState.expenses.map(expense => [\r\n            expense.serial_no,\r\n            expense.date_time,\r\n            expense.job,\r\n            expense.subhead,\r\n            expense.material_name,\r\n            expense.description,\r\n            expense.qty,\r\n            expense.unit,\r\n            expense.unit_price,\r\n            expense.discount,\r\n            expense.upcharge,\r\n            expense.total,\r\n            expense.material_status,\r\n            expense.approval_status,\r\n            expense.status,\r\n            expense.spent_by\r\n        ]);\r\n\r\n        let content = {\r\n            startY: 50,\r\n            head: headers,\r\n            body: data\r\n        };\r\n\r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"expenseReport.pdf\")\r\n    }\r\n\r\n    // if user in not authenticated redirect to home/login page\r\n    if(!isAuthenticated()) {\r\n        return <div>{history.push(\"/\")}</div>\r\n    }\r\n    \r\n    return (\r\n        <div className=\"content expense-list\" onClick = {() => setShowSideNav(false)}>\r\n            <ListTitle title = \"Expense List\" />\r\n            <div className = \"content-search-export\">\r\n                <ViewLimitSearch \r\n                searchItems = {searchExpenses} \r\n                searchText = {expenseState.searchTextValue} \r\n                changeViewLimit = {changeViewLimit} \r\n                />\r\n                <Export exportToPdf = {exportToPdf} data = {expenseState.expenses}/>\r\n                <ModalButton textContent = \"Add New Expense\" displayModal = {displayModal} />\r\n            </div>\r\n            <div className=\"list\">\r\n                <table>\r\n                    <ExpenseListHeader />\r\n                    <ExpenseListBody \r\n                    toggleActionList = {toggleActionList}\r\n                    displayModal = {displayModal}\r\n                    toggleDeleteModal = {toggleDeleteModal}\r\n                    actionListId = {expenseState.actionListId}\r\n                    />\r\n                </table>\r\n            </div>\r\n            <NextPrevView\r\n            totalListLength = {expenseState.totalListLength} \r\n            limit = {expenseState.limit}\r\n            offset = {expenseState.offset}\r\n            showNextPrevItems = {showNextPrevExpenses}\r\n            searchText = {expenseState.searchTextValue}\r\n            />\r\n          \r\n\r\n            <ExpenseModal\r\n            isModalDisplayed = {isModalDisplayed} \r\n            expense = {expense}\r\n            addUpdateExpense = {addUpdateExpense}\r\n            expenseID = {expenseID}\r\n            successFailMessage = {expenseState.successFailMessage}\r\n            error = {expenseState.formValidationError}\r\n            dispatch = {dispatch}\r\n            hideModal = {hideModal}\r\n            materialUnit = {materialUnit}\r\n            list = {list} \r\n            onChange = {onChange}\r\n            selectItem = {selectItem}\r\n            date = {date}\r\n            setDate = {setDate}\r\n            isJobListVisible = {isJobListVisible}\r\n            isMaterialListVisible = {isMaterialListVisible}\r\n            isSubheadListVisible = {isSubheadListVisible}\r\n            />\r\n\r\n            <DeleteModal \r\n            displayDeleteModal = {expenseState.displayExpenseDeleteModal}\r\n            toggleDeleteModal = {toggleDeleteModal} \r\n            itemName = {expenseState.expenseID} // Needs Attention\r\n            deleteItem = {deleteExpense}\r\n            offset = {expenseState.offset}\r\n            limit = {expenseState.limit}\r\n            searchText = {expenseState.searchTextValue}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Expenses\\ExpenseListHeader.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Expenses\\ExpenseListBody.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\expense_context\\expenseReducer.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Expenses\\ExpenseModal.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\inputs\\DateInput.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\inputs\\ListInput.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\user_context\\UserContext.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Users\\UserModal.js",["697","698","699","700","701","702","703","704","705","706","707","708","709"],"import React, { useContext } from \"react\";\r\n\r\nimport { UserContext } from \"../../contexts/user_context/UserContext\";\r\n// Children\r\nimport { ImageUploader } from \"./ImageUploader\";\r\nimport { Input } from \"../common-components/inputs/TextInput\";\r\nimport { SelectInput } from \"../common-components/inputs/SelectInput\";\r\nimport { UserPasswordInput } from \"./UserPasswordInput\";\r\n\r\n\r\nimport { PicturePreview } from \"../common-components/user-info/profile-add-update/PicturePreview\";\r\nimport { FileInput } from \"../common-components/user-info/profile-add-update/FileInput\";\r\nimport { GeneralInfo } from \"../common-components/user-info/profile-add-update/GeneralInfo\";\r\nimport { UsernameInfo } from \"../common-components/user-info/profile-add-update/UsernameInfo\";\r\nimport { PasswordInfo } from \"../common-components/user-info/profile-add-update/PasswordInfo\";\r\n\r\n\r\nexport const UserModal = ({\r\n    isModalDisplayed,\r\n    hideModal,\r\n    isUploading,\r\n    imgUrl,\r\n    file,\r\n    filename,\r\n    fileHandler,\r\n    onChange,\r\n    addUpdateUser,\r\n    user,\r\n    userID,\r\n    error,\r\n    passwordUpdateMsg,\r\n    successFailMessage,\r\n    dispatch\r\n}) => {\r\n\r\n    const { userState } = useContext(UserContext);\r\n\r\n    // Destructuring user object\r\n    let { first_name, last_name, username, designation, role, status, password, password2 } = user;\r\n\r\n    const roles = [\r\n        {_id: 1, value:  \"Admin\"},\r\n        {_id: 2, value:  \"Manager\"},\r\n        {_id: 3, value:  \"Director\"}\r\n    ];\r\n\r\n    const statuses = [\r\n        { _id: 1, value: \"Active\" },\r\n        { _id: 2, value: \"Inactive\" }\r\n    ];\r\n\r\n\r\n    return (\r\n        <div className=\"modal user-modal\" style = {{display: isModalDisplayed ? \"block\" : \"none\"}}>\r\n            <button className = \"close-modal\" onClick = {hideModal}>X</button>\r\n            <div className=\"modal-content\" id=\"user-modal-content\">\r\n                <button className=\"add-update-button\" onClick = {() => addUpdateUser(file, filename, userID, user)}>Post</button>\r\n\r\n                <div className=\"user-modal-content-wrapper\">\r\n                    <div className=\"profile-pic-edit\">\r\n                        <h2>Profile Picture</h2>\r\n                        <PicturePreview file = {file} imgUrl = {imgUrl} filename = {filename} isUploading = {isUploading}  />\r\n                        <FileInput file = {file} fileHandler = {fileHandler} isUploading = {isUploading} filename = {filename} />\r\n                    </div>\r\n            \r\n                    <div className=\"user-details-edit\" id=\"user-details-edit\">\r\n                        <h2>User Details</h2>\r\n                        <GeneralInfo userInfo = {user} onChange = {onChange} roles = {roles} statuses = {statuses} />\r\n                        <UsernameInfo userInfo = {user} onChange = {onChange} />\r\n                        <PasswordInfo userInfo = {user} userID = {userID} onChange = {onChange} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Users\\UserListHeader.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Users\\UserListBody.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Users\\ImageUploader.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\payorder_context\\PayorderContext.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\payorder_context\\payorderReducer.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Payorders\\PayorderListHeader.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Payorders\\PayorderListBody.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Users\\UserPasswordInput.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\ExpenseReport\\ExpenseReport.js",["710"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"universal-cookie\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Auth Middleware\r\nimport { isAuthenticated } from \"../Auth/Auth\";\r\n\r\n// Children\r\nimport { Input } from \"./Input\";\r\n\r\n// Contexts\r\nimport { CommonContext } from \"../../contexts/common_contexts/CommonContext\";\r\n\r\n// Stylesheet\r\nimport \"./Reports.css\";\r\n\r\n\r\n\r\nexport const ExpenseReport = () => {\r\n\r\n    const history = useHistory();\r\n    const cookies = new Cookies();\r\n    const jwtToken = cookies.get(\"jwtToken\");\r\n\r\n    // Common Contexts\r\n    const { setShowSideNav } = useContext(CommonContext);\r\n\r\n    // Dates\r\n    const [startDate, setStartDate] = useState(null);\r\n    const [endDate, setEndDate] = useState(null);\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    // Jobs\r\n    const [job, setJob] = useState(\"All Jobs\");\r\n    const [jobs, setJobs] = useState([]);\r\n    // Materials\r\n    const [material, setMaterial] = useState(\"All Materials\");\r\n    const [materials, setMaterials] = useState([]);\r\n    // Subheads\r\n    const [subhead, setSubhead] = useState(\"All Subheads\");\r\n    const [subheads, setSubheads] = useState([]);\r\n    // Users\r\n    const [user, setUser] = useState(\"All Users\");\r\n    const [users, setUsers] = useState([]);\r\n    // Status\r\n    const [status, setStatus] = useState(\"All Statuses\");\r\n    const statuses = [\r\n        {_id: 1, value: \"Approved\"},\r\n        {_id: 2, value: \"Pending\"},\r\n        {_id: 3, value: \"Rejected\"}\r\n    ];\r\n\r\n    const [jobListVisible, setJobListVisible] = useState(false);\r\n    const [subheadListVisible, setSubheadListVisible] = useState(false);\r\n    const [materialListVisible, setMaterialListVisible] = useState(false);\r\n    const [userListVisible, setUserListVisible] = useState(false);\r\n    const [statusListVisible, setStatusListVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        const endPoint = \"http://localhost:3030/api/jobs\";\r\n        const headers = { \"x-auth-token\": jwtToken };\r\n        \r\n        axios.get(endPoint, { headers })\r\n            .then(jobRes => {\r\n                setJobs(jobRes.data);\r\n\r\n                axios.get(\"http://localhost:3030/api/materials\", { headers })\r\n                    .then(materialRes => {\r\n                        setMaterials(materialRes.data);\r\n\r\n                        axios.get(\"http://localhost:3030/api/subheads\", { headers })\r\n                            .then(subheadRes => {\r\n                                setSubheads(subheadRes.data);\r\n\r\n                                axios.get(\"http://localhost:3030/api/users\", { headers })\r\n                                    .then(userRes => {\r\n                                        setUsers(userRes.data);\r\n                                    })\r\n                                    .catch(err => console.log(err));\r\n                            })\r\n                            .catch(err => console.log(err));\r\n                    })\r\n                    .catch(err => console.log(err));\r\n               \r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }, []);\r\n\r\n    const onChange = ev => {\r\n\r\n        const name = ev.target.name;\r\n        const value = ev.target.value;\r\n        setSearchText(value);\r\n        let endPoint;\r\n\r\n        if(name === \"job\") endPoint = \"http://localhost:3030/api/jobs/search\";\r\n        if(name === \"material\") endPoint = \"http://localhost:3030/api/materials/search\";\r\n        if(name === \"subhead\") endPoint = \"http://localhost:3030/api/subheads/search\";\r\n        if(name === \"user\") endPoint = \"http://localhost:3030/api/users/search\";\r\n\r\n        const options = { searchText: value };\r\n        const headers = { \"x-auth-token\": jwtToken };\r\n        axios.post(endPoint, options, { headers })\r\n            .then(res => {\r\n                if(name === \"job\") setJobs(res.data);\r\n                if(name === \"material\") setMaterials(res.data);\r\n                if(name === \"subhead\") setSubheads(res.data);\r\n                if(name === \"user\") setUsers(res.data);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    const selectItem = ev => {\r\n\r\n        const name = ev.target.className;\r\n        const textContent = ev.target.textContent;\r\n\r\n        if(name === \"job\") {\r\n            setJobListVisible(false);\r\n            setJob(textContent);\r\n            return;\r\n        }\r\n\r\n        if(name === \"material\") {\r\n            setMaterialListVisible(false);\r\n            setMaterial(textContent);\r\n            return;\r\n        }\r\n\r\n        if(name === \"subhead\") {\r\n            setSubheadListVisible(false);\r\n            setSubhead(textContent);\r\n            return;\r\n        }\r\n\r\n        if(name === \"user\") {\r\n            setUserListVisible(false);\r\n            setUser(textContent);\r\n            return;\r\n        }\r\n\r\n        if(name === \"status\") {\r\n            setStatusListVisible(false);\r\n            setStatus(textContent);\r\n            return;\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const showReport = e => {\r\n\r\n        const item = e.target.textContent;\r\n        const queryParams = `job=${job}&material=${material}&subhead=${subhead}&user=${user}&status=${status}`;\r\n        const queryDatesAndItem = `&item=${item}&startDate=${startDate}&endDate=${endDate}`;\r\n\r\n        window.open(`/dashboard/reports/expense/list?${queryParams}${queryDatesAndItem}`, \"_blank\");\r\n\r\n    }\r\n\r\n\r\n    // if user in not authenticated redirect to home/login page\r\n    if(!isAuthenticated()) {\r\n        return <div>{history.push(\"/\")}</div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"content expense-report\" onClick = {() => setShowSideNav(false)}>\r\n            <div className=\"report-dates\">\r\n                <div className=\"report-dates-header\">\r\n                    <h3>Select Dates</h3>\r\n                </div>\r\n                <h5>From</h5>\r\n                <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\r\n                <h5>To</h5>\r\n                <DatePicker selected={endDate} onChange={date => setEndDate(date)} />\r\n            </div>\r\n\r\n            <div className=\"report-category\">\r\n\r\n                <div className=\"report-category-header\">\r\n                    <h3>Category Options</h3>\r\n                </div>\r\n                <div className=\"report-category-content\">\r\n                    <div className=\"list-dropdown job-dropdown\" >\r\n                        <span onClick = {() => jobListVisible ? setJobListVisible(false) : setJobListVisible(true)}>\r\n                            {job}\r\n                            <i className=\"fas fa-chevron-down\"></i>\r\n                        </span>\r\n                        <div className=\"job-dropdown-list item-dropdown-list\" style={{display: jobListVisible ? \"block\" : \"none\"}}>\r\n                            <Input name=\"job\" onChange={onChange} searchText={searchText} />\r\n                            <ul>\r\n                                <li className=\"job\" onClick = {selectItem}>All Jobs</li>\r\n                                {jobs.map(job => {\r\n                                    return (\r\n                                        <li className = \"job\" key = {job.serial_no} onClick = {selectItem}>\r\n                                            {job.name}({job.description})\r\n                                        </li>\r\n                                    );\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"list-dropdown material-dropdown\" >\r\n                        <span onClick = {() => materialListVisible ? setMaterialListVisible(false) : setMaterialListVisible(true)}>\r\n                            {material}\r\n                            <i className=\"fas fa-chevron-down\"></i>\r\n                        </span>\r\n                        <div className=\"material-dropdown-list item-dropdown-list\" style={{display: materialListVisible ? \"block\" : \"none\"}}>\r\n                            <Input name=\"material\" onChange={onChange} searchText={searchText} />\r\n                            <ul>\r\n                                <li className=\"material\" onClick = {selectItem}>All Materials</li>\r\n                                {materials.map(material => {\r\n                                    return (\r\n                                        <li className = \"material\" key = {material.serial_no} onClick = {selectItem}>\r\n                                            {material.name}\r\n                                        </li>\r\n                                    );\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"list-dropdown subhead-dropdown\" >\r\n                        <span onClick = {() => subheadListVisible ? setSubheadListVisible(false) : setSubheadListVisible(true)}>\r\n                            {subhead}\r\n                            <i className=\"fas fa-chevron-down\"></i>\r\n                        </span>\r\n                        <div className=\"subhead-dropdown-list item-dropdown-list\" style={{display: subheadListVisible ? \"block\" : \"none\"}}>\r\n                            <Input name=\"subhead\" onChange={onChange} searchText={searchText} />\r\n                            <ul>\r\n                                <li className=\"subhead\" onClick = {selectItem}>All Subheads</li>\r\n                                {subheads.map(subhead => {\r\n                                    return (\r\n                                        <li className = \"subhead\" key = {subhead.serial_no} onClick = {selectItem}>\r\n                                            {subhead.name}\r\n                                        </li>\r\n                                    );\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"list-dropdown user-dropdown\" >\r\n                        <span onClick = {() => userListVisible ? setUserListVisible(false) : setUserListVisible(true)}>\r\n                            {user}\r\n                            <i className=\"fas fa-chevron-down\"></i>\r\n                        </span>\r\n                        <div className=\"user-dropdown-list item-dropdown-list\" style={{display: userListVisible ? \"block\" : \"none\"}}>\r\n                            <Input name=\"user\" onChange={onChange} searchText={searchText} />\r\n                            <ul>\r\n                                <li className=\"user\" onClick = {selectItem}>All Users</li>\r\n                                {users.map(user => {\r\n                                    return (\r\n                                        <li className = \"user\" key = {user.user_id} onClick = {selectItem}>\r\n                                            {user.username}\r\n                                        </li>\r\n                                    );\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"list-dropdown user-dropdown\" >\r\n                        <span onClick = {() => statusListVisible ? setStatusListVisible(false) : setStatusListVisible(true)}>\r\n                            {status}\r\n                            <i className=\"fas fa-chevron-down\"></i>\r\n                        </span>\r\n                        <div className=\"status-dropdown-list item-dropdown-list\" style={{display: statusListVisible ? \"block\" : \"none\"}}>\r\n                            <ul>\r\n                                <li className=\"status\" onClick = {selectItem}>All Statuses</li>\r\n                                {statuses.map(item => {\r\n                                    return (\r\n                                        <li className = \"status\" key = {item._id} onClick = {selectItem}>\r\n                                            {item.value}\r\n                                        </li>\r\n                                    );\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"report-item\">\r\n                <div className=\"report-item-header\">\r\n                    <h3>Select Report Item</h3>\r\n                </div>\r\n                <div className=\"report-item-content\">\r\n                    <button onClick={showReport}>Debit</button>\r\n                    <button onClick={showReport}>Credit</button>\r\n                    <button onClick={showReport}>Balance</button>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    );\r\n}\r\n\r\n","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\ExpenseReport\\Input.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\job_report_context\\JobReportContext.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\job_report_context\\jobReportReducer.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\ExpenseReport\\ReportListHeader.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\ExpenseReport\\ReportListBody.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\ExpenseReport\\ReportList.js",["711"],"import React, { useState, useEffect } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\n// Children\r\nimport { ReportListBody } from \"./ReportListBody\";\r\nimport { ReportListHeader } from \"./ReportListHeader\";\r\n\r\n// location object is part of the URL, it is used to retrieve the query parameters sent from previous navigation URL\r\nexport const ReportList = ({ location }) => {\r\n\r\n    const cookies = new Cookies();\r\n    const jwtToken = cookies.get(\"jwtToken\");\r\n\r\n    // State\r\n    const [newStartDate, setNewStartDate] = useState(\"\");\r\n    const [newEndDate, setNewEndDate] = useState(\"\");\r\n    const [newItem, setNewItem] = useState(\"\");\r\n    const [results, setResults] = useState([]);\r\n   \r\n    useEffect(() => {\r\n        // location.search will find all the query string parameters that have been sent from previous navigation URL\r\n        // queryString.parse method will parse the location.search which can be destructured in the following way\r\n        const { job, material, subhead, user, status, startDate, endDate, item } = queryString.parse(location.search);\r\n\r\n        const startDay = new Date(startDate).getDate();\r\n        const startMonth = new Date(startDate).getMonth() + 1;\r\n        const startYear = new Date(startDate).getFullYear();\r\n        \r\n        const endDay = new Date(endDate).getDate();\r\n        const endMonth = new Date(endDate).getMonth() + 1;\r\n        const endYear = new Date(endDate).getFullYear();\r\n\r\n        setNewStartDate(`${startDay}/${startMonth}/${startYear}`);\r\n        setNewEndDate(`${endDay}/${endMonth}/${endYear}`);\r\n        setNewItem(item);\r\n\r\n\r\n        const endPoint = \"http://localhost:3030/api/reports/jobs-expenses\";\r\n        const options = { job, material, startDate: new Date(startDate), endDate: new Date(endDate), subhead, user, status };\r\n        const headers = {\"x-auth-token\": jwtToken};\r\n\r\n        axios.post(endPoint, options, { headers })\r\n            .then(res => {\r\n                setResults(res.data.results);\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"job-report-list\">\r\n            <h2>A To Z Trading</h2>\r\n            <h3> {newItem} Report From {newStartDate} To {newEndDate}</h3>\r\n            <table>\r\n                <ReportListHeader />\r\n                <ReportListBody results = {results} />\r\n            </table>\r\n        </div>\r\n       \r\n    )\r\n}\r\n","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Materials\\MaterialList.js",["712","713"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\n// Auth Middleware\r\nimport { isAuthenticated } from \"../Auth/Auth\";\r\n\r\n// Children\r\nimport { ViewLimitSearch } from \"../common-components/views/ViewLimitSearch\";\r\nimport { NextPrevView } from \"../common-components/views/NextPrevView\";\r\nimport { Export } from \"../common-components/export-buttons/Export\";\r\nimport { ModalButton } from \"../common-components/others/ModalButton\";\r\nimport { ListTitle } from \"../common-components/list-title/ListTitle\";\r\nimport { MaterialListHeader } from \"./MaterialListHeader\";\r\nimport { MaterialListBody } from \"./MaterialListBody\";\r\nimport { MaterialModal } from \"./MaterialModal\";\r\nimport { DeleteModal } from \"../common-components/delete-prompt-modal/DeleteModal\";\r\n\r\n\r\n// Contexts\r\nimport { MaterialContext } from \"../../contexts/material_context/MaterialContext\";\r\nimport { CommonContext } from \"../../contexts/common_contexts/CommonContext\";\r\n\r\n\r\nexport const MaterialList = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    // Json web token is needed to be sent to backend for checking if api calls through axios are authorized or not\r\n    const cookies = new Cookies();\r\n    const jwtToken = cookies.get(\"jwtToken\");\r\n    // Material Contexts\r\n    const { \r\n        materialState, \r\n        dispatch, \r\n        addUpdateMaterial, \r\n        changeViewLimit, \r\n        searchMaterials, \r\n        showNextPrevMaterials, \r\n        toggleDeleteModal, \r\n        toggleActionList, \r\n        deleteMaterial \r\n    } = useContext(MaterialContext);\r\n    // Common Contexts\r\n    const { setShowSideNav } = useContext(CommonContext);\r\n\r\n    // States\r\n    // Need to send unique material id to backend for updating record\r\n    const [materialID, setMaterialID] = useState(0);\r\n    // For toggling modal\r\n    const [isModalDisplayed, setIsModalDisplayed] = useState(false);\r\n    const [material, setMaterial] = useState({\r\n        name: \"\",\r\n        unit: \"\",\r\n        status: \"\"\r\n    });\r\n    // function for fetching data at component mount and hideModal\r\n    const fetchData = (limit, offset, searchText) => {\r\n        const endPoint = \"http://localhost:3030/api/materials\";\r\n        // Search text is for re-using endPoint  \r\n        const options = { limit, offset, searchText };\r\n        const headers = { \"x-auth-token\": jwtToken };\r\n        axios.post(endPoint, options, { headers })\r\n            .then(res => {\r\n                dispatch({\r\n                    type: \"FETCH_DATA\",\r\n                    payload: {\r\n                        materials: res.data.materials,\r\n                        totalListLength: res.data.results.length, \r\n                        limit,\r\n                        offset,\r\n                        searchText\r\n                    }\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    // For fetching data at the component mount\r\n    useEffect(() => {\r\n        // hide side-nav at component mount\r\n        setShowSideNav(false);\r\n        // when component mounts or remounts after navigating away start everything from the beginning\r\n        fetchData(15, 0, \"\");\r\n    }, []);\r\n\r\n    // Input onChange event handler function\r\n    function onChange(e) {\r\n\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        \r\n        setMaterial(prev => {\r\n            return {...prev, [name]: value}\r\n        });\r\n    }\r\n\r\n    const displayModal = e => {\r\n        // hide the action list after user clicks on update button\r\n        dispatch({type: \"TOGGLE_ACTION_LIST\", payload: 0})\r\n        setIsModalDisplayed(true);\r\n        // for updating a specific Material\r\n        if(e.target.value !== \"\") {\r\n            materialState.materials.map(item => {\r\n                if(item.serial_no === Number(e.target.value)) {\r\n                    // need to send unique job name to backend for updating\r\n                    setMaterialID(item.serial_no);\r\n                    setMaterial(previousValue => {\r\n                        return {\r\n                            ...previousValue,\r\n                            name: item.name,\r\n                            unit: item.unit,\r\n                            status: item.status\r\n                        }\r\n                    });\r\n                }           \r\n            });\r\n        }\r\n    }\r\n\r\n    const hideModal = () => {\r\n        setIsModalDisplayed(false);\r\n        // // to setting the form validation error to false, so that modal doesn't show previous validation error messages\r\n        // dispatch({type: \"FORM_VALIDATION_ERROR\", payload: false});\r\n        // set jobName to null if modal was displayed for updating\r\n        setMaterialID(0);\r\n        // return the job to it's initial state\r\n        setMaterial(previousValue => {\r\n            return {\r\n                ...previousValue,\r\n                name: \"\",\r\n                unit: \"\",\r\n                status: \"\"\r\n            }\r\n        });\r\n        // to update the list with newly added item or updated item\r\n        fetchData(materialState.limit, materialState.offset, materialState.searchTextValue);\r\n    }\r\n\r\n    function exportToPdf() {\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"landscape\"; // portrait or landscape\r\n\r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n\r\n        doc.setFontSize(15);\r\n\r\n        const title = \"Material Report\";\r\n        const headers = [[\"Serial No\", \"Material Name\", \"Unit\", \"Status\"]];\r\n\r\n        const data = materialState.materials.map(item => [\r\n            item.serial_no,\r\n            item.name,\r\n            item.unit,\r\n            item.status\r\n        ]);\r\n\r\n        let content = {\r\n            startY: 50,\r\n            head: headers,\r\n            body: data\r\n        };\r\n\r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"materialReport.pdf\")\r\n    }\r\n\r\n\r\n   // if user in not authenticated redirect to home/login page\r\n    if(!isAuthenticated()) {\r\n        return <div>{history.push(\"/\")}</div>\r\n    }\r\n    \r\n    return (\r\n        <div className=\"content material-list\" onClick = {() => setShowSideNav(false)}>\r\n            <ListTitle title = \"Material List\" />\r\n            <div className = \"content-search-export\">\r\n                <ViewLimitSearch \r\n                searchItems = {searchMaterials} \r\n                searchText = {materialState.searchTextValue} \r\n                changeViewLimit = {changeViewLimit} \r\n                />\r\n                <Export exportToPdf = {exportToPdf} data = {materialState.materials}/>\r\n                <ModalButton textContent = \"Add New Material\" displayModal = {displayModal} />\r\n            </div>\r\n            <div className=\"list\">\r\n                <table>\r\n                    <MaterialListHeader />\r\n                    <MaterialListBody \r\n                    toggleActionList = {toggleActionList}\r\n                    displayModal = {displayModal}\r\n                    toggleDeleteModal = {toggleDeleteModal}\r\n                    actionListId = {materialState.actionListId}\r\n                    />\r\n                </table>\r\n            </div>\r\n            <NextPrevView\r\n            totalListLength = {materialState.totalListLength} \r\n            limit = {materialState.limit}\r\n            offset = {materialState.offset}\r\n            showNextPrevItems = {showNextPrevMaterials}\r\n            searchText = {materialState.searchTextValue}\r\n            />\r\n            <MaterialModal \r\n            isModalDisplayed = {isModalDisplayed} \r\n            material = {material}\r\n            error = {materialState.formValidationError} \r\n            onChange = {onChange}\r\n            addUpdateMaterial = {addUpdateMaterial}\r\n            materialID = {materialID}\r\n            successFailMessage = {materialState.successFailMessage}\r\n            dispatch = {dispatch}\r\n            hideModal = {hideModal}\r\n            />\r\n            <DeleteModal \r\n            displayDeleteModal = {materialState.displayMaterialDeleteModal}\r\n            toggleDeleteModal = {toggleDeleteModal} \r\n            itemName = {materialState.materialID}\r\n            deleteItem = {deleteMaterial}\r\n            offset = {materialState.offset}\r\n            limit = {materialState.limit}\r\n            searchText = {materialState.searchTextValue}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Materials\\MaterialListHeader.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Materials\\MaterialListBody.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\material_context\\MaterialContext.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\material_context\\materialReducer.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\subhead_context\\SubheadContext.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Subheads\\SubheadList.js",["714","715"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"universal-cookie\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Auth Middleware\r\nimport { isAuthenticated } from \"../Auth/Auth\";\r\n\r\n\r\n// Children\r\nimport { ViewLimitSearch } from \"../common-components/views/ViewLimitSearch\";\r\nimport { NextPrevView } from \"../common-components/views/NextPrevView\";\r\nimport { Export } from \"../common-components/export-buttons/Export\";\r\nimport { ModalButton } from \"../common-components/others/ModalButton\";\r\nimport { ListTitle } from \"../common-components/list-title/ListTitle\";\r\nimport { SubheadListHeader } from \"./SubheadListHeader\";\r\nimport { SubheadListBody } from \"./SubheadListBody\";\r\nimport { SubheadModal } from \"./SubheadModal\";\r\nimport { DeleteModal } from \"../common-components/delete-prompt-modal/DeleteModal\";\r\n\r\n\r\n// Contexts\r\nimport {SubheadContext } from \"../../contexts/subhead_context/SubheadContext\";\r\nimport { CommonContext } from \"../../contexts/common_contexts/CommonContext\";\r\n\r\n\r\nexport const SubheadList = () => {\r\n    const history = useHistory();\r\n    // Json web token is needed to be sent to backend for checking if api calls through axios are authorized or not\r\n    const cookies = new Cookies();\r\n    const jwtToken = cookies.get(\"jwtToken\");\r\n    // Subhead Contexts\r\n    const { \r\n        subheadState, \r\n        dispatch, \r\n        addUpdateSubhead, \r\n        changeViewLimit, \r\n        searchSubheads, \r\n        showNextPrevSubheads, \r\n        toggleDeleteModal, \r\n        toggleActionList, \r\n        deleteSubhead \r\n    } = useContext(SubheadContext);\r\n    // Common Contexts\r\n    const { setShowSideNav } = useContext(CommonContext);\r\n\r\n    // States\r\n    // Need to send unique Subhead id to backend for updating record\r\n    const [subheadID, setSubheadID] = useState(0);\r\n    // For toggling modal\r\n    const [isModalDisplayed, setIsModalDisplayed] = useState(false);\r\n    const [subhead, setSubhead] = useState({ name: \"\" });\r\n    // function for fetching data at component mount and hideModal\r\n    const fetchData = (limit, offset, searchText) => {\r\n        const endPoint = \"http://localhost:3030/api/subheads\";\r\n        // Search text is for re-using endPoint  \r\n        const options = { limit, offset, searchText };\r\n        const headers = { \"x-auth-token\": jwtToken };\r\n        axios.post(endPoint, options, { headers })\r\n            .then(res => {\r\n                dispatch({\r\n                    type: \"FETCH_DATA\",\r\n                    payload: {\r\n                        subheads: res.data.subheads,\r\n                        totalListLength: res.data.results.length, \r\n                        limit,\r\n                        offset,\r\n                        searchText\r\n                    }\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    // For fetching data at the component mount\r\n    useEffect(() => {\r\n        // hide side-nav at component mount\r\n        setShowSideNav(false);\r\n        // when component mounts or remounts after navigating away start everything from the beginning\r\n        fetchData(15, 0, \"\");\r\n    }, []);\r\n\r\n    // Input onChange event handler function\r\n    function onChange(e) {\r\n\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        \r\n        setSubhead(prev => {\r\n            return {...prev, [name]: value}\r\n        });\r\n    }\r\n\r\n    const displayModal = e => {\r\n        // hide the action list after user clicks on update button\r\n        dispatch({type: \"TOGGLE_ACTION_LIST\", payload: 0})\r\n        setIsModalDisplayed(true);\r\n        // for updating a specific Subhead\r\n        if(e.target.value !== \"\") {\r\n            subheadState.subheads.map(item => {\r\n                if(item.serial_no === Number(e.target.value)) {\r\n                    // need to send unique job name to backend for updating\r\n                    setSubheadID(item.serial_no);\r\n                    setSubhead(previousValue => { return { ...previousValue, name: item.name }});\r\n                }           \r\n            });\r\n        }\r\n    }\r\n\r\n    const hideModal = () => {\r\n        setIsModalDisplayed(false);\r\n        // // to setting the form validation error to false, so that modal doesn't show previous validation error messages\r\n        // dispatch({type: \"FORM_VALIDATION_ERROR\", payload: false});\r\n        // set jobName to null if modal was displayed for updating\r\n        setSubheadID(0);\r\n        // return the job to it's initial state\r\n        setSubhead(previousValue => { return { ...previousValue, name: \"\" } });\r\n        // to update the list with newly added item or updated item\r\n        fetchData(subheadState.limit, subheadState.offset, subheadState.searchTextValue);\r\n    }\r\n\r\n    function exportToPdf() {\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"landscape\"; // portrait or landscape\r\n\r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n\r\n        doc.setFontSize(15);\r\n\r\n        const title = \"Material Report\";\r\n        const headers = [[ \"Serial No\", \"Subhead Name\" ]];\r\n\r\n        const data = subheadState.subheads.map(item => [ item.serial_no, item.name ]);\r\n\r\n        let content = {\r\n            startY: 50,\r\n            head: headers,\r\n            body: data\r\n        };\r\n\r\n        doc.text(title, marginLeft, 40);\r\n        doc.autoTable(content);\r\n        doc.save(\"MaterialReport.pdf\")\r\n    }\r\n\r\n    // if user in not authenticated redirect to home/login page\r\n    if(!isAuthenticated()) {\r\n        return <div>{history.push(\"/\")}</div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"content subhead-list\" onClick = {() => setShowSideNav(false)}>\r\n            <ListTitle title = \"Subhead List\" />\r\n            <div className = \"content-search-export\">\r\n                <ViewLimitSearch \r\n                searchItems = {searchSubheads} \r\n                searchText = {subheadState.searchTextValue} \r\n                changeViewLimit = {changeViewLimit} \r\n                />\r\n                <Export exportToPdf = {exportToPdf} data = {subheadState.subheads}/>\r\n                <ModalButton textContent = \"Add New Subhead\" displayModal = {displayModal} />\r\n            </div>\r\n            <div className=\"list\">\r\n                <table>\r\n                    <SubheadListHeader />\r\n                    <SubheadListBody \r\n                    toggleActionList = {toggleActionList}\r\n                    displayModal = {displayModal}\r\n                    toggleDeleteModal = {toggleDeleteModal}\r\n                    actionListId = {subheadState.actionListId}\r\n                    />\r\n                </table>\r\n            </div>\r\n            <NextPrevView\r\n            totalListLength = {subheadState.totalListLength} \r\n            limit = {subheadState.limit}\r\n            offset = {subheadState.offset}\r\n            showNextPrevItems = {showNextPrevSubheads}\r\n            searchText = {subheadState.searchTextValue}\r\n            />\r\n            <SubheadModal \r\n            isModalDisplayed = {isModalDisplayed} \r\n            subhead = {subhead}\r\n            error = {subheadState.formValidationError} \r\n            onChange = {onChange}\r\n            addUpdateSubhead = {addUpdateSubhead}\r\n            subheadID = {subheadID}\r\n            successFailMessage = {subheadState.successFailMessage}\r\n            dispatch = {dispatch}\r\n            hideModal = {hideModal}\r\n            />\r\n            <DeleteModal \r\n            displayDeleteModal = {subheadState.displaySubheadDeleteModal}\r\n            toggleDeleteModal = {toggleDeleteModal} \r\n            itemName = {subheadState.subheadID}\r\n            deleteItem = {deleteSubhead}\r\n            offset = {subheadState.offset}\r\n            limit = {subheadState.limit}\r\n            searchText = {subheadState.searchTextValue}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\subhead_context\\subheadReducer.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Subheads\\SubheadListHeader.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Subheads\\SubheadListBody.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Subheads\\SubheadModal.js",["716","717","718"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\n// Importing Input Component\r\nimport { TextInput } from \"../common-components/inputs/TextInput\";\r\nimport { SelectInput } from \"../common-components/inputs/SelectInput\";\r\n\r\nexport const SubheadModal = ({ \r\n    dispatch, \r\n    subhead, \r\n    subheadID, \r\n    isModalDisplayed, \r\n    hideModal, \r\n    successFailMessage, \r\n    onChange, \r\n    addUpdateSubhead,\r\n    error \r\n}) => {\r\n\r\n    return (\r\n        <div className=\"modal\" style = {{display:  isModalDisplayed ? \"block\" : \"none\"}}>\r\n            <button className = \"close-modal\" onClick = {hideModal}>X</button>\r\n            <div className=\"modal-content item-modal-content\" id=\"subhead-modal-content\">\r\n                <button className=\"add-update-button\" onClick = {() => addUpdateSubhead(subheadID, subhead)}>Post</button>\r\n                <h2>Subhead Details</h2>\r\n                <div className=\"success-fail-message\" style ={{display: successFailMessage !== null ? \"flex\": \"none\"}}>\r\n                    <p>{ successFailMessage }</p>\r\n                    <button id=\"message-close\" onClick = {() => dispatch({type: \"ADD_UPDATE_ITEM\"})}>X</button>\r\n                </div>\r\n                <div className=\"input-divs\">\r\n                    <TextInput \r\n                    label = \"Subhead Name\" \r\n                    name = \"name\" \r\n                    value = {subhead.name} \r\n                    onChange = {onChange}\r\n                    error = {error} \r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\inputs\\UserPasswordInput.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\user-info\\profile-add-update\\PicturePreview.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\user-info\\profile-add-update\\FileInput.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\user-info\\profile-add-update\\GeneralInfo.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\user-info\\profile-add-update\\UsernameInfo.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\user-info\\profile-add-update\\PasswordInfo.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\user-info\\profile-info\\ProfileImage.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\user-info\\profile-info\\UserDetails.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\user-info\\profile-info\\UserDataTR.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\inputs\\UserTextInput.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\inputs\\UserSelectInput.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\common-components\\inputs\\TextInput.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Credits\\CreditList.js",["719","720"],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\credit_context\\CreditContext.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Credits\\CreditListHeader.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Credits\\CreditModal.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\components\\Credits\\CreditListBody.js",[],"D:\\programming\\react-apps\\atoz-app-copy\\react-frontend\\src\\contexts\\credit_context\\creditReducer.js",[],{"ruleId":"721","replacedBy":"722"},{"ruleId":"723","replacedBy":"724"},{"ruleId":"725","severity":1,"message":"726","line":31,"column":12,"nodeType":"727","messageId":"728","endLine":31,"endColumn":17},{"ruleId":"725","severity":1,"message":"729","line":34,"column":12,"nodeType":"727","messageId":"728","endLine":34,"endColumn":20},{"ruleId":"725","severity":1,"message":"730","line":37,"column":12,"nodeType":"727","messageId":"728","endLine":37,"endColumn":23},{"ruleId":"731","severity":1,"message":"732","line":46,"column":8,"nodeType":"733","endLine":46,"endColumn":10,"suggestions":"734"},{"ruleId":"725","severity":1,"message":"735","line":61,"column":12,"nodeType":"727","messageId":"728","endLine":61,"endColumn":20},{"ruleId":"725","severity":1,"message":"736","line":97,"column":12,"nodeType":"727","messageId":"728","endLine":97,"endColumn":19},{"ruleId":"725","severity":1,"message":"737","line":134,"column":9,"nodeType":"727","messageId":"728","endLine":134,"endColumn":20},{"ruleId":"731","severity":1,"message":"738","line":25,"column":8,"nodeType":"733","endLine":25,"endColumn":10,"suggestions":"739"},{"ruleId":"740","severity":1,"message":"741","line":50,"column":21,"nodeType":"742","endLine":50,"endColumn":107},{"ruleId":"725","severity":1,"message":"743","line":11,"column":12,"nodeType":"727","messageId":"728","endLine":11,"endColumn":25},{"ruleId":"725","severity":1,"message":"744","line":11,"column":27,"nodeType":"727","messageId":"728","endLine":11,"endColumn":43},{"ruleId":"745","severity":1,"message":"746","line":10,"column":25,"nodeType":"742","endLine":12,"endColumn":27},{"ruleId":"721","replacedBy":"747"},{"ruleId":"723","replacedBy":"748"},{"ruleId":"725","severity":1,"message":"749","line":22,"column":12,"nodeType":"727","messageId":"728","endLine":22,"endColumn":22},{"ruleId":"731","severity":1,"message":"750","line":34,"column":8,"nodeType":"733","endLine":34,"endColumn":10,"suggestions":"751"},{"ruleId":"731","severity":1,"message":"752","line":73,"column":8,"nodeType":"733","endLine":73,"endColumn":10,"suggestions":"753"},{"ruleId":"731","severity":1,"message":"752","line":91,"column":8,"nodeType":"733","endLine":91,"endColumn":10,"suggestions":"754"},{"ruleId":"755","severity":1,"message":"756","line":139,"column":36,"nodeType":"757","messageId":"758","endLine":139,"endColumn":38},{"ruleId":"725","severity":1,"message":"759","line":48,"column":12,"nodeType":"727","messageId":"728","endLine":48,"endColumn":17},{"ruleId":"731","severity":1,"message":"752","line":65,"column":8,"nodeType":"733","endLine":65,"endColumn":10,"suggestions":"760"},{"ruleId":"731","severity":1,"message":"752","line":61,"column":8,"nodeType":"733","endLine":61,"endColumn":10,"suggestions":"761"},{"ruleId":"725","severity":1,"message":"762","line":1,"column":17,"nodeType":"727","messageId":"728","endLine":1,"endColumn":25},{"ruleId":"725","severity":1,"message":"762","line":1,"column":17,"nodeType":"727","messageId":"728","endLine":1,"endColumn":25},{"ruleId":"725","severity":1,"message":"762","line":1,"column":17,"nodeType":"727","messageId":"728","endLine":1,"endColumn":25},{"ruleId":"725","severity":1,"message":"763","line":2,"column":8,"nodeType":"727","messageId":"728","endLine":2,"endColumn":13},{"ruleId":"731","severity":1,"message":"752","line":76,"column":8,"nodeType":"733","endLine":76,"endColumn":10,"suggestions":"764"},{"ruleId":"725","severity":1,"message":"762","line":1,"column":17,"nodeType":"727","messageId":"728","endLine":1,"endColumn":25},{"ruleId":"725","severity":1,"message":"763","line":5,"column":8,"nodeType":"727","messageId":"728","endLine":5,"endColumn":13},{"ruleId":"725","severity":1,"message":"765","line":15,"column":11,"nodeType":"727","messageId":"728","endLine":15,"endColumn":18},{"ruleId":"725","severity":1,"message":"766","line":17,"column":11,"nodeType":"727","messageId":"728","endLine":17,"endColumn":19},{"ruleId":"725","severity":1,"message":"762","line":1,"column":17,"nodeType":"727","messageId":"728","endLine":1,"endColumn":25},{"ruleId":"725","severity":1,"message":"762","line":1,"column":17,"nodeType":"727","messageId":"728","endLine":1,"endColumn":25},{"ruleId":"725","severity":1,"message":"767","line":2,"column":8,"nodeType":"727","messageId":"728","endLine":2,"endColumn":18},{"ruleId":"725","severity":1,"message":"768","line":3,"column":8,"nodeType":"727","messageId":"728","endLine":3,"endColumn":15},{"ruleId":"725","severity":1,"message":"763","line":4,"column":8,"nodeType":"727","messageId":"728","endLine":4,"endColumn":13},{"ruleId":"725","severity":1,"message":"769","line":2,"column":10,"nodeType":"727","messageId":"728","endLine":2,"endColumn":14},{"ruleId":"731","severity":1,"message":"752","line":74,"column":8,"nodeType":"733","endLine":74,"endColumn":10,"suggestions":"770"},{"ruleId":"721","replacedBy":"771"},{"ruleId":"723","replacedBy":"772"},{"ruleId":"725","severity":1,"message":"773","line":13,"column":89,"nodeType":"727","messageId":"728","endLine":13,"endColumn":98},{"ruleId":"721","replacedBy":"774"},{"ruleId":"723","replacedBy":"775"},{"ruleId":"721","replacedBy":"776"},{"ruleId":"723","replacedBy":"777"},{"ruleId":"731","severity":1,"message":"778","line":22,"column":8,"nodeType":"733","endLine":22,"endColumn":10,"suggestions":"779"},{"ruleId":"725","severity":1,"message":"780","line":31,"column":13,"nodeType":"727","messageId":"728","endLine":31,"endColumn":22},{"ruleId":"731","severity":1,"message":"781","line":86,"column":8,"nodeType":"733","endLine":86,"endColumn":18,"suggestions":"782"},{"ruleId":"725","severity":1,"message":"762","line":1,"column":17,"nodeType":"727","messageId":"728","endLine":1,"endColumn":25},{"ruleId":"725","severity":1,"message":"763","line":2,"column":8,"nodeType":"727","messageId":"728","endLine":2,"endColumn":13},{"ruleId":"721","replacedBy":"783"},{"ruleId":"723","replacedBy":"784"},{"ruleId":"721","replacedBy":"785"},{"ruleId":"723","replacedBy":"786"},{"ruleId":"731","severity":1,"message":"787","line":88,"column":8,"nodeType":"733","endLine":88,"endColumn":10,"suggestions":"788"},{"ruleId":"755","severity":1,"message":"756","line":107,"column":36,"nodeType":"757","messageId":"758","endLine":107,"endColumn":38},{"ruleId":"725","severity":1,"message":"762","line":1,"column":29,"nodeType":"727","messageId":"728","endLine":1,"endColumn":37},{"ruleId":"731","severity":1,"message":"787","line":87,"column":8,"nodeType":"733","endLine":87,"endColumn":10,"suggestions":"789"},{"ruleId":"755","severity":1,"message":"756","line":106,"column":46,"nodeType":"757","messageId":"758","endLine":106,"endColumn":48},{"ruleId":"790","severity":1,"message":"791","line":42,"column":1,"nodeType":"792","messageId":"793","endLine":47,"endColumn":11},{"ruleId":"731","severity":1,"message":"787","line":96,"column":8,"nodeType":"733","endLine":96,"endColumn":10,"suggestions":"794"},{"ruleId":"755","severity":1,"message":"756","line":127,"column":40,"nodeType":"757","messageId":"758","endLine":127,"endColumn":42},{"ruleId":"731","severity":1,"message":"787","line":104,"column":8,"nodeType":"733","endLine":104,"endColumn":10,"suggestions":"795"},{"ruleId":"755","severity":1,"message":"756","line":150,"column":36,"nodeType":"757","messageId":"758","endLine":150,"endColumn":38},{"ruleId":"755","severity":1,"message":"756","line":169,"column":44,"nodeType":"757","messageId":"758","endLine":169,"endColumn":46},{"ruleId":"725","severity":1,"message":"796","line":5,"column":10,"nodeType":"727","messageId":"728","endLine":5,"endColumn":23},{"ruleId":"725","severity":1,"message":"797","line":6,"column":10,"nodeType":"727","messageId":"728","endLine":6,"endColumn":15},{"ruleId":"725","severity":1,"message":"798","line":7,"column":10,"nodeType":"727","messageId":"728","endLine":7,"endColumn":21},{"ruleId":"725","severity":1,"message":"799","line":8,"column":10,"nodeType":"727","messageId":"728","endLine":8,"endColumn":27},{"ruleId":"725","severity":1,"message":"780","line":36,"column":13,"nodeType":"727","messageId":"728","endLine":36,"endColumn":22},{"ruleId":"725","severity":1,"message":"800","line":39,"column":11,"nodeType":"727","messageId":"728","endLine":39,"endColumn":21},{"ruleId":"725","severity":1,"message":"801","line":39,"column":23,"nodeType":"727","messageId":"728","endLine":39,"endColumn":32},{"ruleId":"725","severity":1,"message":"802","line":39,"column":34,"nodeType":"727","messageId":"728","endLine":39,"endColumn":42},{"ruleId":"725","severity":1,"message":"803","line":39,"column":44,"nodeType":"727","messageId":"728","endLine":39,"endColumn":55},{"ruleId":"725","severity":1,"message":"804","line":39,"column":57,"nodeType":"727","messageId":"728","endLine":39,"endColumn":61},{"ruleId":"725","severity":1,"message":"805","line":39,"column":63,"nodeType":"727","messageId":"728","endLine":39,"endColumn":69},{"ruleId":"725","severity":1,"message":"806","line":39,"column":71,"nodeType":"727","messageId":"728","endLine":39,"endColumn":79},{"ruleId":"725","severity":1,"message":"773","line":39,"column":81,"nodeType":"727","messageId":"728","endLine":39,"endColumn":90},{"ruleId":"731","severity":1,"message":"750","line":90,"column":8,"nodeType":"733","endLine":90,"endColumn":10,"suggestions":"807"},{"ruleId":"731","severity":1,"message":"808","line":49,"column":8,"nodeType":"733","endLine":49,"endColumn":10,"suggestions":"809"},{"ruleId":"731","severity":1,"message":"787","line":87,"column":8,"nodeType":"733","endLine":87,"endColumn":10,"suggestions":"810"},{"ruleId":"755","severity":1,"message":"756","line":106,"column":46,"nodeType":"757","messageId":"758","endLine":106,"endColumn":48},{"ruleId":"731","severity":1,"message":"787","line":82,"column":8,"nodeType":"733","endLine":82,"endColumn":10,"suggestions":"811"},{"ruleId":"755","severity":1,"message":"756","line":101,"column":44,"nodeType":"757","messageId":"758","endLine":101,"endColumn":46},{"ruleId":"725","severity":1,"message":"762","line":1,"column":17,"nodeType":"727","messageId":"728","endLine":1,"endColumn":25},{"ruleId":"725","severity":1,"message":"763","line":2,"column":8,"nodeType":"727","messageId":"728","endLine":2,"endColumn":13},{"ruleId":"725","severity":1,"message":"798","line":7,"column":10,"nodeType":"727","messageId":"728","endLine":7,"endColumn":21},{"ruleId":"731","severity":1,"message":"787","line":98,"column":8,"nodeType":"733","endLine":98,"endColumn":10,"suggestions":"812"},{"ruleId":"755","severity":1,"message":"756","line":150,"column":42,"nodeType":"757","messageId":"758","endLine":150,"endColumn":44},"no-native-reassign",["813"],"no-negated-in-lhs",["814"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'filename' is assigned a value but never used.","'isUploading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.","ArrayExpression",["815"],"'onChange' is defined but never used.","'addUser' is defined but never used.","'fileHandler' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'jwtToken' and 'name'. Either include them or remove the dependency array.",["816"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'isJobsVisible' is assigned a value but never used.","'setIsJobsVisible' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["813"],["814"],"'jobDetails' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'jwtToken'. Either include it or remove the dependency array.",["817"],"React Hook useEffect has missing dependencies: 'jwtToken', 'limit', and 'offset'. Either include them or remove the dependency array.",["818"],["819"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'jobID' is assigned a value but never used.",["820"],["821"],"'useState' is defined but never used.","'axios' is defined but never used.",["822"],"'history' is assigned a value but never used.","'jwtToken' is assigned a value but never used.","'DatePicker' is defined but never used.","'Cookies' is defined but never used.","'Link' is defined but never used.",["823"],["813"],["814"],"'password2' is assigned a value but never used.",["813"],["814"],["813"],["814"],"React Hook useEffect has a missing dependency: 'setShowSideNav'. Either include it or remove the dependency array.",["824"],"'userState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setShowProfileMenu' and 'slug'. Either include them or remove the dependency array.",["825"],["813"],["814"],["813"],["814"],"React Hook useEffect has missing dependencies: 'fetchData' and 'setShowSideNav'. Either include them or remove the dependency array.",["826"],["827"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["828"],["829"],"'ImageUploader' is defined but never used.","'Input' is defined but never used.","'SelectInput' is defined but never used.","'UserPasswordInput' is defined but never used.","'first_name' is assigned a value but never used.","'last_name' is assigned a value but never used.","'username' is assigned a value but never used.","'designation' is assigned a value but never used.","'role' is assigned a value but never used.","'status' is assigned a value but never used.","'password' is assigned a value but never used.",["830"],"React Hook useEffect has missing dependencies: 'jwtToken' and 'location.search'. Either include them or remove the dependency array.",["831"],["832"],["833"],["834"],"no-global-assign","no-unsafe-negation",{"desc":"835","fix":"836"},{"desc":"837","fix":"838"},{"desc":"839","fix":"840"},{"desc":"841","fix":"842"},{"desc":"841","fix":"843"},{"desc":"841","fix":"844"},{"desc":"841","fix":"845"},{"desc":"841","fix":"846"},{"desc":"841","fix":"847"},{"desc":"848","fix":"849"},{"desc":"850","fix":"851"},{"desc":"852","fix":"853"},{"desc":"852","fix":"854"},{"desc":"852","fix":"855"},{"desc":"852","fix":"856"},{"desc":"839","fix":"857"},{"desc":"858","fix":"859"},{"desc":"852","fix":"860"},{"desc":"852","fix":"861"},{"desc":"852","fix":"862"},"Update the dependencies array to be: [slug]",{"range":"863","text":"864"},"Update the dependencies array to be: [jwtToken, name]",{"range":"865","text":"866"},"Update the dependencies array to be: [jwtToken]",{"range":"867","text":"868"},"Update the dependencies array to be: [jwtToken, limit, offset]",{"range":"869","text":"870"},{"range":"871","text":"870"},{"range":"872","text":"870"},{"range":"873","text":"870"},{"range":"874","text":"870"},{"range":"875","text":"870"},"Update the dependencies array to be: [setShowSideNav]",{"range":"876","text":"877"},"Update the dependencies array to be: [editMode, setShowProfileMenu, slug]",{"range":"878","text":"879"},"Update the dependencies array to be: [fetchData, setShowSideNav]",{"range":"880","text":"881"},{"range":"882","text":"881"},{"range":"883","text":"881"},{"range":"884","text":"881"},{"range":"885","text":"868"},"Update the dependencies array to be: [jwtToken, location.search]",{"range":"886","text":"887"},{"range":"888","text":"881"},{"range":"889","text":"881"},{"range":"890","text":"881"},[1512,1514],"[slug]",[792,794],"[jwtToken, name]",[841,843],"[jwtToken]",[2583,2585],"[jwtToken, limit, offset]",[3269,3271],[2449,2451],[2424,2426],[2845,2847],[2928,2930],[696,698],"[setShowSideNav]",[3289,3299],"[editMode, setShowProfileMenu, slug]",[3266,3268],"[fetchData, setShowSideNav]",[3411,3413],[3656,3658],[3838,3840],[3196,3198],[2129,2131],"[jwtToken, location.search]",[3319,3321],[3237,3239],[3663,3665]]